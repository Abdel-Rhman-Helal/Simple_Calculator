
Simple_Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000541c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012a  00800060  0000541c  00005490  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000025b0  00000000  00000000  000055bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c36  00000000  00000000  00007b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000220  00000000  00000000  000087a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000271  00000000  00000000  000089c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a7c  00000000  00000000  00008c33  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001709  00000000  00000000  0000b6af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000153a  00000000  00000000  0000cdb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  0000e2f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000037b  00000000  00000000  0000e534  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e5e  00000000  00000000  0000e8af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000f70d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
       8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
       c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      10:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      14:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      18:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      1c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      20:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      24:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      28:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      30:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      34:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      38:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      3c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      40:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      44:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      48:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      4c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      50:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__subsf3+0x58>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__floatdisf+0x1d2>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z+
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <__ashldi3+0x5a>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <__bad_interrupt>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__muldi3+0x3e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ec e1       	ldi	r30, 0x1C	; 28
     162:	f4 e5       	ldi	r31, 0x54	; 84
     164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
     16a:	aa 38       	cpi	r26, 0x8A	; 138
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>
     170:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <main>
     174:	0c 94 0c 2a 	jmp	0x5418	; 0x5418 <_exit>

00000178 <__bad_interrupt>:
     178:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017c <__muldi3>:
     17c:	a0 e3       	ldi	r26, 0x30	; 48
     17e:	b0 e0       	ldi	r27, 0x00	; 0
     180:	e4 ec       	ldi	r30, 0xC4	; 196
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	0c 94 35 27 	jmp	0x4e6a	; 0x4e6a <__prologue_saves__>
     188:	a8 e0       	ldi	r26, 0x08	; 8
     18a:	4e 01       	movw	r8, r28
     18c:	08 94       	sec
     18e:	81 1c       	adc	r8, r1
     190:	91 1c       	adc	r9, r1
     192:	f4 01       	movw	r30, r8
     194:	ba 2f       	mov	r27, r26
     196:	11 92       	st	Z+, r1
     198:	ba 95       	dec	r27
     19a:	e9 f7       	brne	.-6      	; 0x196 <__muldi3+0x1a>
     19c:	29 83       	std	Y+1, r18	; 0x01
     19e:	3a 83       	std	Y+2, r19	; 0x02
     1a0:	4b 83       	std	Y+3, r20	; 0x03
     1a2:	5c 83       	std	Y+4, r21	; 0x04
     1a4:	6d 83       	std	Y+5, r22	; 0x05
     1a6:	7e 83       	std	Y+6, r23	; 0x06
     1a8:	8f 83       	std	Y+7, r24	; 0x07
     1aa:	98 87       	std	Y+8, r25	; 0x08
     1ac:	ce 01       	movw	r24, r28
     1ae:	09 96       	adiw	r24, 0x09	; 9
     1b0:	fc 01       	movw	r30, r24
     1b2:	11 92       	st	Z+, r1
     1b4:	aa 95       	dec	r26
     1b6:	e9 f7       	brne	.-6      	; 0x1b2 <__muldi3+0x36>
     1b8:	a9 86       	std	Y+9, r10	; 0x09
     1ba:	ba 86       	std	Y+10, r11	; 0x0a
     1bc:	cb 86       	std	Y+11, r12	; 0x0b
     1be:	dc 86       	std	Y+12, r13	; 0x0c
     1c0:	ed 86       	std	Y+13, r14	; 0x0d
     1c2:	fe 86       	std	Y+14, r15	; 0x0e
     1c4:	0f 87       	std	Y+15, r16	; 0x0f
     1c6:	18 8b       	std	Y+16, r17	; 0x10
     1c8:	29 81       	ldd	r18, Y+1	; 0x01
     1ca:	3a 81       	ldd	r19, Y+2	; 0x02
     1cc:	4b 81       	ldd	r20, Y+3	; 0x03
     1ce:	5c 81       	ldd	r21, Y+4	; 0x04
     1d0:	2d a7       	std	Y+45, r18	; 0x2d
     1d2:	3e a7       	std	Y+46, r19	; 0x2e
     1d4:	4f a7       	std	Y+47, r20	; 0x2f
     1d6:	58 ab       	std	Y+48, r21	; 0x30
     1d8:	79 01       	movw	r14, r18
     1da:	8a 01       	movw	r16, r20
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	9f ef       	ldi	r25, 0xFF	; 255
     1e0:	a0 e0       	ldi	r26, 0x00	; 0
     1e2:	b0 e0       	ldi	r27, 0x00	; 0
     1e4:	e8 22       	and	r14, r24
     1e6:	f9 22       	and	r15, r25
     1e8:	0a 23       	and	r16, r26
     1ea:	1b 23       	and	r17, r27
     1ec:	1a 01       	movw	r2, r20
     1ee:	44 24       	eor	r4, r4
     1f0:	55 24       	eor	r5, r5
     1f2:	29 85       	ldd	r18, Y+9	; 0x09
     1f4:	3a 85       	ldd	r19, Y+10	; 0x0a
     1f6:	4b 85       	ldd	r20, Y+11	; 0x0b
     1f8:	5c 85       	ldd	r21, Y+12	; 0x0c
     1fa:	29 a7       	std	Y+41, r18	; 0x29
     1fc:	3a a7       	std	Y+42, r19	; 0x2a
     1fe:	4b a7       	std	Y+43, r20	; 0x2b
     200:	5c a7       	std	Y+44, r21	; 0x2c
     202:	59 01       	movw	r10, r18
     204:	6a 01       	movw	r12, r20
     206:	a8 22       	and	r10, r24
     208:	b9 22       	and	r11, r25
     20a:	ca 22       	and	r12, r26
     20c:	db 22       	and	r13, r27
     20e:	3a 01       	movw	r6, r20
     210:	88 24       	eor	r8, r8
     212:	99 24       	eor	r9, r9
     214:	c6 01       	movw	r24, r12
     216:	b5 01       	movw	r22, r10
     218:	a8 01       	movw	r20, r16
     21a:	97 01       	movw	r18, r14
     21c:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__mulsi3>
     220:	6d a3       	std	Y+37, r22	; 0x25
     222:	7e a3       	std	Y+38, r23	; 0x26
     224:	8f a3       	std	Y+39, r24	; 0x27
     226:	98 a7       	std	Y+40, r25	; 0x28
     228:	c4 01       	movw	r24, r8
     22a:	b3 01       	movw	r22, r6
     22c:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__mulsi3>
     230:	69 a3       	std	Y+33, r22	; 0x21
     232:	7a a3       	std	Y+34, r23	; 0x22
     234:	8b a3       	std	Y+35, r24	; 0x23
     236:	9c a3       	std	Y+36, r25	; 0x24
     238:	c6 01       	movw	r24, r12
     23a:	b5 01       	movw	r22, r10
     23c:	a2 01       	movw	r20, r4
     23e:	91 01       	movw	r18, r2
     240:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__mulsi3>
     244:	7b 01       	movw	r14, r22
     246:	8c 01       	movw	r16, r24
     248:	c4 01       	movw	r24, r8
     24a:	b3 01       	movw	r22, r6
     24c:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__mulsi3>
     250:	5b 01       	movw	r10, r22
     252:	6c 01       	movw	r12, r24
     254:	89 a1       	ldd	r24, Y+33	; 0x21
     256:	9a a1       	ldd	r25, Y+34	; 0x22
     258:	ab a1       	ldd	r26, Y+35	; 0x23
     25a:	bc a1       	ldd	r27, Y+36	; 0x24
     25c:	8e 0d       	add	r24, r14
     25e:	9f 1d       	adc	r25, r15
     260:	a0 1f       	adc	r26, r16
     262:	b1 1f       	adc	r27, r17
     264:	89 a3       	std	Y+33, r24	; 0x21
     266:	9a a3       	std	Y+34, r25	; 0x22
     268:	ab a3       	std	Y+35, r26	; 0x23
     26a:	bc a3       	std	Y+36, r27	; 0x24
     26c:	2d a1       	ldd	r18, Y+37	; 0x25
     26e:	3e a1       	ldd	r19, Y+38	; 0x26
     270:	4f a1       	ldd	r20, Y+39	; 0x27
     272:	58 a5       	ldd	r21, Y+40	; 0x28
     274:	ca 01       	movw	r24, r20
     276:	aa 27       	eor	r26, r26
     278:	bb 27       	eor	r27, r27
     27a:	29 a1       	ldd	r18, Y+33	; 0x21
     27c:	3a a1       	ldd	r19, Y+34	; 0x22
     27e:	4b a1       	ldd	r20, Y+35	; 0x23
     280:	5c a1       	ldd	r21, Y+36	; 0x24
     282:	28 0f       	add	r18, r24
     284:	39 1f       	adc	r19, r25
     286:	4a 1f       	adc	r20, r26
     288:	5b 1f       	adc	r21, r27
     28a:	29 a3       	std	Y+33, r18	; 0x21
     28c:	3a a3       	std	Y+34, r19	; 0x22
     28e:	4b a3       	std	Y+35, r20	; 0x23
     290:	5c a3       	std	Y+36, r21	; 0x24
     292:	2e 15       	cp	r18, r14
     294:	3f 05       	cpc	r19, r15
     296:	40 07       	cpc	r20, r16
     298:	51 07       	cpc	r21, r17
     29a:	40 f4       	brcc	.+16     	; 0x2ac <__muldi3+0x130>
     29c:	80 e0       	ldi	r24, 0x00	; 0
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	a1 e0       	ldi	r26, 0x01	; 1
     2a2:	b0 e0       	ldi	r27, 0x00	; 0
     2a4:	a8 0e       	add	r10, r24
     2a6:	b9 1e       	adc	r11, r25
     2a8:	ca 1e       	adc	r12, r26
     2aa:	db 1e       	adc	r13, r27
     2ac:	89 a1       	ldd	r24, Y+33	; 0x21
     2ae:	9a a1       	ldd	r25, Y+34	; 0x22
     2b0:	ab a1       	ldd	r26, Y+35	; 0x23
     2b2:	bc a1       	ldd	r27, Y+36	; 0x24
     2b4:	9d 01       	movw	r18, r26
     2b6:	44 27       	eor	r20, r20
     2b8:	55 27       	eor	r21, r21
     2ba:	2a 0d       	add	r18, r10
     2bc:	3b 1d       	adc	r19, r11
     2be:	4c 1d       	adc	r20, r12
     2c0:	5d 1d       	adc	r21, r13
     2c2:	2d 8f       	std	Y+29, r18	; 0x1d
     2c4:	3e 8f       	std	Y+30, r19	; 0x1e
     2c6:	4f 8f       	std	Y+31, r20	; 0x1f
     2c8:	58 a3       	std	Y+32, r21	; 0x20
     2ca:	6c 01       	movw	r12, r24
     2cc:	bb 24       	eor	r11, r11
     2ce:	aa 24       	eor	r10, r10
     2d0:	8d a1       	ldd	r24, Y+37	; 0x25
     2d2:	9e a1       	ldd	r25, Y+38	; 0x26
     2d4:	af a1       	ldd	r26, Y+39	; 0x27
     2d6:	b8 a5       	ldd	r27, Y+40	; 0x28
     2d8:	a0 70       	andi	r26, 0x00	; 0
     2da:	b0 70       	andi	r27, 0x00	; 0
     2dc:	a8 0e       	add	r10, r24
     2de:	b9 1e       	adc	r11, r25
     2e0:	ca 1e       	adc	r12, r26
     2e2:	db 1e       	adc	r13, r27
     2e4:	a9 8e       	std	Y+25, r10	; 0x19
     2e6:	ba 8e       	std	Y+26, r11	; 0x1a
     2e8:	cb 8e       	std	Y+27, r12	; 0x1b
     2ea:	dc 8e       	std	Y+28, r13	; 0x1c
     2ec:	9a 8c       	ldd	r9, Y+26	; 0x1a
     2ee:	8b 8c       	ldd	r8, Y+27	; 0x1b
     2f0:	7c 8c       	ldd	r7, Y+28	; 0x1c
     2f2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2f4:	6f 8d       	ldd	r22, Y+31	; 0x1f
     2f6:	78 a1       	ldd	r23, Y+32	; 0x20
     2f8:	fe 01       	movw	r30, r28
     2fa:	71 96       	adiw	r30, 0x11	; 17
     2fc:	88 e0       	ldi	r24, 0x08	; 8
     2fe:	df 01       	movw	r26, r30
     300:	1d 92       	st	X+, r1
     302:	8a 95       	dec	r24
     304:	e9 f7       	brne	.-6      	; 0x300 <__muldi3+0x184>
     306:	2d 8b       	std	Y+21, r18	; 0x15
     308:	9e 8b       	std	Y+22, r25	; 0x16
     30a:	6f 8b       	std	Y+23, r22	; 0x17
     30c:	78 8f       	std	Y+24, r23	; 0x18
     30e:	2d 85       	ldd	r18, Y+13	; 0x0d
     310:	3e 85       	ldd	r19, Y+14	; 0x0e
     312:	4f 85       	ldd	r20, Y+15	; 0x0f
     314:	58 89       	ldd	r21, Y+16	; 0x10
     316:	6d a5       	ldd	r22, Y+45	; 0x2d
     318:	7e a5       	ldd	r23, Y+46	; 0x2e
     31a:	8f a5       	ldd	r24, Y+47	; 0x2f
     31c:	98 a9       	ldd	r25, Y+48	; 0x30
     31e:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__mulsi3>
     322:	7b 01       	movw	r14, r22
     324:	8c 01       	movw	r16, r24
     326:	2d 81       	ldd	r18, Y+5	; 0x05
     328:	3e 81       	ldd	r19, Y+6	; 0x06
     32a:	4f 81       	ldd	r20, Y+7	; 0x07
     32c:	58 85       	ldd	r21, Y+8	; 0x08
     32e:	69 a5       	ldd	r22, Y+41	; 0x29
     330:	7a a5       	ldd	r23, Y+42	; 0x2a
     332:	8b a5       	ldd	r24, Y+43	; 0x2b
     334:	9c a5       	ldd	r25, Y+44	; 0x2c
     336:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__mulsi3>
     33a:	e6 0e       	add	r14, r22
     33c:	f7 1e       	adc	r15, r23
     33e:	08 1f       	adc	r16, r24
     340:	19 1f       	adc	r17, r25
     342:	6d 89       	ldd	r22, Y+21	; 0x15
     344:	7e 89       	ldd	r23, Y+22	; 0x16
     346:	8f 89       	ldd	r24, Y+23	; 0x17
     348:	98 8d       	ldd	r25, Y+24	; 0x18
     34a:	6e 0d       	add	r22, r14
     34c:	7f 1d       	adc	r23, r15
     34e:	80 1f       	adc	r24, r16
     350:	91 1f       	adc	r25, r17
     352:	6d 8b       	std	Y+21, r22	; 0x15
     354:	7e 8b       	std	Y+22, r23	; 0x16
     356:	8f 8b       	std	Y+23, r24	; 0x17
     358:	98 8f       	std	Y+24, r25	; 0x18
     35a:	ee 89       	ldd	r30, Y+22	; 0x16
     35c:	2a 2d       	mov	r18, r10
     35e:	39 2d       	mov	r19, r9
     360:	48 2d       	mov	r20, r8
     362:	57 2d       	mov	r21, r7
     364:	7e 2f       	mov	r23, r30
     366:	8f 89       	ldd	r24, Y+23	; 0x17
     368:	98 8d       	ldd	r25, Y+24	; 0x18
     36a:	e0 96       	adiw	r28, 0x30	; 48
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 51 27 	jmp	0x4ea2	; 0x4ea2 <__epilogue_restores__>

00000372 <__ashldi3>:
     372:	ef 92       	push	r14
     374:	ff 92       	push	r15
     376:	0f 93       	push	r16
     378:	df 93       	push	r29
     37a:	cf 93       	push	r28
     37c:	cd b7       	in	r28, 0x3d	; 61
     37e:	de b7       	in	r29, 0x3e	; 62
     380:	60 97       	sbiw	r28, 0x10	; 16
     382:	0f b6       	in	r0, 0x3f	; 63
     384:	f8 94       	cli
     386:	de bf       	out	0x3e, r29	; 62
     388:	0f be       	out	0x3f, r0	; 63
     38a:	cd bf       	out	0x3d, r28	; 61
     38c:	a8 2f       	mov	r26, r24
     38e:	00 23       	and	r16, r16
     390:	09 f4       	brne	.+2      	; 0x394 <__ashldi3+0x22>
     392:	61 c0       	rjmp	.+194    	; 0x456 <__ashldi3+0xe4>
     394:	7e 01       	movw	r14, r28
     396:	08 94       	sec
     398:	e1 1c       	adc	r14, r1
     39a:	f1 1c       	adc	r15, r1
     39c:	88 e0       	ldi	r24, 0x08	; 8
     39e:	f7 01       	movw	r30, r14
     3a0:	11 92       	st	Z+, r1
     3a2:	8a 95       	dec	r24
     3a4:	e9 f7       	brne	.-6      	; 0x3a0 <__ashldi3+0x2e>
     3a6:	29 83       	std	Y+1, r18	; 0x01
     3a8:	3a 83       	std	Y+2, r19	; 0x02
     3aa:	4b 83       	std	Y+3, r20	; 0x03
     3ac:	5c 83       	std	Y+4, r21	; 0x04
     3ae:	6d 83       	std	Y+5, r22	; 0x05
     3b0:	7e 83       	std	Y+6, r23	; 0x06
     3b2:	af 83       	std	Y+7, r26	; 0x07
     3b4:	98 87       	std	Y+8, r25	; 0x08
     3b6:	80 e2       	ldi	r24, 0x20	; 32
     3b8:	80 1b       	sub	r24, r16
     3ba:	e8 2f       	mov	r30, r24
     3bc:	ff 27       	eor	r31, r31
     3be:	e7 fd       	sbrc	r30, 7
     3c0:	f0 95       	com	r31
     3c2:	49 81       	ldd	r20, Y+1	; 0x01
     3c4:	5a 81       	ldd	r21, Y+2	; 0x02
     3c6:	6b 81       	ldd	r22, Y+3	; 0x03
     3c8:	7c 81       	ldd	r23, Y+4	; 0x04
     3ca:	18 16       	cp	r1, r24
     3cc:	84 f0       	brlt	.+32     	; 0x3ee <__ashldi3+0x7c>
     3ce:	19 86       	std	Y+9, r1	; 0x09
     3d0:	1a 86       	std	Y+10, r1	; 0x0a
     3d2:	1b 86       	std	Y+11, r1	; 0x0b
     3d4:	1c 86       	std	Y+12, r1	; 0x0c
     3d6:	88 27       	eor	r24, r24
     3d8:	99 27       	eor	r25, r25
     3da:	8e 1b       	sub	r24, r30
     3dc:	9f 0b       	sbc	r25, r31
     3de:	04 c0       	rjmp	.+8      	; 0x3e8 <__ashldi3+0x76>
     3e0:	44 0f       	add	r20, r20
     3e2:	55 1f       	adc	r21, r21
     3e4:	66 1f       	adc	r22, r22
     3e6:	77 1f       	adc	r23, r23
     3e8:	8a 95       	dec	r24
     3ea:	d2 f7       	brpl	.-12     	; 0x3e0 <__ashldi3+0x6e>
     3ec:	28 c0       	rjmp	.+80     	; 0x43e <__ashldi3+0xcc>
     3ee:	20 2f       	mov	r18, r16
     3f0:	33 27       	eor	r19, r19
     3f2:	27 fd       	sbrc	r18, 7
     3f4:	30 95       	com	r19
     3f6:	db 01       	movw	r26, r22
     3f8:	ca 01       	movw	r24, r20
     3fa:	02 2e       	mov	r0, r18
     3fc:	04 c0       	rjmp	.+8      	; 0x406 <__ashldi3+0x94>
     3fe:	88 0f       	add	r24, r24
     400:	99 1f       	adc	r25, r25
     402:	aa 1f       	adc	r26, r26
     404:	bb 1f       	adc	r27, r27
     406:	0a 94       	dec	r0
     408:	d2 f7       	brpl	.-12     	; 0x3fe <__ashldi3+0x8c>
     40a:	89 87       	std	Y+9, r24	; 0x09
     40c:	9a 87       	std	Y+10, r25	; 0x0a
     40e:	ab 87       	std	Y+11, r26	; 0x0b
     410:	bc 87       	std	Y+12, r27	; 0x0c
     412:	04 c0       	rjmp	.+8      	; 0x41c <__ashldi3+0xaa>
     414:	76 95       	lsr	r23
     416:	67 95       	ror	r22
     418:	57 95       	ror	r21
     41a:	47 95       	ror	r20
     41c:	ea 95       	dec	r30
     41e:	d2 f7       	brpl	.-12     	; 0x414 <__ashldi3+0xa2>
     420:	8d 81       	ldd	r24, Y+5	; 0x05
     422:	9e 81       	ldd	r25, Y+6	; 0x06
     424:	af 81       	ldd	r26, Y+7	; 0x07
     426:	b8 85       	ldd	r27, Y+8	; 0x08
     428:	04 c0       	rjmp	.+8      	; 0x432 <__ashldi3+0xc0>
     42a:	88 0f       	add	r24, r24
     42c:	99 1f       	adc	r25, r25
     42e:	aa 1f       	adc	r26, r26
     430:	bb 1f       	adc	r27, r27
     432:	2a 95       	dec	r18
     434:	d2 f7       	brpl	.-12     	; 0x42a <__ashldi3+0xb8>
     436:	48 2b       	or	r20, r24
     438:	59 2b       	or	r21, r25
     43a:	6a 2b       	or	r22, r26
     43c:	7b 2b       	or	r23, r27
     43e:	4d 87       	std	Y+13, r20	; 0x0d
     440:	5e 87       	std	Y+14, r21	; 0x0e
     442:	6f 87       	std	Y+15, r22	; 0x0f
     444:	78 8b       	std	Y+16, r23	; 0x10
     446:	29 85       	ldd	r18, Y+9	; 0x09
     448:	3a 85       	ldd	r19, Y+10	; 0x0a
     44a:	4b 85       	ldd	r20, Y+11	; 0x0b
     44c:	5c 85       	ldd	r21, Y+12	; 0x0c
     44e:	6d 85       	ldd	r22, Y+13	; 0x0d
     450:	7e 85       	ldd	r23, Y+14	; 0x0e
     452:	af 85       	ldd	r26, Y+15	; 0x0f
     454:	98 89       	ldd	r25, Y+16	; 0x10
     456:	8a 2f       	mov	r24, r26
     458:	60 96       	adiw	r28, 0x10	; 16
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	f8 94       	cli
     45e:	de bf       	out	0x3e, r29	; 62
     460:	0f be       	out	0x3f, r0	; 63
     462:	cd bf       	out	0x3d, r28	; 61
     464:	cf 91       	pop	r28
     466:	df 91       	pop	r29
     468:	0f 91       	pop	r16
     46a:	ff 90       	pop	r15
     46c:	ef 90       	pop	r14
     46e:	08 95       	ret

00000470 <__fixunssfsi>:
     470:	ef 92       	push	r14
     472:	ff 92       	push	r15
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	7b 01       	movw	r14, r22
     47a:	8c 01       	movw	r16, r24
     47c:	20 e0       	ldi	r18, 0x00	; 0
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	40 e0       	ldi	r20, 0x00	; 0
     482:	5f e4       	ldi	r21, 0x4F	; 79
     484:	0e 94 df 06 	call	0xdbe	; 0xdbe <__gesf2>
     488:	88 23       	and	r24, r24
     48a:	8c f0       	brlt	.+34     	; 0x4ae <__fixunssfsi+0x3e>
     48c:	c8 01       	movw	r24, r16
     48e:	b7 01       	movw	r22, r14
     490:	20 e0       	ldi	r18, 0x00	; 0
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	40 e0       	ldi	r20, 0x00	; 0
     496:	5f e4       	ldi	r21, 0x4F	; 79
     498:	0e 94 ab 04 	call	0x956	; 0x956 <__subsf3>
     49c:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__fixsfsi>
     4a0:	9b 01       	movw	r18, r22
     4a2:	ac 01       	movw	r20, r24
     4a4:	20 50       	subi	r18, 0x00	; 0
     4a6:	30 40       	sbci	r19, 0x00	; 0
     4a8:	40 40       	sbci	r20, 0x00	; 0
     4aa:	50 48       	sbci	r21, 0x80	; 128
     4ac:	06 c0       	rjmp	.+12     	; 0x4ba <__fixunssfsi+0x4a>
     4ae:	c8 01       	movw	r24, r16
     4b0:	b7 01       	movw	r22, r14
     4b2:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__fixsfsi>
     4b6:	9b 01       	movw	r18, r22
     4b8:	ac 01       	movw	r20, r24
     4ba:	b9 01       	movw	r22, r18
     4bc:	ca 01       	movw	r24, r20
     4be:	1f 91       	pop	r17
     4c0:	0f 91       	pop	r16
     4c2:	ff 90       	pop	r15
     4c4:	ef 90       	pop	r14
     4c6:	08 95       	ret

000004c8 <__floatdisf>:
     4c8:	a4 e0       	ldi	r26, 0x04	; 4
     4ca:	b0 e0       	ldi	r27, 0x00	; 0
     4cc:	ea e6       	ldi	r30, 0x6A	; 106
     4ce:	f2 e0       	ldi	r31, 0x02	; 2
     4d0:	0c 94 37 27 	jmp	0x4e6e	; 0x4e6e <__prologue_saves__+0x4>
     4d4:	49 01       	movw	r8, r18
     4d6:	5a 01       	movw	r10, r20
     4d8:	6b 01       	movw	r12, r22
     4da:	7c 01       	movw	r14, r24
     4dc:	d5 01       	movw	r26, r10
     4de:	c4 01       	movw	r24, r8
     4e0:	9c 01       	movw	r18, r24
     4e2:	ad 01       	movw	r20, r26
     4e4:	55 0f       	add	r21, r21
     4e6:	22 0b       	sbc	r18, r18
     4e8:	32 2f       	mov	r19, r18
     4ea:	a9 01       	movw	r20, r18
     4ec:	88 15       	cp	r24, r8
     4ee:	99 f4       	brne	.+38     	; 0x516 <__floatdisf+0x4e>
     4f0:	99 15       	cp	r25, r9
     4f2:	89 f4       	brne	.+34     	; 0x516 <__floatdisf+0x4e>
     4f4:	aa 15       	cp	r26, r10
     4f6:	79 f4       	brne	.+30     	; 0x516 <__floatdisf+0x4e>
     4f8:	bb 15       	cp	r27, r11
     4fa:	69 f4       	brne	.+26     	; 0x516 <__floatdisf+0x4e>
     4fc:	2c 15       	cp	r18, r12
     4fe:	59 f4       	brne	.+22     	; 0x516 <__floatdisf+0x4e>
     500:	2d 15       	cp	r18, r13
     502:	49 f4       	brne	.+18     	; 0x516 <__floatdisf+0x4e>
     504:	2e 15       	cp	r18, r14
     506:	39 f4       	brne	.+14     	; 0x516 <__floatdisf+0x4e>
     508:	2f 15       	cp	r18, r15
     50a:	29 f4       	brne	.+10     	; 0x516 <__floatdisf+0x4e>
     50c:	c5 01       	movw	r24, r10
     50e:	b4 01       	movw	r22, r8
     510:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__floatsisf>
     514:	d0 c0       	rjmp	.+416    	; 0x6b6 <__floatdisf+0x1ee>
     516:	94 01       	movw	r18, r8
     518:	a5 01       	movw	r20, r10
     51a:	b6 01       	movw	r22, r12
     51c:	c7 01       	movw	r24, r14
     51e:	00 e2       	ldi	r16, 0x20	; 32
     520:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__ashrdi3>
     524:	c9 01       	movw	r24, r18
     526:	a4 2f       	mov	r26, r20
     528:	b5 2f       	mov	r27, r21
     52a:	b7 ff       	sbrs	r27, 7
     52c:	07 c0       	rjmp	.+14     	; 0x53c <__floatdisf+0x74>
     52e:	b0 95       	com	r27
     530:	a0 95       	com	r26
     532:	90 95       	com	r25
     534:	81 95       	neg	r24
     536:	9f 4f       	sbci	r25, 0xFF	; 255
     538:	af 4f       	sbci	r26, 0xFF	; 255
     53a:	bf 4f       	sbci	r27, 0xFF	; 255
     53c:	80 30       	cpi	r24, 0x00	; 0
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	92 07       	cpc	r25, r18
     542:	21 e0       	ldi	r18, 0x01	; 1
     544:	a2 07       	cpc	r26, r18
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	b2 07       	cpc	r27, r18
     54a:	80 f4       	brcc	.+32     	; 0x56c <__floatdisf+0xa4>
     54c:	8f 3f       	cpi	r24, 0xFF	; 255
     54e:	91 05       	cpc	r25, r1
     550:	a1 05       	cpc	r26, r1
     552:	b1 05       	cpc	r27, r1
     554:	31 f0       	breq	.+12     	; 0x562 <__floatdisf+0x9a>
     556:	28 f0       	brcs	.+10     	; 0x562 <__floatdisf+0x9a>
     558:	28 e0       	ldi	r18, 0x08	; 8
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	40 e0       	ldi	r20, 0x00	; 0
     55e:	50 e0       	ldi	r21, 0x00	; 0
     560:	16 c0       	rjmp	.+44     	; 0x58e <__floatdisf+0xc6>
     562:	20 e0       	ldi	r18, 0x00	; 0
     564:	30 e0       	ldi	r19, 0x00	; 0
     566:	40 e0       	ldi	r20, 0x00	; 0
     568:	50 e0       	ldi	r21, 0x00	; 0
     56a:	11 c0       	rjmp	.+34     	; 0x58e <__floatdisf+0xc6>
     56c:	80 30       	cpi	r24, 0x00	; 0
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	93 07       	cpc	r25, r19
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	a3 07       	cpc	r26, r19
     576:	31 e0       	ldi	r19, 0x01	; 1
     578:	b3 07       	cpc	r27, r19
     57a:	28 f0       	brcs	.+10     	; 0x586 <__floatdisf+0xbe>
     57c:	28 e1       	ldi	r18, 0x18	; 24
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	40 e0       	ldi	r20, 0x00	; 0
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	04 c0       	rjmp	.+8      	; 0x58e <__floatdisf+0xc6>
     586:	20 e1       	ldi	r18, 0x10	; 16
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	40 e0       	ldi	r20, 0x00	; 0
     58c:	50 e0       	ldi	r21, 0x00	; 0
     58e:	60 e2       	ldi	r22, 0x20	; 32
     590:	46 2e       	mov	r4, r22
     592:	51 2c       	mov	r5, r1
     594:	61 2c       	mov	r6, r1
     596:	71 2c       	mov	r7, r1
     598:	42 1a       	sub	r4, r18
     59a:	53 0a       	sbc	r5, r19
     59c:	64 0a       	sbc	r6, r20
     59e:	75 0a       	sbc	r7, r21
     5a0:	04 c0       	rjmp	.+8      	; 0x5aa <__floatdisf+0xe2>
     5a2:	b6 95       	lsr	r27
     5a4:	a7 95       	ror	r26
     5a6:	97 95       	ror	r25
     5a8:	87 95       	ror	r24
     5aa:	2a 95       	dec	r18
     5ac:	d2 f7       	brpl	.-12     	; 0x5a2 <__floatdisf+0xda>
     5ae:	fc 01       	movw	r30, r24
     5b0:	e6 58       	subi	r30, 0x86	; 134
     5b2:	ff 4f       	sbci	r31, 0xFF	; 255
     5b4:	80 81       	ld	r24, Z
     5b6:	48 1a       	sub	r4, r24
     5b8:	51 08       	sbc	r5, r1
     5ba:	61 08       	sbc	r6, r1
     5bc:	71 08       	sbc	r7, r1
     5be:	41 14       	cp	r4, r1
     5c0:	51 04       	cpc	r5, r1
     5c2:	61 04       	cpc	r6, r1
     5c4:	71 04       	cpc	r7, r1
     5c6:	29 f4       	brne	.+10     	; 0x5d2 <__floatdisf+0x10a>
     5c8:	60 e0       	ldi	r22, 0x00	; 0
     5ca:	70 e0       	ldi	r23, 0x00	; 0
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	9f ed       	ldi	r25, 0xDF	; 223
     5d0:	72 c0       	rjmp	.+228    	; 0x6b6 <__floatdisf+0x1ee>
     5d2:	81 e2       	ldi	r24, 0x21	; 33
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	a0 e0       	ldi	r26, 0x00	; 0
     5d8:	b0 e0       	ldi	r27, 0x00	; 0
     5da:	84 19       	sub	r24, r4
     5dc:	95 09       	sbc	r25, r5
     5de:	a6 09       	sbc	r26, r6
     5e0:	b7 09       	sbc	r27, r7
     5e2:	89 83       	std	Y+1, r24	; 0x01
     5e4:	9a 83       	std	Y+2, r25	; 0x02
     5e6:	ab 83       	std	Y+3, r26	; 0x03
     5e8:	bc 83       	std	Y+4, r27	; 0x04
     5ea:	19 81       	ldd	r17, Y+1	; 0x01
     5ec:	94 01       	movw	r18, r8
     5ee:	a5 01       	movw	r20, r10
     5f0:	b6 01       	movw	r22, r12
     5f2:	c7 01       	movw	r24, r14
     5f4:	01 2f       	mov	r16, r17
     5f6:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__ashrdi3>
     5fa:	c9 01       	movw	r24, r18
     5fc:	da 01       	movw	r26, r20
     5fe:	2c 01       	movw	r4, r24
     600:	3d 01       	movw	r6, r26
     602:	80 e2       	ldi	r24, 0x20	; 32
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	a9 81       	ldd	r26, Y+1	; 0x01
     608:	ba 81       	ldd	r27, Y+2	; 0x02
     60a:	8a 1b       	sub	r24, r26
     60c:	9b 0b       	sbc	r25, r27
     60e:	a5 01       	movw	r20, r10
     610:	94 01       	movw	r18, r8
     612:	04 c0       	rjmp	.+8      	; 0x61c <__floatdisf+0x154>
     614:	22 0f       	add	r18, r18
     616:	33 1f       	adc	r19, r19
     618:	44 1f       	adc	r20, r20
     61a:	55 1f       	adc	r21, r21
     61c:	8a 95       	dec	r24
     61e:	d2 f7       	brpl	.-12     	; 0x614 <__floatdisf+0x14c>
     620:	21 15       	cp	r18, r1
     622:	31 05       	cpc	r19, r1
     624:	41 05       	cpc	r20, r1
     626:	51 05       	cpc	r21, r1
     628:	41 f0       	breq	.+16     	; 0x63a <__floatdisf+0x172>
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	a0 e0       	ldi	r26, 0x00	; 0
     630:	b0 e0       	ldi	r27, 0x00	; 0
     632:	48 2a       	or	r4, r24
     634:	59 2a       	or	r5, r25
     636:	6a 2a       	or	r6, r26
     638:	7b 2a       	or	r7, r27
     63a:	29 81       	ldd	r18, Y+1	; 0x01
     63c:	3a 81       	ldd	r19, Y+2	; 0x02
     63e:	4b 81       	ldd	r20, Y+3	; 0x03
     640:	5c 81       	ldd	r21, Y+4	; 0x04
     642:	20 32       	cpi	r18, 0x20	; 32
     644:	31 05       	cpc	r19, r1
     646:	41 05       	cpc	r20, r1
     648:	51 05       	cpc	r21, r1
     64a:	59 f4       	brne	.+22     	; 0x662 <__floatdisf+0x19a>
     64c:	0f 2e       	mov	r0, r31
     64e:	f0 e0       	ldi	r31, 0x00	; 0
     650:	cf 2e       	mov	r12, r31
     652:	f0 e0       	ldi	r31, 0x00	; 0
     654:	df 2e       	mov	r13, r31
     656:	f0 e8       	ldi	r31, 0x80	; 128
     658:	ef 2e       	mov	r14, r31
     65a:	ff e4       	ldi	r31, 0x4F	; 79
     65c:	ff 2e       	mov	r15, r31
     65e:	f0 2d       	mov	r31, r0
     660:	22 c0       	rjmp	.+68     	; 0x6a6 <__floatdisf+0x1de>
     662:	89 81       	ldd	r24, Y+1	; 0x01
     664:	9a 81       	ldd	r25, Y+2	; 0x02
     666:	ab 81       	ldd	r26, Y+3	; 0x03
     668:	bc 81       	ldd	r27, Y+4	; 0x04
     66a:	4f 97       	sbiw	r24, 0x1f	; 31
     66c:	a1 05       	cpc	r26, r1
     66e:	b1 05       	cpc	r27, r1
     670:	59 f4       	brne	.+22     	; 0x688 <__floatdisf+0x1c0>
     672:	0f 2e       	mov	r0, r31
     674:	f0 e0       	ldi	r31, 0x00	; 0
     676:	cf 2e       	mov	r12, r31
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	df 2e       	mov	r13, r31
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	ef 2e       	mov	r14, r31
     680:	ff e4       	ldi	r31, 0x4F	; 79
     682:	ff 2e       	mov	r15, r31
     684:	f0 2d       	mov	r31, r0
     686:	0f c0       	rjmp	.+30     	; 0x6a6 <__floatdisf+0x1de>
     688:	61 e0       	ldi	r22, 0x01	; 1
     68a:	70 e0       	ldi	r23, 0x00	; 0
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	04 c0       	rjmp	.+8      	; 0x69a <__floatdisf+0x1d2>
     692:	66 0f       	add	r22, r22
     694:	77 1f       	adc	r23, r23
     696:	88 1f       	adc	r24, r24
     698:	99 1f       	adc	r25, r25
     69a:	1a 95       	dec	r17
     69c:	d2 f7       	brpl	.-12     	; 0x692 <__floatdisf+0x1ca>
     69e:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__floatsisf>
     6a2:	6b 01       	movw	r12, r22
     6a4:	7c 01       	movw	r14, r24
     6a6:	c3 01       	movw	r24, r6
     6a8:	b2 01       	movw	r22, r4
     6aa:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__floatsisf>
     6ae:	a7 01       	movw	r20, r14
     6b0:	96 01       	movw	r18, r12
     6b2:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
     6b6:	24 96       	adiw	r28, 0x04	; 4
     6b8:	e0 e1       	ldi	r30, 0x10	; 16
     6ba:	0c 94 53 27 	jmp	0x4ea6	; 0x4ea6 <__epilogue_restores__+0x4>

000006be <_fpadd_parts>:
     6be:	a0 e0       	ldi	r26, 0x00	; 0
     6c0:	b0 e0       	ldi	r27, 0x00	; 0
     6c2:	e5 e6       	ldi	r30, 0x65	; 101
     6c4:	f3 e0       	ldi	r31, 0x03	; 3
     6c6:	0c 94 35 27 	jmp	0x4e6a	; 0x4e6a <__prologue_saves__>
     6ca:	dc 01       	movw	r26, r24
     6cc:	2b 01       	movw	r4, r22
     6ce:	fa 01       	movw	r30, r20
     6d0:	9c 91       	ld	r25, X
     6d2:	92 30       	cpi	r25, 0x02	; 2
     6d4:	08 f4       	brcc	.+2      	; 0x6d8 <_fpadd_parts+0x1a>
     6d6:	39 c1       	rjmp	.+626    	; 0x94a <__stack+0xeb>
     6d8:	eb 01       	movw	r28, r22
     6da:	88 81       	ld	r24, Y
     6dc:	82 30       	cpi	r24, 0x02	; 2
     6de:	08 f4       	brcc	.+2      	; 0x6e2 <_fpadd_parts+0x24>
     6e0:	33 c1       	rjmp	.+614    	; 0x948 <__stack+0xe9>
     6e2:	94 30       	cpi	r25, 0x04	; 4
     6e4:	69 f4       	brne	.+26     	; 0x700 <_fpadd_parts+0x42>
     6e6:	84 30       	cpi	r24, 0x04	; 4
     6e8:	09 f0       	breq	.+2      	; 0x6ec <_fpadd_parts+0x2e>
     6ea:	2f c1       	rjmp	.+606    	; 0x94a <__stack+0xeb>
     6ec:	11 96       	adiw	r26, 0x01	; 1
     6ee:	9c 91       	ld	r25, X
     6f0:	11 97       	sbiw	r26, 0x01	; 1
     6f2:	89 81       	ldd	r24, Y+1	; 0x01
     6f4:	98 17       	cp	r25, r24
     6f6:	09 f4       	brne	.+2      	; 0x6fa <_fpadd_parts+0x3c>
     6f8:	28 c1       	rjmp	.+592    	; 0x94a <__stack+0xeb>
     6fa:	a2 e7       	ldi	r26, 0x72	; 114
     6fc:	b0 e0       	ldi	r27, 0x00	; 0
     6fe:	25 c1       	rjmp	.+586    	; 0x94a <__stack+0xeb>
     700:	84 30       	cpi	r24, 0x04	; 4
     702:	09 f4       	brne	.+2      	; 0x706 <_fpadd_parts+0x48>
     704:	21 c1       	rjmp	.+578    	; 0x948 <__stack+0xe9>
     706:	82 30       	cpi	r24, 0x02	; 2
     708:	a9 f4       	brne	.+42     	; 0x734 <_fpadd_parts+0x76>
     70a:	92 30       	cpi	r25, 0x02	; 2
     70c:	09 f0       	breq	.+2      	; 0x710 <_fpadd_parts+0x52>
     70e:	1d c1       	rjmp	.+570    	; 0x94a <__stack+0xeb>
     710:	9a 01       	movw	r18, r20
     712:	ad 01       	movw	r20, r26
     714:	88 e0       	ldi	r24, 0x08	; 8
     716:	ea 01       	movw	r28, r20
     718:	09 90       	ld	r0, Y+
     71a:	ae 01       	movw	r20, r28
     71c:	e9 01       	movw	r28, r18
     71e:	09 92       	st	Y+, r0
     720:	9e 01       	movw	r18, r28
     722:	81 50       	subi	r24, 0x01	; 1
     724:	c1 f7       	brne	.-16     	; 0x716 <_fpadd_parts+0x58>
     726:	e2 01       	movw	r28, r4
     728:	89 81       	ldd	r24, Y+1	; 0x01
     72a:	11 96       	adiw	r26, 0x01	; 1
     72c:	9c 91       	ld	r25, X
     72e:	89 23       	and	r24, r25
     730:	81 83       	std	Z+1, r24	; 0x01
     732:	08 c1       	rjmp	.+528    	; 0x944 <__stack+0xe5>
     734:	92 30       	cpi	r25, 0x02	; 2
     736:	09 f4       	brne	.+2      	; 0x73a <_fpadd_parts+0x7c>
     738:	07 c1       	rjmp	.+526    	; 0x948 <__stack+0xe9>
     73a:	12 96       	adiw	r26, 0x02	; 2
     73c:	2d 90       	ld	r2, X+
     73e:	3c 90       	ld	r3, X
     740:	13 97       	sbiw	r26, 0x03	; 3
     742:	eb 01       	movw	r28, r22
     744:	8a 81       	ldd	r24, Y+2	; 0x02
     746:	9b 81       	ldd	r25, Y+3	; 0x03
     748:	14 96       	adiw	r26, 0x04	; 4
     74a:	ad 90       	ld	r10, X+
     74c:	bd 90       	ld	r11, X+
     74e:	cd 90       	ld	r12, X+
     750:	dc 90       	ld	r13, X
     752:	17 97       	sbiw	r26, 0x07	; 7
     754:	ec 80       	ldd	r14, Y+4	; 0x04
     756:	fd 80       	ldd	r15, Y+5	; 0x05
     758:	0e 81       	ldd	r16, Y+6	; 0x06
     75a:	1f 81       	ldd	r17, Y+7	; 0x07
     75c:	91 01       	movw	r18, r2
     75e:	28 1b       	sub	r18, r24
     760:	39 0b       	sbc	r19, r25
     762:	b9 01       	movw	r22, r18
     764:	37 ff       	sbrs	r19, 7
     766:	04 c0       	rjmp	.+8      	; 0x770 <_fpadd_parts+0xb2>
     768:	66 27       	eor	r22, r22
     76a:	77 27       	eor	r23, r23
     76c:	62 1b       	sub	r22, r18
     76e:	73 0b       	sbc	r23, r19
     770:	60 32       	cpi	r22, 0x20	; 32
     772:	71 05       	cpc	r23, r1
     774:	0c f0       	brlt	.+2      	; 0x778 <_fpadd_parts+0xba>
     776:	61 c0       	rjmp	.+194    	; 0x83a <_fpadd_parts+0x17c>
     778:	12 16       	cp	r1, r18
     77a:	13 06       	cpc	r1, r19
     77c:	6c f5       	brge	.+90     	; 0x7d8 <_fpadd_parts+0x11a>
     77e:	37 01       	movw	r6, r14
     780:	48 01       	movw	r8, r16
     782:	06 2e       	mov	r0, r22
     784:	04 c0       	rjmp	.+8      	; 0x78e <_fpadd_parts+0xd0>
     786:	96 94       	lsr	r9
     788:	87 94       	ror	r8
     78a:	77 94       	ror	r7
     78c:	67 94       	ror	r6
     78e:	0a 94       	dec	r0
     790:	d2 f7       	brpl	.-12     	; 0x786 <_fpadd_parts+0xc8>
     792:	21 e0       	ldi	r18, 0x01	; 1
     794:	30 e0       	ldi	r19, 0x00	; 0
     796:	40 e0       	ldi	r20, 0x00	; 0
     798:	50 e0       	ldi	r21, 0x00	; 0
     79a:	04 c0       	rjmp	.+8      	; 0x7a4 <_fpadd_parts+0xe6>
     79c:	22 0f       	add	r18, r18
     79e:	33 1f       	adc	r19, r19
     7a0:	44 1f       	adc	r20, r20
     7a2:	55 1f       	adc	r21, r21
     7a4:	6a 95       	dec	r22
     7a6:	d2 f7       	brpl	.-12     	; 0x79c <_fpadd_parts+0xde>
     7a8:	21 50       	subi	r18, 0x01	; 1
     7aa:	30 40       	sbci	r19, 0x00	; 0
     7ac:	40 40       	sbci	r20, 0x00	; 0
     7ae:	50 40       	sbci	r21, 0x00	; 0
     7b0:	2e 21       	and	r18, r14
     7b2:	3f 21       	and	r19, r15
     7b4:	40 23       	and	r20, r16
     7b6:	51 23       	and	r21, r17
     7b8:	21 15       	cp	r18, r1
     7ba:	31 05       	cpc	r19, r1
     7bc:	41 05       	cpc	r20, r1
     7be:	51 05       	cpc	r21, r1
     7c0:	21 f0       	breq	.+8      	; 0x7ca <_fpadd_parts+0x10c>
     7c2:	21 e0       	ldi	r18, 0x01	; 1
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	79 01       	movw	r14, r18
     7cc:	8a 01       	movw	r16, r20
     7ce:	e6 28       	or	r14, r6
     7d0:	f7 28       	or	r15, r7
     7d2:	08 29       	or	r16, r8
     7d4:	19 29       	or	r17, r9
     7d6:	3c c0       	rjmp	.+120    	; 0x850 <_fpadd_parts+0x192>
     7d8:	23 2b       	or	r18, r19
     7da:	d1 f1       	breq	.+116    	; 0x850 <_fpadd_parts+0x192>
     7dc:	26 0e       	add	r2, r22
     7de:	37 1e       	adc	r3, r23
     7e0:	35 01       	movw	r6, r10
     7e2:	46 01       	movw	r8, r12
     7e4:	06 2e       	mov	r0, r22
     7e6:	04 c0       	rjmp	.+8      	; 0x7f0 <_fpadd_parts+0x132>
     7e8:	96 94       	lsr	r9
     7ea:	87 94       	ror	r8
     7ec:	77 94       	ror	r7
     7ee:	67 94       	ror	r6
     7f0:	0a 94       	dec	r0
     7f2:	d2 f7       	brpl	.-12     	; 0x7e8 <_fpadd_parts+0x12a>
     7f4:	21 e0       	ldi	r18, 0x01	; 1
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	50 e0       	ldi	r21, 0x00	; 0
     7fc:	04 c0       	rjmp	.+8      	; 0x806 <_fpadd_parts+0x148>
     7fe:	22 0f       	add	r18, r18
     800:	33 1f       	adc	r19, r19
     802:	44 1f       	adc	r20, r20
     804:	55 1f       	adc	r21, r21
     806:	6a 95       	dec	r22
     808:	d2 f7       	brpl	.-12     	; 0x7fe <_fpadd_parts+0x140>
     80a:	21 50       	subi	r18, 0x01	; 1
     80c:	30 40       	sbci	r19, 0x00	; 0
     80e:	40 40       	sbci	r20, 0x00	; 0
     810:	50 40       	sbci	r21, 0x00	; 0
     812:	2a 21       	and	r18, r10
     814:	3b 21       	and	r19, r11
     816:	4c 21       	and	r20, r12
     818:	5d 21       	and	r21, r13
     81a:	21 15       	cp	r18, r1
     81c:	31 05       	cpc	r19, r1
     81e:	41 05       	cpc	r20, r1
     820:	51 05       	cpc	r21, r1
     822:	21 f0       	breq	.+8      	; 0x82c <_fpadd_parts+0x16e>
     824:	21 e0       	ldi	r18, 0x01	; 1
     826:	30 e0       	ldi	r19, 0x00	; 0
     828:	40 e0       	ldi	r20, 0x00	; 0
     82a:	50 e0       	ldi	r21, 0x00	; 0
     82c:	59 01       	movw	r10, r18
     82e:	6a 01       	movw	r12, r20
     830:	a6 28       	or	r10, r6
     832:	b7 28       	or	r11, r7
     834:	c8 28       	or	r12, r8
     836:	d9 28       	or	r13, r9
     838:	0b c0       	rjmp	.+22     	; 0x850 <_fpadd_parts+0x192>
     83a:	82 15       	cp	r24, r2
     83c:	93 05       	cpc	r25, r3
     83e:	2c f0       	brlt	.+10     	; 0x84a <_fpadd_parts+0x18c>
     840:	1c 01       	movw	r2, r24
     842:	aa 24       	eor	r10, r10
     844:	bb 24       	eor	r11, r11
     846:	65 01       	movw	r12, r10
     848:	03 c0       	rjmp	.+6      	; 0x850 <_fpadd_parts+0x192>
     84a:	ee 24       	eor	r14, r14
     84c:	ff 24       	eor	r15, r15
     84e:	87 01       	movw	r16, r14
     850:	11 96       	adiw	r26, 0x01	; 1
     852:	9c 91       	ld	r25, X
     854:	d2 01       	movw	r26, r4
     856:	11 96       	adiw	r26, 0x01	; 1
     858:	8c 91       	ld	r24, X
     85a:	98 17       	cp	r25, r24
     85c:	09 f4       	brne	.+2      	; 0x860 <__stack+0x1>
     85e:	45 c0       	rjmp	.+138    	; 0x8ea <__stack+0x8b>
     860:	99 23       	and	r25, r25
     862:	39 f0       	breq	.+14     	; 0x872 <__stack+0x13>
     864:	a8 01       	movw	r20, r16
     866:	97 01       	movw	r18, r14
     868:	2a 19       	sub	r18, r10
     86a:	3b 09       	sbc	r19, r11
     86c:	4c 09       	sbc	r20, r12
     86e:	5d 09       	sbc	r21, r13
     870:	06 c0       	rjmp	.+12     	; 0x87e <__stack+0x1f>
     872:	a6 01       	movw	r20, r12
     874:	95 01       	movw	r18, r10
     876:	2e 19       	sub	r18, r14
     878:	3f 09       	sbc	r19, r15
     87a:	40 0b       	sbc	r20, r16
     87c:	51 0b       	sbc	r21, r17
     87e:	57 fd       	sbrc	r21, 7
     880:	08 c0       	rjmp	.+16     	; 0x892 <__stack+0x33>
     882:	11 82       	std	Z+1, r1	; 0x01
     884:	33 82       	std	Z+3, r3	; 0x03
     886:	22 82       	std	Z+2, r2	; 0x02
     888:	24 83       	std	Z+4, r18	; 0x04
     88a:	35 83       	std	Z+5, r19	; 0x05
     88c:	46 83       	std	Z+6, r20	; 0x06
     88e:	57 83       	std	Z+7, r21	; 0x07
     890:	1d c0       	rjmp	.+58     	; 0x8cc <__stack+0x6d>
     892:	81 e0       	ldi	r24, 0x01	; 1
     894:	81 83       	std	Z+1, r24	; 0x01
     896:	33 82       	std	Z+3, r3	; 0x03
     898:	22 82       	std	Z+2, r2	; 0x02
     89a:	88 27       	eor	r24, r24
     89c:	99 27       	eor	r25, r25
     89e:	dc 01       	movw	r26, r24
     8a0:	82 1b       	sub	r24, r18
     8a2:	93 0b       	sbc	r25, r19
     8a4:	a4 0b       	sbc	r26, r20
     8a6:	b5 0b       	sbc	r27, r21
     8a8:	84 83       	std	Z+4, r24	; 0x04
     8aa:	95 83       	std	Z+5, r25	; 0x05
     8ac:	a6 83       	std	Z+6, r26	; 0x06
     8ae:	b7 83       	std	Z+7, r27	; 0x07
     8b0:	0d c0       	rjmp	.+26     	; 0x8cc <__stack+0x6d>
     8b2:	22 0f       	add	r18, r18
     8b4:	33 1f       	adc	r19, r19
     8b6:	44 1f       	adc	r20, r20
     8b8:	55 1f       	adc	r21, r21
     8ba:	24 83       	std	Z+4, r18	; 0x04
     8bc:	35 83       	std	Z+5, r19	; 0x05
     8be:	46 83       	std	Z+6, r20	; 0x06
     8c0:	57 83       	std	Z+7, r21	; 0x07
     8c2:	82 81       	ldd	r24, Z+2	; 0x02
     8c4:	93 81       	ldd	r25, Z+3	; 0x03
     8c6:	01 97       	sbiw	r24, 0x01	; 1
     8c8:	93 83       	std	Z+3, r25	; 0x03
     8ca:	82 83       	std	Z+2, r24	; 0x02
     8cc:	24 81       	ldd	r18, Z+4	; 0x04
     8ce:	35 81       	ldd	r19, Z+5	; 0x05
     8d0:	46 81       	ldd	r20, Z+6	; 0x06
     8d2:	57 81       	ldd	r21, Z+7	; 0x07
     8d4:	da 01       	movw	r26, r20
     8d6:	c9 01       	movw	r24, r18
     8d8:	01 97       	sbiw	r24, 0x01	; 1
     8da:	a1 09       	sbc	r26, r1
     8dc:	b1 09       	sbc	r27, r1
     8de:	8f 5f       	subi	r24, 0xFF	; 255
     8e0:	9f 4f       	sbci	r25, 0xFF	; 255
     8e2:	af 4f       	sbci	r26, 0xFF	; 255
     8e4:	bf 43       	sbci	r27, 0x3F	; 63
     8e6:	28 f3       	brcs	.-54     	; 0x8b2 <__stack+0x53>
     8e8:	0b c0       	rjmp	.+22     	; 0x900 <__stack+0xa1>
     8ea:	91 83       	std	Z+1, r25	; 0x01
     8ec:	33 82       	std	Z+3, r3	; 0x03
     8ee:	22 82       	std	Z+2, r2	; 0x02
     8f0:	ea 0c       	add	r14, r10
     8f2:	fb 1c       	adc	r15, r11
     8f4:	0c 1d       	adc	r16, r12
     8f6:	1d 1d       	adc	r17, r13
     8f8:	e4 82       	std	Z+4, r14	; 0x04
     8fa:	f5 82       	std	Z+5, r15	; 0x05
     8fc:	06 83       	std	Z+6, r16	; 0x06
     8fe:	17 83       	std	Z+7, r17	; 0x07
     900:	83 e0       	ldi	r24, 0x03	; 3
     902:	80 83       	st	Z, r24
     904:	24 81       	ldd	r18, Z+4	; 0x04
     906:	35 81       	ldd	r19, Z+5	; 0x05
     908:	46 81       	ldd	r20, Z+6	; 0x06
     90a:	57 81       	ldd	r21, Z+7	; 0x07
     90c:	57 ff       	sbrs	r21, 7
     90e:	1a c0       	rjmp	.+52     	; 0x944 <__stack+0xe5>
     910:	c9 01       	movw	r24, r18
     912:	aa 27       	eor	r26, r26
     914:	97 fd       	sbrc	r25, 7
     916:	a0 95       	com	r26
     918:	ba 2f       	mov	r27, r26
     91a:	81 70       	andi	r24, 0x01	; 1
     91c:	90 70       	andi	r25, 0x00	; 0
     91e:	a0 70       	andi	r26, 0x00	; 0
     920:	b0 70       	andi	r27, 0x00	; 0
     922:	56 95       	lsr	r21
     924:	47 95       	ror	r20
     926:	37 95       	ror	r19
     928:	27 95       	ror	r18
     92a:	82 2b       	or	r24, r18
     92c:	93 2b       	or	r25, r19
     92e:	a4 2b       	or	r26, r20
     930:	b5 2b       	or	r27, r21
     932:	84 83       	std	Z+4, r24	; 0x04
     934:	95 83       	std	Z+5, r25	; 0x05
     936:	a6 83       	std	Z+6, r26	; 0x06
     938:	b7 83       	std	Z+7, r27	; 0x07
     93a:	82 81       	ldd	r24, Z+2	; 0x02
     93c:	93 81       	ldd	r25, Z+3	; 0x03
     93e:	01 96       	adiw	r24, 0x01	; 1
     940:	93 83       	std	Z+3, r25	; 0x03
     942:	82 83       	std	Z+2, r24	; 0x02
     944:	df 01       	movw	r26, r30
     946:	01 c0       	rjmp	.+2      	; 0x94a <__stack+0xeb>
     948:	d2 01       	movw	r26, r4
     94a:	cd 01       	movw	r24, r26
     94c:	cd b7       	in	r28, 0x3d	; 61
     94e:	de b7       	in	r29, 0x3e	; 62
     950:	e2 e1       	ldi	r30, 0x12	; 18
     952:	0c 94 51 27 	jmp	0x4ea2	; 0x4ea2 <__epilogue_restores__>

00000956 <__subsf3>:
     956:	a0 e2       	ldi	r26, 0x20	; 32
     958:	b0 e0       	ldi	r27, 0x00	; 0
     95a:	e1 eb       	ldi	r30, 0xB1	; 177
     95c:	f4 e0       	ldi	r31, 0x04	; 4
     95e:	0c 94 41 27 	jmp	0x4e82	; 0x4e82 <__prologue_saves__+0x18>
     962:	69 83       	std	Y+1, r22	; 0x01
     964:	7a 83       	std	Y+2, r23	; 0x02
     966:	8b 83       	std	Y+3, r24	; 0x03
     968:	9c 83       	std	Y+4, r25	; 0x04
     96a:	2d 83       	std	Y+5, r18	; 0x05
     96c:	3e 83       	std	Y+6, r19	; 0x06
     96e:	4f 83       	std	Y+7, r20	; 0x07
     970:	58 87       	std	Y+8, r21	; 0x08
     972:	e9 e0       	ldi	r30, 0x09	; 9
     974:	ee 2e       	mov	r14, r30
     976:	f1 2c       	mov	r15, r1
     978:	ec 0e       	add	r14, r28
     97a:	fd 1e       	adc	r15, r29
     97c:	ce 01       	movw	r24, r28
     97e:	01 96       	adiw	r24, 0x01	; 1
     980:	b7 01       	movw	r22, r14
     982:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     986:	8e 01       	movw	r16, r28
     988:	0f 5e       	subi	r16, 0xEF	; 239
     98a:	1f 4f       	sbci	r17, 0xFF	; 255
     98c:	ce 01       	movw	r24, r28
     98e:	05 96       	adiw	r24, 0x05	; 5
     990:	b8 01       	movw	r22, r16
     992:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     996:	8a 89       	ldd	r24, Y+18	; 0x12
     998:	91 e0       	ldi	r25, 0x01	; 1
     99a:	89 27       	eor	r24, r25
     99c:	8a 8b       	std	Y+18, r24	; 0x12
     99e:	c7 01       	movw	r24, r14
     9a0:	b8 01       	movw	r22, r16
     9a2:	ae 01       	movw	r20, r28
     9a4:	47 5e       	subi	r20, 0xE7	; 231
     9a6:	5f 4f       	sbci	r21, 0xFF	; 255
     9a8:	0e 94 5f 03 	call	0x6be	; 0x6be <_fpadd_parts>
     9ac:	0e 94 c5 08 	call	0x118a	; 0x118a <__pack_f>
     9b0:	a0 96       	adiw	r28, 0x20	; 32
     9b2:	e6 e0       	ldi	r30, 0x06	; 6
     9b4:	0c 94 5d 27 	jmp	0x4eba	; 0x4eba <__epilogue_restores__+0x18>

000009b8 <__addsf3>:
     9b8:	a0 e2       	ldi	r26, 0x20	; 32
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	e2 ee       	ldi	r30, 0xE2	; 226
     9be:	f4 e0       	ldi	r31, 0x04	; 4
     9c0:	0c 94 41 27 	jmp	0x4e82	; 0x4e82 <__prologue_saves__+0x18>
     9c4:	69 83       	std	Y+1, r22	; 0x01
     9c6:	7a 83       	std	Y+2, r23	; 0x02
     9c8:	8b 83       	std	Y+3, r24	; 0x03
     9ca:	9c 83       	std	Y+4, r25	; 0x04
     9cc:	2d 83       	std	Y+5, r18	; 0x05
     9ce:	3e 83       	std	Y+6, r19	; 0x06
     9d0:	4f 83       	std	Y+7, r20	; 0x07
     9d2:	58 87       	std	Y+8, r21	; 0x08
     9d4:	f9 e0       	ldi	r31, 0x09	; 9
     9d6:	ef 2e       	mov	r14, r31
     9d8:	f1 2c       	mov	r15, r1
     9da:	ec 0e       	add	r14, r28
     9dc:	fd 1e       	adc	r15, r29
     9de:	ce 01       	movw	r24, r28
     9e0:	01 96       	adiw	r24, 0x01	; 1
     9e2:	b7 01       	movw	r22, r14
     9e4:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     9e8:	8e 01       	movw	r16, r28
     9ea:	0f 5e       	subi	r16, 0xEF	; 239
     9ec:	1f 4f       	sbci	r17, 0xFF	; 255
     9ee:	ce 01       	movw	r24, r28
     9f0:	05 96       	adiw	r24, 0x05	; 5
     9f2:	b8 01       	movw	r22, r16
     9f4:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     9f8:	c7 01       	movw	r24, r14
     9fa:	b8 01       	movw	r22, r16
     9fc:	ae 01       	movw	r20, r28
     9fe:	47 5e       	subi	r20, 0xE7	; 231
     a00:	5f 4f       	sbci	r21, 0xFF	; 255
     a02:	0e 94 5f 03 	call	0x6be	; 0x6be <_fpadd_parts>
     a06:	0e 94 c5 08 	call	0x118a	; 0x118a <__pack_f>
     a0a:	a0 96       	adiw	r28, 0x20	; 32
     a0c:	e6 e0       	ldi	r30, 0x06	; 6
     a0e:	0c 94 5d 27 	jmp	0x4eba	; 0x4eba <__epilogue_restores__+0x18>

00000a12 <__mulsf3>:
     a12:	a0 e2       	ldi	r26, 0x20	; 32
     a14:	b0 e0       	ldi	r27, 0x00	; 0
     a16:	ef e0       	ldi	r30, 0x0F	; 15
     a18:	f5 e0       	ldi	r31, 0x05	; 5
     a1a:	0c 94 35 27 	jmp	0x4e6a	; 0x4e6a <__prologue_saves__>
     a1e:	69 83       	std	Y+1, r22	; 0x01
     a20:	7a 83       	std	Y+2, r23	; 0x02
     a22:	8b 83       	std	Y+3, r24	; 0x03
     a24:	9c 83       	std	Y+4, r25	; 0x04
     a26:	2d 83       	std	Y+5, r18	; 0x05
     a28:	3e 83       	std	Y+6, r19	; 0x06
     a2a:	4f 83       	std	Y+7, r20	; 0x07
     a2c:	58 87       	std	Y+8, r21	; 0x08
     a2e:	ce 01       	movw	r24, r28
     a30:	01 96       	adiw	r24, 0x01	; 1
     a32:	be 01       	movw	r22, r28
     a34:	67 5f       	subi	r22, 0xF7	; 247
     a36:	7f 4f       	sbci	r23, 0xFF	; 255
     a38:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     a3c:	ce 01       	movw	r24, r28
     a3e:	05 96       	adiw	r24, 0x05	; 5
     a40:	be 01       	movw	r22, r28
     a42:	6f 5e       	subi	r22, 0xEF	; 239
     a44:	7f 4f       	sbci	r23, 0xFF	; 255
     a46:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     a4a:	99 85       	ldd	r25, Y+9	; 0x09
     a4c:	92 30       	cpi	r25, 0x02	; 2
     a4e:	88 f0       	brcs	.+34     	; 0xa72 <__mulsf3+0x60>
     a50:	89 89       	ldd	r24, Y+17	; 0x11
     a52:	82 30       	cpi	r24, 0x02	; 2
     a54:	c8 f0       	brcs	.+50     	; 0xa88 <__mulsf3+0x76>
     a56:	94 30       	cpi	r25, 0x04	; 4
     a58:	19 f4       	brne	.+6      	; 0xa60 <__mulsf3+0x4e>
     a5a:	82 30       	cpi	r24, 0x02	; 2
     a5c:	51 f4       	brne	.+20     	; 0xa72 <__mulsf3+0x60>
     a5e:	04 c0       	rjmp	.+8      	; 0xa68 <__mulsf3+0x56>
     a60:	84 30       	cpi	r24, 0x04	; 4
     a62:	29 f4       	brne	.+10     	; 0xa6e <__mulsf3+0x5c>
     a64:	92 30       	cpi	r25, 0x02	; 2
     a66:	81 f4       	brne	.+32     	; 0xa88 <__mulsf3+0x76>
     a68:	82 e7       	ldi	r24, 0x72	; 114
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	c6 c0       	rjmp	.+396    	; 0xbfa <__mulsf3+0x1e8>
     a6e:	92 30       	cpi	r25, 0x02	; 2
     a70:	49 f4       	brne	.+18     	; 0xa84 <__mulsf3+0x72>
     a72:	20 e0       	ldi	r18, 0x00	; 0
     a74:	9a 85       	ldd	r25, Y+10	; 0x0a
     a76:	8a 89       	ldd	r24, Y+18	; 0x12
     a78:	98 13       	cpse	r25, r24
     a7a:	21 e0       	ldi	r18, 0x01	; 1
     a7c:	2a 87       	std	Y+10, r18	; 0x0a
     a7e:	ce 01       	movw	r24, r28
     a80:	09 96       	adiw	r24, 0x09	; 9
     a82:	bb c0       	rjmp	.+374    	; 0xbfa <__mulsf3+0x1e8>
     a84:	82 30       	cpi	r24, 0x02	; 2
     a86:	49 f4       	brne	.+18     	; 0xa9a <__mulsf3+0x88>
     a88:	20 e0       	ldi	r18, 0x00	; 0
     a8a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a8c:	8a 89       	ldd	r24, Y+18	; 0x12
     a8e:	98 13       	cpse	r25, r24
     a90:	21 e0       	ldi	r18, 0x01	; 1
     a92:	2a 8b       	std	Y+18, r18	; 0x12
     a94:	ce 01       	movw	r24, r28
     a96:	41 96       	adiw	r24, 0x11	; 17
     a98:	b0 c0       	rjmp	.+352    	; 0xbfa <__mulsf3+0x1e8>
     a9a:	2d 84       	ldd	r2, Y+13	; 0x0d
     a9c:	3e 84       	ldd	r3, Y+14	; 0x0e
     a9e:	4f 84       	ldd	r4, Y+15	; 0x0f
     aa0:	58 88       	ldd	r5, Y+16	; 0x10
     aa2:	6d 88       	ldd	r6, Y+21	; 0x15
     aa4:	7e 88       	ldd	r7, Y+22	; 0x16
     aa6:	8f 88       	ldd	r8, Y+23	; 0x17
     aa8:	98 8c       	ldd	r9, Y+24	; 0x18
     aaa:	ee 24       	eor	r14, r14
     aac:	ff 24       	eor	r15, r15
     aae:	87 01       	movw	r16, r14
     ab0:	aa 24       	eor	r10, r10
     ab2:	bb 24       	eor	r11, r11
     ab4:	65 01       	movw	r12, r10
     ab6:	40 e0       	ldi	r20, 0x00	; 0
     ab8:	50 e0       	ldi	r21, 0x00	; 0
     aba:	60 e0       	ldi	r22, 0x00	; 0
     abc:	70 e0       	ldi	r23, 0x00	; 0
     abe:	e0 e0       	ldi	r30, 0x00	; 0
     ac0:	f0 e0       	ldi	r31, 0x00	; 0
     ac2:	c1 01       	movw	r24, r2
     ac4:	81 70       	andi	r24, 0x01	; 1
     ac6:	90 70       	andi	r25, 0x00	; 0
     ac8:	89 2b       	or	r24, r25
     aca:	e9 f0       	breq	.+58     	; 0xb06 <__mulsf3+0xf4>
     acc:	e6 0c       	add	r14, r6
     ace:	f7 1c       	adc	r15, r7
     ad0:	08 1d       	adc	r16, r8
     ad2:	19 1d       	adc	r17, r9
     ad4:	9a 01       	movw	r18, r20
     ad6:	ab 01       	movw	r20, r22
     ad8:	2a 0d       	add	r18, r10
     ada:	3b 1d       	adc	r19, r11
     adc:	4c 1d       	adc	r20, r12
     ade:	5d 1d       	adc	r21, r13
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	a0 e0       	ldi	r26, 0x00	; 0
     ae6:	b0 e0       	ldi	r27, 0x00	; 0
     ae8:	e6 14       	cp	r14, r6
     aea:	f7 04       	cpc	r15, r7
     aec:	08 05       	cpc	r16, r8
     aee:	19 05       	cpc	r17, r9
     af0:	20 f4       	brcc	.+8      	; 0xafa <__mulsf3+0xe8>
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	a0 e0       	ldi	r26, 0x00	; 0
     af8:	b0 e0       	ldi	r27, 0x00	; 0
     afa:	ba 01       	movw	r22, r20
     afc:	a9 01       	movw	r20, r18
     afe:	48 0f       	add	r20, r24
     b00:	59 1f       	adc	r21, r25
     b02:	6a 1f       	adc	r22, r26
     b04:	7b 1f       	adc	r23, r27
     b06:	aa 0c       	add	r10, r10
     b08:	bb 1c       	adc	r11, r11
     b0a:	cc 1c       	adc	r12, r12
     b0c:	dd 1c       	adc	r13, r13
     b0e:	97 fe       	sbrs	r9, 7
     b10:	08 c0       	rjmp	.+16     	; 0xb22 <__mulsf3+0x110>
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	a0 e0       	ldi	r26, 0x00	; 0
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	a8 2a       	or	r10, r24
     b1c:	b9 2a       	or	r11, r25
     b1e:	ca 2a       	or	r12, r26
     b20:	db 2a       	or	r13, r27
     b22:	31 96       	adiw	r30, 0x01	; 1
     b24:	e0 32       	cpi	r30, 0x20	; 32
     b26:	f1 05       	cpc	r31, r1
     b28:	49 f0       	breq	.+18     	; 0xb3c <__mulsf3+0x12a>
     b2a:	66 0c       	add	r6, r6
     b2c:	77 1c       	adc	r7, r7
     b2e:	88 1c       	adc	r8, r8
     b30:	99 1c       	adc	r9, r9
     b32:	56 94       	lsr	r5
     b34:	47 94       	ror	r4
     b36:	37 94       	ror	r3
     b38:	27 94       	ror	r2
     b3a:	c3 cf       	rjmp	.-122    	; 0xac2 <__mulsf3+0xb0>
     b3c:	fa 85       	ldd	r31, Y+10	; 0x0a
     b3e:	ea 89       	ldd	r30, Y+18	; 0x12
     b40:	2b 89       	ldd	r18, Y+19	; 0x13
     b42:	3c 89       	ldd	r19, Y+20	; 0x14
     b44:	8b 85       	ldd	r24, Y+11	; 0x0b
     b46:	9c 85       	ldd	r25, Y+12	; 0x0c
     b48:	28 0f       	add	r18, r24
     b4a:	39 1f       	adc	r19, r25
     b4c:	2e 5f       	subi	r18, 0xFE	; 254
     b4e:	3f 4f       	sbci	r19, 0xFF	; 255
     b50:	17 c0       	rjmp	.+46     	; 0xb80 <__mulsf3+0x16e>
     b52:	ca 01       	movw	r24, r20
     b54:	81 70       	andi	r24, 0x01	; 1
     b56:	90 70       	andi	r25, 0x00	; 0
     b58:	89 2b       	or	r24, r25
     b5a:	61 f0       	breq	.+24     	; 0xb74 <__mulsf3+0x162>
     b5c:	16 95       	lsr	r17
     b5e:	07 95       	ror	r16
     b60:	f7 94       	ror	r15
     b62:	e7 94       	ror	r14
     b64:	80 e0       	ldi	r24, 0x00	; 0
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	a0 e0       	ldi	r26, 0x00	; 0
     b6a:	b0 e8       	ldi	r27, 0x80	; 128
     b6c:	e8 2a       	or	r14, r24
     b6e:	f9 2a       	or	r15, r25
     b70:	0a 2b       	or	r16, r26
     b72:	1b 2b       	or	r17, r27
     b74:	76 95       	lsr	r23
     b76:	67 95       	ror	r22
     b78:	57 95       	ror	r21
     b7a:	47 95       	ror	r20
     b7c:	2f 5f       	subi	r18, 0xFF	; 255
     b7e:	3f 4f       	sbci	r19, 0xFF	; 255
     b80:	77 fd       	sbrc	r23, 7
     b82:	e7 cf       	rjmp	.-50     	; 0xb52 <__mulsf3+0x140>
     b84:	0c c0       	rjmp	.+24     	; 0xb9e <__mulsf3+0x18c>
     b86:	44 0f       	add	r20, r20
     b88:	55 1f       	adc	r21, r21
     b8a:	66 1f       	adc	r22, r22
     b8c:	77 1f       	adc	r23, r23
     b8e:	17 fd       	sbrc	r17, 7
     b90:	41 60       	ori	r20, 0x01	; 1
     b92:	ee 0c       	add	r14, r14
     b94:	ff 1c       	adc	r15, r15
     b96:	00 1f       	adc	r16, r16
     b98:	11 1f       	adc	r17, r17
     b9a:	21 50       	subi	r18, 0x01	; 1
     b9c:	30 40       	sbci	r19, 0x00	; 0
     b9e:	40 30       	cpi	r20, 0x00	; 0
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	59 07       	cpc	r21, r25
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	69 07       	cpc	r22, r25
     ba8:	90 e4       	ldi	r25, 0x40	; 64
     baa:	79 07       	cpc	r23, r25
     bac:	60 f3       	brcs	.-40     	; 0xb86 <__mulsf3+0x174>
     bae:	2b 8f       	std	Y+27, r18	; 0x1b
     bb0:	3c 8f       	std	Y+28, r19	; 0x1c
     bb2:	db 01       	movw	r26, r22
     bb4:	ca 01       	movw	r24, r20
     bb6:	8f 77       	andi	r24, 0x7F	; 127
     bb8:	90 70       	andi	r25, 0x00	; 0
     bba:	a0 70       	andi	r26, 0x00	; 0
     bbc:	b0 70       	andi	r27, 0x00	; 0
     bbe:	80 34       	cpi	r24, 0x40	; 64
     bc0:	91 05       	cpc	r25, r1
     bc2:	a1 05       	cpc	r26, r1
     bc4:	b1 05       	cpc	r27, r1
     bc6:	61 f4       	brne	.+24     	; 0xbe0 <__mulsf3+0x1ce>
     bc8:	47 fd       	sbrc	r20, 7
     bca:	0a c0       	rjmp	.+20     	; 0xbe0 <__mulsf3+0x1ce>
     bcc:	e1 14       	cp	r14, r1
     bce:	f1 04       	cpc	r15, r1
     bd0:	01 05       	cpc	r16, r1
     bd2:	11 05       	cpc	r17, r1
     bd4:	29 f0       	breq	.+10     	; 0xbe0 <__mulsf3+0x1ce>
     bd6:	40 5c       	subi	r20, 0xC0	; 192
     bd8:	5f 4f       	sbci	r21, 0xFF	; 255
     bda:	6f 4f       	sbci	r22, 0xFF	; 255
     bdc:	7f 4f       	sbci	r23, 0xFF	; 255
     bde:	40 78       	andi	r20, 0x80	; 128
     be0:	1a 8e       	std	Y+26, r1	; 0x1a
     be2:	fe 17       	cp	r31, r30
     be4:	11 f0       	breq	.+4      	; 0xbea <__mulsf3+0x1d8>
     be6:	81 e0       	ldi	r24, 0x01	; 1
     be8:	8a 8f       	std	Y+26, r24	; 0x1a
     bea:	4d 8f       	std	Y+29, r20	; 0x1d
     bec:	5e 8f       	std	Y+30, r21	; 0x1e
     bee:	6f 8f       	std	Y+31, r22	; 0x1f
     bf0:	78 a3       	std	Y+32, r23	; 0x20
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	89 8f       	std	Y+25, r24	; 0x19
     bf6:	ce 01       	movw	r24, r28
     bf8:	49 96       	adiw	r24, 0x19	; 25
     bfa:	0e 94 c5 08 	call	0x118a	; 0x118a <__pack_f>
     bfe:	a0 96       	adiw	r28, 0x20	; 32
     c00:	e2 e1       	ldi	r30, 0x12	; 18
     c02:	0c 94 51 27 	jmp	0x4ea2	; 0x4ea2 <__epilogue_restores__>

00000c06 <__divsf3>:
     c06:	a8 e1       	ldi	r26, 0x18	; 24
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	e9 e0       	ldi	r30, 0x09	; 9
     c0c:	f6 e0       	ldi	r31, 0x06	; 6
     c0e:	0c 94 3d 27 	jmp	0x4e7a	; 0x4e7a <__prologue_saves__+0x10>
     c12:	69 83       	std	Y+1, r22	; 0x01
     c14:	7a 83       	std	Y+2, r23	; 0x02
     c16:	8b 83       	std	Y+3, r24	; 0x03
     c18:	9c 83       	std	Y+4, r25	; 0x04
     c1a:	2d 83       	std	Y+5, r18	; 0x05
     c1c:	3e 83       	std	Y+6, r19	; 0x06
     c1e:	4f 83       	std	Y+7, r20	; 0x07
     c20:	58 87       	std	Y+8, r21	; 0x08
     c22:	b9 e0       	ldi	r27, 0x09	; 9
     c24:	eb 2e       	mov	r14, r27
     c26:	f1 2c       	mov	r15, r1
     c28:	ec 0e       	add	r14, r28
     c2a:	fd 1e       	adc	r15, r29
     c2c:	ce 01       	movw	r24, r28
     c2e:	01 96       	adiw	r24, 0x01	; 1
     c30:	b7 01       	movw	r22, r14
     c32:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     c36:	8e 01       	movw	r16, r28
     c38:	0f 5e       	subi	r16, 0xEF	; 239
     c3a:	1f 4f       	sbci	r17, 0xFF	; 255
     c3c:	ce 01       	movw	r24, r28
     c3e:	05 96       	adiw	r24, 0x05	; 5
     c40:	b8 01       	movw	r22, r16
     c42:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     c46:	29 85       	ldd	r18, Y+9	; 0x09
     c48:	22 30       	cpi	r18, 0x02	; 2
     c4a:	08 f4       	brcc	.+2      	; 0xc4e <__divsf3+0x48>
     c4c:	7e c0       	rjmp	.+252    	; 0xd4a <__divsf3+0x144>
     c4e:	39 89       	ldd	r19, Y+17	; 0x11
     c50:	32 30       	cpi	r19, 0x02	; 2
     c52:	10 f4       	brcc	.+4      	; 0xc58 <__divsf3+0x52>
     c54:	b8 01       	movw	r22, r16
     c56:	7c c0       	rjmp	.+248    	; 0xd50 <__divsf3+0x14a>
     c58:	8a 85       	ldd	r24, Y+10	; 0x0a
     c5a:	9a 89       	ldd	r25, Y+18	; 0x12
     c5c:	89 27       	eor	r24, r25
     c5e:	8a 87       	std	Y+10, r24	; 0x0a
     c60:	24 30       	cpi	r18, 0x04	; 4
     c62:	11 f0       	breq	.+4      	; 0xc68 <__divsf3+0x62>
     c64:	22 30       	cpi	r18, 0x02	; 2
     c66:	31 f4       	brne	.+12     	; 0xc74 <__divsf3+0x6e>
     c68:	23 17       	cp	r18, r19
     c6a:	09 f0       	breq	.+2      	; 0xc6e <__divsf3+0x68>
     c6c:	6e c0       	rjmp	.+220    	; 0xd4a <__divsf3+0x144>
     c6e:	62 e7       	ldi	r22, 0x72	; 114
     c70:	70 e0       	ldi	r23, 0x00	; 0
     c72:	6e c0       	rjmp	.+220    	; 0xd50 <__divsf3+0x14a>
     c74:	34 30       	cpi	r19, 0x04	; 4
     c76:	39 f4       	brne	.+14     	; 0xc86 <__divsf3+0x80>
     c78:	1d 86       	std	Y+13, r1	; 0x0d
     c7a:	1e 86       	std	Y+14, r1	; 0x0e
     c7c:	1f 86       	std	Y+15, r1	; 0x0f
     c7e:	18 8a       	std	Y+16, r1	; 0x10
     c80:	1c 86       	std	Y+12, r1	; 0x0c
     c82:	1b 86       	std	Y+11, r1	; 0x0b
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <__divsf3+0x88>
     c86:	32 30       	cpi	r19, 0x02	; 2
     c88:	21 f4       	brne	.+8      	; 0xc92 <__divsf3+0x8c>
     c8a:	84 e0       	ldi	r24, 0x04	; 4
     c8c:	89 87       	std	Y+9, r24	; 0x09
     c8e:	b7 01       	movw	r22, r14
     c90:	5f c0       	rjmp	.+190    	; 0xd50 <__divsf3+0x14a>
     c92:	2b 85       	ldd	r18, Y+11	; 0x0b
     c94:	3c 85       	ldd	r19, Y+12	; 0x0c
     c96:	8b 89       	ldd	r24, Y+19	; 0x13
     c98:	9c 89       	ldd	r25, Y+20	; 0x14
     c9a:	28 1b       	sub	r18, r24
     c9c:	39 0b       	sbc	r19, r25
     c9e:	3c 87       	std	Y+12, r19	; 0x0c
     ca0:	2b 87       	std	Y+11, r18	; 0x0b
     ca2:	ed 84       	ldd	r14, Y+13	; 0x0d
     ca4:	fe 84       	ldd	r15, Y+14	; 0x0e
     ca6:	0f 85       	ldd	r16, Y+15	; 0x0f
     ca8:	18 89       	ldd	r17, Y+16	; 0x10
     caa:	ad 88       	ldd	r10, Y+21	; 0x15
     cac:	be 88       	ldd	r11, Y+22	; 0x16
     cae:	cf 88       	ldd	r12, Y+23	; 0x17
     cb0:	d8 8c       	ldd	r13, Y+24	; 0x18
     cb2:	ea 14       	cp	r14, r10
     cb4:	fb 04       	cpc	r15, r11
     cb6:	0c 05       	cpc	r16, r12
     cb8:	1d 05       	cpc	r17, r13
     cba:	40 f4       	brcc	.+16     	; 0xccc <__divsf3+0xc6>
     cbc:	ee 0c       	add	r14, r14
     cbe:	ff 1c       	adc	r15, r15
     cc0:	00 1f       	adc	r16, r16
     cc2:	11 1f       	adc	r17, r17
     cc4:	21 50       	subi	r18, 0x01	; 1
     cc6:	30 40       	sbci	r19, 0x00	; 0
     cc8:	3c 87       	std	Y+12, r19	; 0x0c
     cca:	2b 87       	std	Y+11, r18	; 0x0b
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	40 e0       	ldi	r20, 0x00	; 0
     cd2:	50 e0       	ldi	r21, 0x00	; 0
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	a0 e0       	ldi	r26, 0x00	; 0
     cda:	b0 e4       	ldi	r27, 0x40	; 64
     cdc:	60 e0       	ldi	r22, 0x00	; 0
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	ea 14       	cp	r14, r10
     ce2:	fb 04       	cpc	r15, r11
     ce4:	0c 05       	cpc	r16, r12
     ce6:	1d 05       	cpc	r17, r13
     ce8:	40 f0       	brcs	.+16     	; 0xcfa <__divsf3+0xf4>
     cea:	28 2b       	or	r18, r24
     cec:	39 2b       	or	r19, r25
     cee:	4a 2b       	or	r20, r26
     cf0:	5b 2b       	or	r21, r27
     cf2:	ea 18       	sub	r14, r10
     cf4:	fb 08       	sbc	r15, r11
     cf6:	0c 09       	sbc	r16, r12
     cf8:	1d 09       	sbc	r17, r13
     cfa:	b6 95       	lsr	r27
     cfc:	a7 95       	ror	r26
     cfe:	97 95       	ror	r25
     d00:	87 95       	ror	r24
     d02:	ee 0c       	add	r14, r14
     d04:	ff 1c       	adc	r15, r15
     d06:	00 1f       	adc	r16, r16
     d08:	11 1f       	adc	r17, r17
     d0a:	6f 5f       	subi	r22, 0xFF	; 255
     d0c:	7f 4f       	sbci	r23, 0xFF	; 255
     d0e:	6f 31       	cpi	r22, 0x1F	; 31
     d10:	71 05       	cpc	r23, r1
     d12:	31 f7       	brne	.-52     	; 0xce0 <__divsf3+0xda>
     d14:	da 01       	movw	r26, r20
     d16:	c9 01       	movw	r24, r18
     d18:	8f 77       	andi	r24, 0x7F	; 127
     d1a:	90 70       	andi	r25, 0x00	; 0
     d1c:	a0 70       	andi	r26, 0x00	; 0
     d1e:	b0 70       	andi	r27, 0x00	; 0
     d20:	80 34       	cpi	r24, 0x40	; 64
     d22:	91 05       	cpc	r25, r1
     d24:	a1 05       	cpc	r26, r1
     d26:	b1 05       	cpc	r27, r1
     d28:	61 f4       	brne	.+24     	; 0xd42 <__divsf3+0x13c>
     d2a:	27 fd       	sbrc	r18, 7
     d2c:	0a c0       	rjmp	.+20     	; 0xd42 <__divsf3+0x13c>
     d2e:	e1 14       	cp	r14, r1
     d30:	f1 04       	cpc	r15, r1
     d32:	01 05       	cpc	r16, r1
     d34:	11 05       	cpc	r17, r1
     d36:	29 f0       	breq	.+10     	; 0xd42 <__divsf3+0x13c>
     d38:	20 5c       	subi	r18, 0xC0	; 192
     d3a:	3f 4f       	sbci	r19, 0xFF	; 255
     d3c:	4f 4f       	sbci	r20, 0xFF	; 255
     d3e:	5f 4f       	sbci	r21, 0xFF	; 255
     d40:	20 78       	andi	r18, 0x80	; 128
     d42:	2d 87       	std	Y+13, r18	; 0x0d
     d44:	3e 87       	std	Y+14, r19	; 0x0e
     d46:	4f 87       	std	Y+15, r20	; 0x0f
     d48:	58 8b       	std	Y+16, r21	; 0x10
     d4a:	be 01       	movw	r22, r28
     d4c:	67 5f       	subi	r22, 0xF7	; 247
     d4e:	7f 4f       	sbci	r23, 0xFF	; 255
     d50:	cb 01       	movw	r24, r22
     d52:	0e 94 c5 08 	call	0x118a	; 0x118a <__pack_f>
     d56:	68 96       	adiw	r28, 0x18	; 24
     d58:	ea e0       	ldi	r30, 0x0A	; 10
     d5a:	0c 94 59 27 	jmp	0x4eb2	; 0x4eb2 <__epilogue_restores__+0x10>

00000d5e <__gtsf2>:
     d5e:	a8 e1       	ldi	r26, 0x18	; 24
     d60:	b0 e0       	ldi	r27, 0x00	; 0
     d62:	e5 eb       	ldi	r30, 0xB5	; 181
     d64:	f6 e0       	ldi	r31, 0x06	; 6
     d66:	0c 94 41 27 	jmp	0x4e82	; 0x4e82 <__prologue_saves__+0x18>
     d6a:	69 83       	std	Y+1, r22	; 0x01
     d6c:	7a 83       	std	Y+2, r23	; 0x02
     d6e:	8b 83       	std	Y+3, r24	; 0x03
     d70:	9c 83       	std	Y+4, r25	; 0x04
     d72:	2d 83       	std	Y+5, r18	; 0x05
     d74:	3e 83       	std	Y+6, r19	; 0x06
     d76:	4f 83       	std	Y+7, r20	; 0x07
     d78:	58 87       	std	Y+8, r21	; 0x08
     d7a:	89 e0       	ldi	r24, 0x09	; 9
     d7c:	e8 2e       	mov	r14, r24
     d7e:	f1 2c       	mov	r15, r1
     d80:	ec 0e       	add	r14, r28
     d82:	fd 1e       	adc	r15, r29
     d84:	ce 01       	movw	r24, r28
     d86:	01 96       	adiw	r24, 0x01	; 1
     d88:	b7 01       	movw	r22, r14
     d8a:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     d8e:	8e 01       	movw	r16, r28
     d90:	0f 5e       	subi	r16, 0xEF	; 239
     d92:	1f 4f       	sbci	r17, 0xFF	; 255
     d94:	ce 01       	movw	r24, r28
     d96:	05 96       	adiw	r24, 0x05	; 5
     d98:	b8 01       	movw	r22, r16
     d9a:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     d9e:	89 85       	ldd	r24, Y+9	; 0x09
     da0:	82 30       	cpi	r24, 0x02	; 2
     da2:	40 f0       	brcs	.+16     	; 0xdb4 <__gtsf2+0x56>
     da4:	89 89       	ldd	r24, Y+17	; 0x11
     da6:	82 30       	cpi	r24, 0x02	; 2
     da8:	28 f0       	brcs	.+10     	; 0xdb4 <__gtsf2+0x56>
     daa:	c7 01       	movw	r24, r14
     dac:	b8 01       	movw	r22, r16
     dae:	0e 94 12 0a 	call	0x1424	; 0x1424 <__fpcmp_parts_f>
     db2:	01 c0       	rjmp	.+2      	; 0xdb6 <__gtsf2+0x58>
     db4:	8f ef       	ldi	r24, 0xFF	; 255
     db6:	68 96       	adiw	r28, 0x18	; 24
     db8:	e6 e0       	ldi	r30, 0x06	; 6
     dba:	0c 94 5d 27 	jmp	0x4eba	; 0x4eba <__epilogue_restores__+0x18>

00000dbe <__gesf2>:
     dbe:	a8 e1       	ldi	r26, 0x18	; 24
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	e5 ee       	ldi	r30, 0xE5	; 229
     dc4:	f6 e0       	ldi	r31, 0x06	; 6
     dc6:	0c 94 41 27 	jmp	0x4e82	; 0x4e82 <__prologue_saves__+0x18>
     dca:	69 83       	std	Y+1, r22	; 0x01
     dcc:	7a 83       	std	Y+2, r23	; 0x02
     dce:	8b 83       	std	Y+3, r24	; 0x03
     dd0:	9c 83       	std	Y+4, r25	; 0x04
     dd2:	2d 83       	std	Y+5, r18	; 0x05
     dd4:	3e 83       	std	Y+6, r19	; 0x06
     dd6:	4f 83       	std	Y+7, r20	; 0x07
     dd8:	58 87       	std	Y+8, r21	; 0x08
     dda:	89 e0       	ldi	r24, 0x09	; 9
     ddc:	e8 2e       	mov	r14, r24
     dde:	f1 2c       	mov	r15, r1
     de0:	ec 0e       	add	r14, r28
     de2:	fd 1e       	adc	r15, r29
     de4:	ce 01       	movw	r24, r28
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	b7 01       	movw	r22, r14
     dea:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     dee:	8e 01       	movw	r16, r28
     df0:	0f 5e       	subi	r16, 0xEF	; 239
     df2:	1f 4f       	sbci	r17, 0xFF	; 255
     df4:	ce 01       	movw	r24, r28
     df6:	05 96       	adiw	r24, 0x05	; 5
     df8:	b8 01       	movw	r22, r16
     dfa:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     dfe:	89 85       	ldd	r24, Y+9	; 0x09
     e00:	82 30       	cpi	r24, 0x02	; 2
     e02:	40 f0       	brcs	.+16     	; 0xe14 <__gesf2+0x56>
     e04:	89 89       	ldd	r24, Y+17	; 0x11
     e06:	82 30       	cpi	r24, 0x02	; 2
     e08:	28 f0       	brcs	.+10     	; 0xe14 <__gesf2+0x56>
     e0a:	c7 01       	movw	r24, r14
     e0c:	b8 01       	movw	r22, r16
     e0e:	0e 94 12 0a 	call	0x1424	; 0x1424 <__fpcmp_parts_f>
     e12:	01 c0       	rjmp	.+2      	; 0xe16 <__gesf2+0x58>
     e14:	8f ef       	ldi	r24, 0xFF	; 255
     e16:	68 96       	adiw	r28, 0x18	; 24
     e18:	e6 e0       	ldi	r30, 0x06	; 6
     e1a:	0c 94 5d 27 	jmp	0x4eba	; 0x4eba <__epilogue_restores__+0x18>

00000e1e <__ltsf2>:
     e1e:	a8 e1       	ldi	r26, 0x18	; 24
     e20:	b0 e0       	ldi	r27, 0x00	; 0
     e22:	e5 e1       	ldi	r30, 0x15	; 21
     e24:	f7 e0       	ldi	r31, 0x07	; 7
     e26:	0c 94 41 27 	jmp	0x4e82	; 0x4e82 <__prologue_saves__+0x18>
     e2a:	69 83       	std	Y+1, r22	; 0x01
     e2c:	7a 83       	std	Y+2, r23	; 0x02
     e2e:	8b 83       	std	Y+3, r24	; 0x03
     e30:	9c 83       	std	Y+4, r25	; 0x04
     e32:	2d 83       	std	Y+5, r18	; 0x05
     e34:	3e 83       	std	Y+6, r19	; 0x06
     e36:	4f 83       	std	Y+7, r20	; 0x07
     e38:	58 87       	std	Y+8, r21	; 0x08
     e3a:	89 e0       	ldi	r24, 0x09	; 9
     e3c:	e8 2e       	mov	r14, r24
     e3e:	f1 2c       	mov	r15, r1
     e40:	ec 0e       	add	r14, r28
     e42:	fd 1e       	adc	r15, r29
     e44:	ce 01       	movw	r24, r28
     e46:	01 96       	adiw	r24, 0x01	; 1
     e48:	b7 01       	movw	r22, r14
     e4a:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     e4e:	8e 01       	movw	r16, r28
     e50:	0f 5e       	subi	r16, 0xEF	; 239
     e52:	1f 4f       	sbci	r17, 0xFF	; 255
     e54:	ce 01       	movw	r24, r28
     e56:	05 96       	adiw	r24, 0x05	; 5
     e58:	b8 01       	movw	r22, r16
     e5a:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     e5e:	89 85       	ldd	r24, Y+9	; 0x09
     e60:	82 30       	cpi	r24, 0x02	; 2
     e62:	40 f0       	brcs	.+16     	; 0xe74 <__ltsf2+0x56>
     e64:	89 89       	ldd	r24, Y+17	; 0x11
     e66:	82 30       	cpi	r24, 0x02	; 2
     e68:	28 f0       	brcs	.+10     	; 0xe74 <__ltsf2+0x56>
     e6a:	c7 01       	movw	r24, r14
     e6c:	b8 01       	movw	r22, r16
     e6e:	0e 94 12 0a 	call	0x1424	; 0x1424 <__fpcmp_parts_f>
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <__ltsf2+0x58>
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	68 96       	adiw	r28, 0x18	; 24
     e78:	e6 e0       	ldi	r30, 0x06	; 6
     e7a:	0c 94 5d 27 	jmp	0x4eba	; 0x4eba <__epilogue_restores__+0x18>

00000e7e <__floatsisf>:
     e7e:	a8 e0       	ldi	r26, 0x08	; 8
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	e5 e4       	ldi	r30, 0x45	; 69
     e84:	f7 e0       	ldi	r31, 0x07	; 7
     e86:	0c 94 3e 27 	jmp	0x4e7c	; 0x4e7c <__prologue_saves__+0x12>
     e8a:	9b 01       	movw	r18, r22
     e8c:	ac 01       	movw	r20, r24
     e8e:	83 e0       	ldi	r24, 0x03	; 3
     e90:	89 83       	std	Y+1, r24	; 0x01
     e92:	da 01       	movw	r26, r20
     e94:	c9 01       	movw	r24, r18
     e96:	88 27       	eor	r24, r24
     e98:	b7 fd       	sbrc	r27, 7
     e9a:	83 95       	inc	r24
     e9c:	99 27       	eor	r25, r25
     e9e:	aa 27       	eor	r26, r26
     ea0:	bb 27       	eor	r27, r27
     ea2:	b8 2e       	mov	r11, r24
     ea4:	21 15       	cp	r18, r1
     ea6:	31 05       	cpc	r19, r1
     ea8:	41 05       	cpc	r20, r1
     eaa:	51 05       	cpc	r21, r1
     eac:	19 f4       	brne	.+6      	; 0xeb4 <__floatsisf+0x36>
     eae:	82 e0       	ldi	r24, 0x02	; 2
     eb0:	89 83       	std	Y+1, r24	; 0x01
     eb2:	3a c0       	rjmp	.+116    	; 0xf28 <__floatsisf+0xaa>
     eb4:	88 23       	and	r24, r24
     eb6:	a9 f0       	breq	.+42     	; 0xee2 <__floatsisf+0x64>
     eb8:	20 30       	cpi	r18, 0x00	; 0
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	38 07       	cpc	r19, r24
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	48 07       	cpc	r20, r24
     ec2:	80 e8       	ldi	r24, 0x80	; 128
     ec4:	58 07       	cpc	r21, r24
     ec6:	29 f4       	brne	.+10     	; 0xed2 <__floatsisf+0x54>
     ec8:	60 e0       	ldi	r22, 0x00	; 0
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	9f ec       	ldi	r25, 0xCF	; 207
     ed0:	30 c0       	rjmp	.+96     	; 0xf32 <__floatsisf+0xb4>
     ed2:	ee 24       	eor	r14, r14
     ed4:	ff 24       	eor	r15, r15
     ed6:	87 01       	movw	r16, r14
     ed8:	e2 1a       	sub	r14, r18
     eda:	f3 0a       	sbc	r15, r19
     edc:	04 0b       	sbc	r16, r20
     ede:	15 0b       	sbc	r17, r21
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <__floatsisf+0x68>
     ee2:	79 01       	movw	r14, r18
     ee4:	8a 01       	movw	r16, r20
     ee6:	8e e1       	ldi	r24, 0x1E	; 30
     ee8:	c8 2e       	mov	r12, r24
     eea:	d1 2c       	mov	r13, r1
     eec:	dc 82       	std	Y+4, r13	; 0x04
     eee:	cb 82       	std	Y+3, r12	; 0x03
     ef0:	ed 82       	std	Y+5, r14	; 0x05
     ef2:	fe 82       	std	Y+6, r15	; 0x06
     ef4:	0f 83       	std	Y+7, r16	; 0x07
     ef6:	18 87       	std	Y+8, r17	; 0x08
     ef8:	c8 01       	movw	r24, r16
     efa:	b7 01       	movw	r22, r14
     efc:	0e 94 76 08 	call	0x10ec	; 0x10ec <__clzsi2>
     f00:	01 97       	sbiw	r24, 0x01	; 1
     f02:	18 16       	cp	r1, r24
     f04:	19 06       	cpc	r1, r25
     f06:	84 f4       	brge	.+32     	; 0xf28 <__floatsisf+0xaa>
     f08:	08 2e       	mov	r0, r24
     f0a:	04 c0       	rjmp	.+8      	; 0xf14 <__floatsisf+0x96>
     f0c:	ee 0c       	add	r14, r14
     f0e:	ff 1c       	adc	r15, r15
     f10:	00 1f       	adc	r16, r16
     f12:	11 1f       	adc	r17, r17
     f14:	0a 94       	dec	r0
     f16:	d2 f7       	brpl	.-12     	; 0xf0c <__floatsisf+0x8e>
     f18:	ed 82       	std	Y+5, r14	; 0x05
     f1a:	fe 82       	std	Y+6, r15	; 0x06
     f1c:	0f 83       	std	Y+7, r16	; 0x07
     f1e:	18 87       	std	Y+8, r17	; 0x08
     f20:	c8 1a       	sub	r12, r24
     f22:	d9 0a       	sbc	r13, r25
     f24:	dc 82       	std	Y+4, r13	; 0x04
     f26:	cb 82       	std	Y+3, r12	; 0x03
     f28:	ba 82       	std	Y+2, r11	; 0x02
     f2a:	ce 01       	movw	r24, r28
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	0e 94 c5 08 	call	0x118a	; 0x118a <__pack_f>
     f32:	28 96       	adiw	r28, 0x08	; 8
     f34:	e9 e0       	ldi	r30, 0x09	; 9
     f36:	0c 94 5a 27 	jmp	0x4eb4	; 0x4eb4 <__epilogue_restores__+0x12>

00000f3a <__fixsfsi>:
     f3a:	ac e0       	ldi	r26, 0x0C	; 12
     f3c:	b0 e0       	ldi	r27, 0x00	; 0
     f3e:	e3 ea       	ldi	r30, 0xA3	; 163
     f40:	f7 e0       	ldi	r31, 0x07	; 7
     f42:	0c 94 45 27 	jmp	0x4e8a	; 0x4e8a <__prologue_saves__+0x20>
     f46:	69 83       	std	Y+1, r22	; 0x01
     f48:	7a 83       	std	Y+2, r23	; 0x02
     f4a:	8b 83       	std	Y+3, r24	; 0x03
     f4c:	9c 83       	std	Y+4, r25	; 0x04
     f4e:	ce 01       	movw	r24, r28
     f50:	01 96       	adiw	r24, 0x01	; 1
     f52:	be 01       	movw	r22, r28
     f54:	6b 5f       	subi	r22, 0xFB	; 251
     f56:	7f 4f       	sbci	r23, 0xFF	; 255
     f58:	0e 94 9a 09 	call	0x1334	; 0x1334 <__unpack_f>
     f5c:	8d 81       	ldd	r24, Y+5	; 0x05
     f5e:	82 30       	cpi	r24, 0x02	; 2
     f60:	61 f1       	breq	.+88     	; 0xfba <__fixsfsi+0x80>
     f62:	82 30       	cpi	r24, 0x02	; 2
     f64:	50 f1       	brcs	.+84     	; 0xfba <__fixsfsi+0x80>
     f66:	84 30       	cpi	r24, 0x04	; 4
     f68:	21 f4       	brne	.+8      	; 0xf72 <__fixsfsi+0x38>
     f6a:	8e 81       	ldd	r24, Y+6	; 0x06
     f6c:	88 23       	and	r24, r24
     f6e:	51 f1       	breq	.+84     	; 0xfc4 <__fixsfsi+0x8a>
     f70:	2e c0       	rjmp	.+92     	; 0xfce <__fixsfsi+0x94>
     f72:	2f 81       	ldd	r18, Y+7	; 0x07
     f74:	38 85       	ldd	r19, Y+8	; 0x08
     f76:	37 fd       	sbrc	r19, 7
     f78:	20 c0       	rjmp	.+64     	; 0xfba <__fixsfsi+0x80>
     f7a:	6e 81       	ldd	r22, Y+6	; 0x06
     f7c:	2f 31       	cpi	r18, 0x1F	; 31
     f7e:	31 05       	cpc	r19, r1
     f80:	1c f0       	brlt	.+6      	; 0xf88 <__fixsfsi+0x4e>
     f82:	66 23       	and	r22, r22
     f84:	f9 f0       	breq	.+62     	; 0xfc4 <__fixsfsi+0x8a>
     f86:	23 c0       	rjmp	.+70     	; 0xfce <__fixsfsi+0x94>
     f88:	8e e1       	ldi	r24, 0x1E	; 30
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	82 1b       	sub	r24, r18
     f8e:	93 0b       	sbc	r25, r19
     f90:	29 85       	ldd	r18, Y+9	; 0x09
     f92:	3a 85       	ldd	r19, Y+10	; 0x0a
     f94:	4b 85       	ldd	r20, Y+11	; 0x0b
     f96:	5c 85       	ldd	r21, Y+12	; 0x0c
     f98:	04 c0       	rjmp	.+8      	; 0xfa2 <__fixsfsi+0x68>
     f9a:	56 95       	lsr	r21
     f9c:	47 95       	ror	r20
     f9e:	37 95       	ror	r19
     fa0:	27 95       	ror	r18
     fa2:	8a 95       	dec	r24
     fa4:	d2 f7       	brpl	.-12     	; 0xf9a <__fixsfsi+0x60>
     fa6:	66 23       	and	r22, r22
     fa8:	b1 f0       	breq	.+44     	; 0xfd6 <__fixsfsi+0x9c>
     faa:	50 95       	com	r21
     fac:	40 95       	com	r20
     fae:	30 95       	com	r19
     fb0:	21 95       	neg	r18
     fb2:	3f 4f       	sbci	r19, 0xFF	; 255
     fb4:	4f 4f       	sbci	r20, 0xFF	; 255
     fb6:	5f 4f       	sbci	r21, 0xFF	; 255
     fb8:	0e c0       	rjmp	.+28     	; 0xfd6 <__fixsfsi+0x9c>
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 e0       	ldi	r20, 0x00	; 0
     fc0:	50 e0       	ldi	r21, 0x00	; 0
     fc2:	09 c0       	rjmp	.+18     	; 0xfd6 <__fixsfsi+0x9c>
     fc4:	2f ef       	ldi	r18, 0xFF	; 255
     fc6:	3f ef       	ldi	r19, 0xFF	; 255
     fc8:	4f ef       	ldi	r20, 0xFF	; 255
     fca:	5f e7       	ldi	r21, 0x7F	; 127
     fcc:	04 c0       	rjmp	.+8      	; 0xfd6 <__fixsfsi+0x9c>
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	40 e0       	ldi	r20, 0x00	; 0
     fd4:	50 e8       	ldi	r21, 0x80	; 128
     fd6:	b9 01       	movw	r22, r18
     fd8:	ca 01       	movw	r24, r20
     fda:	2c 96       	adiw	r28, 0x0c	; 12
     fdc:	e2 e0       	ldi	r30, 0x02	; 2
     fde:	0c 94 61 27 	jmp	0x4ec2	; 0x4ec2 <__epilogue_restores__+0x20>

00000fe2 <__ashrdi3>:
     fe2:	ef 92       	push	r14
     fe4:	ff 92       	push	r15
     fe6:	0f 93       	push	r16
     fe8:	df 93       	push	r29
     fea:	cf 93       	push	r28
     fec:	cd b7       	in	r28, 0x3d	; 61
     fee:	de b7       	in	r29, 0x3e	; 62
     ff0:	60 97       	sbiw	r28, 0x10	; 16
     ff2:	0f b6       	in	r0, 0x3f	; 63
     ff4:	f8 94       	cli
     ff6:	de bf       	out	0x3e, r29	; 62
     ff8:	0f be       	out	0x3f, r0	; 63
     ffa:	cd bf       	out	0x3d, r28	; 61
     ffc:	a8 2f       	mov	r26, r24
     ffe:	00 23       	and	r16, r16
    1000:	09 f4       	brne	.+2      	; 0x1004 <__ashrdi3+0x22>
    1002:	67 c0       	rjmp	.+206    	; 0x10d2 <__ashrdi3+0xf0>
    1004:	7e 01       	movw	r14, r28
    1006:	08 94       	sec
    1008:	e1 1c       	adc	r14, r1
    100a:	f1 1c       	adc	r15, r1
    100c:	88 e0       	ldi	r24, 0x08	; 8
    100e:	f7 01       	movw	r30, r14
    1010:	11 92       	st	Z+, r1
    1012:	8a 95       	dec	r24
    1014:	e9 f7       	brne	.-6      	; 0x1010 <__ashrdi3+0x2e>
    1016:	29 83       	std	Y+1, r18	; 0x01
    1018:	3a 83       	std	Y+2, r19	; 0x02
    101a:	4b 83       	std	Y+3, r20	; 0x03
    101c:	5c 83       	std	Y+4, r21	; 0x04
    101e:	6d 83       	std	Y+5, r22	; 0x05
    1020:	7e 83       	std	Y+6, r23	; 0x06
    1022:	af 83       	std	Y+7, r26	; 0x07
    1024:	98 87       	std	Y+8, r25	; 0x08
    1026:	80 e2       	ldi	r24, 0x20	; 32
    1028:	80 1b       	sub	r24, r16
    102a:	4d 81       	ldd	r20, Y+5	; 0x05
    102c:	5e 81       	ldd	r21, Y+6	; 0x06
    102e:	6f 81       	ldd	r22, Y+7	; 0x07
    1030:	78 85       	ldd	r23, Y+8	; 0x08
    1032:	e8 2f       	mov	r30, r24
    1034:	ff 27       	eor	r31, r31
    1036:	e7 fd       	sbrc	r30, 7
    1038:	f0 95       	com	r31
    103a:	18 16       	cp	r1, r24
    103c:	b4 f0       	brlt	.+44     	; 0x106a <__ashrdi3+0x88>
    103e:	db 01       	movw	r26, r22
    1040:	ca 01       	movw	r24, r20
    1042:	bb 0f       	add	r27, r27
    1044:	88 0b       	sbc	r24, r24
    1046:	98 2f       	mov	r25, r24
    1048:	dc 01       	movw	r26, r24
    104a:	8d 87       	std	Y+13, r24	; 0x0d
    104c:	9e 87       	std	Y+14, r25	; 0x0e
    104e:	af 87       	std	Y+15, r26	; 0x0f
    1050:	b8 8b       	std	Y+16, r27	; 0x10
    1052:	88 27       	eor	r24, r24
    1054:	99 27       	eor	r25, r25
    1056:	8e 1b       	sub	r24, r30
    1058:	9f 0b       	sbc	r25, r31
    105a:	04 c0       	rjmp	.+8      	; 0x1064 <__ashrdi3+0x82>
    105c:	75 95       	asr	r23
    105e:	67 95       	ror	r22
    1060:	57 95       	ror	r21
    1062:	47 95       	ror	r20
    1064:	8a 95       	dec	r24
    1066:	d2 f7       	brpl	.-12     	; 0x105c <__ashrdi3+0x7a>
    1068:	28 c0       	rjmp	.+80     	; 0x10ba <__ashrdi3+0xd8>
    106a:	20 2f       	mov	r18, r16
    106c:	33 27       	eor	r19, r19
    106e:	27 fd       	sbrc	r18, 7
    1070:	30 95       	com	r19
    1072:	db 01       	movw	r26, r22
    1074:	ca 01       	movw	r24, r20
    1076:	02 2e       	mov	r0, r18
    1078:	04 c0       	rjmp	.+8      	; 0x1082 <__ashrdi3+0xa0>
    107a:	b5 95       	asr	r27
    107c:	a7 95       	ror	r26
    107e:	97 95       	ror	r25
    1080:	87 95       	ror	r24
    1082:	0a 94       	dec	r0
    1084:	d2 f7       	brpl	.-12     	; 0x107a <__ashrdi3+0x98>
    1086:	8d 87       	std	Y+13, r24	; 0x0d
    1088:	9e 87       	std	Y+14, r25	; 0x0e
    108a:	af 87       	std	Y+15, r26	; 0x0f
    108c:	b8 8b       	std	Y+16, r27	; 0x10
    108e:	04 c0       	rjmp	.+8      	; 0x1098 <__ashrdi3+0xb6>
    1090:	44 0f       	add	r20, r20
    1092:	55 1f       	adc	r21, r21
    1094:	66 1f       	adc	r22, r22
    1096:	77 1f       	adc	r23, r23
    1098:	ea 95       	dec	r30
    109a:	d2 f7       	brpl	.-12     	; 0x1090 <__ashrdi3+0xae>
    109c:	89 81       	ldd	r24, Y+1	; 0x01
    109e:	9a 81       	ldd	r25, Y+2	; 0x02
    10a0:	ab 81       	ldd	r26, Y+3	; 0x03
    10a2:	bc 81       	ldd	r27, Y+4	; 0x04
    10a4:	04 c0       	rjmp	.+8      	; 0x10ae <__ashrdi3+0xcc>
    10a6:	b6 95       	lsr	r27
    10a8:	a7 95       	ror	r26
    10aa:	97 95       	ror	r25
    10ac:	87 95       	ror	r24
    10ae:	2a 95       	dec	r18
    10b0:	d2 f7       	brpl	.-12     	; 0x10a6 <__ashrdi3+0xc4>
    10b2:	48 2b       	or	r20, r24
    10b4:	59 2b       	or	r21, r25
    10b6:	6a 2b       	or	r22, r26
    10b8:	7b 2b       	or	r23, r27
    10ba:	49 87       	std	Y+9, r20	; 0x09
    10bc:	5a 87       	std	Y+10, r21	; 0x0a
    10be:	6b 87       	std	Y+11, r22	; 0x0b
    10c0:	7c 87       	std	Y+12, r23	; 0x0c
    10c2:	29 85       	ldd	r18, Y+9	; 0x09
    10c4:	3a 85       	ldd	r19, Y+10	; 0x0a
    10c6:	4b 85       	ldd	r20, Y+11	; 0x0b
    10c8:	5c 85       	ldd	r21, Y+12	; 0x0c
    10ca:	6d 85       	ldd	r22, Y+13	; 0x0d
    10cc:	7e 85       	ldd	r23, Y+14	; 0x0e
    10ce:	af 85       	ldd	r26, Y+15	; 0x0f
    10d0:	98 89       	ldd	r25, Y+16	; 0x10
    10d2:	8a 2f       	mov	r24, r26
    10d4:	60 96       	adiw	r28, 0x10	; 16
    10d6:	0f b6       	in	r0, 0x3f	; 63
    10d8:	f8 94       	cli
    10da:	de bf       	out	0x3e, r29	; 62
    10dc:	0f be       	out	0x3f, r0	; 63
    10de:	cd bf       	out	0x3d, r28	; 61
    10e0:	cf 91       	pop	r28
    10e2:	df 91       	pop	r29
    10e4:	0f 91       	pop	r16
    10e6:	ff 90       	pop	r15
    10e8:	ef 90       	pop	r14
    10ea:	08 95       	ret

000010ec <__clzsi2>:
    10ec:	ef 92       	push	r14
    10ee:	ff 92       	push	r15
    10f0:	0f 93       	push	r16
    10f2:	1f 93       	push	r17
    10f4:	7b 01       	movw	r14, r22
    10f6:	8c 01       	movw	r16, r24
    10f8:	80 e0       	ldi	r24, 0x00	; 0
    10fa:	e8 16       	cp	r14, r24
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	f8 06       	cpc	r15, r24
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	08 07       	cpc	r16, r24
    1104:	80 e0       	ldi	r24, 0x00	; 0
    1106:	18 07       	cpc	r17, r24
    1108:	88 f4       	brcc	.+34     	; 0x112c <__clzsi2+0x40>
    110a:	8f ef       	ldi	r24, 0xFF	; 255
    110c:	e8 16       	cp	r14, r24
    110e:	f1 04       	cpc	r15, r1
    1110:	01 05       	cpc	r16, r1
    1112:	11 05       	cpc	r17, r1
    1114:	31 f0       	breq	.+12     	; 0x1122 <__clzsi2+0x36>
    1116:	28 f0       	brcs	.+10     	; 0x1122 <__clzsi2+0x36>
    1118:	88 e0       	ldi	r24, 0x08	; 8
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	a0 e0       	ldi	r26, 0x00	; 0
    111e:	b0 e0       	ldi	r27, 0x00	; 0
    1120:	17 c0       	rjmp	.+46     	; 0x1150 <__clzsi2+0x64>
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	a0 e0       	ldi	r26, 0x00	; 0
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	12 c0       	rjmp	.+36     	; 0x1150 <__clzsi2+0x64>
    112c:	80 e0       	ldi	r24, 0x00	; 0
    112e:	e8 16       	cp	r14, r24
    1130:	80 e0       	ldi	r24, 0x00	; 0
    1132:	f8 06       	cpc	r15, r24
    1134:	80 e0       	ldi	r24, 0x00	; 0
    1136:	08 07       	cpc	r16, r24
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	18 07       	cpc	r17, r24
    113c:	28 f0       	brcs	.+10     	; 0x1148 <__clzsi2+0x5c>
    113e:	88 e1       	ldi	r24, 0x18	; 24
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	a0 e0       	ldi	r26, 0x00	; 0
    1144:	b0 e0       	ldi	r27, 0x00	; 0
    1146:	04 c0       	rjmp	.+8      	; 0x1150 <__clzsi2+0x64>
    1148:	80 e1       	ldi	r24, 0x10	; 16
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	a0 e0       	ldi	r26, 0x00	; 0
    114e:	b0 e0       	ldi	r27, 0x00	; 0
    1150:	20 e2       	ldi	r18, 0x20	; 32
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	40 e0       	ldi	r20, 0x00	; 0
    1156:	50 e0       	ldi	r21, 0x00	; 0
    1158:	28 1b       	sub	r18, r24
    115a:	39 0b       	sbc	r19, r25
    115c:	4a 0b       	sbc	r20, r26
    115e:	5b 0b       	sbc	r21, r27
    1160:	04 c0       	rjmp	.+8      	; 0x116a <__clzsi2+0x7e>
    1162:	16 95       	lsr	r17
    1164:	07 95       	ror	r16
    1166:	f7 94       	ror	r15
    1168:	e7 94       	ror	r14
    116a:	8a 95       	dec	r24
    116c:	d2 f7       	brpl	.-12     	; 0x1162 <__clzsi2+0x76>
    116e:	f7 01       	movw	r30, r14
    1170:	e6 58       	subi	r30, 0x86	; 134
    1172:	ff 4f       	sbci	r31, 0xFF	; 255
    1174:	80 81       	ld	r24, Z
    1176:	28 1b       	sub	r18, r24
    1178:	31 09       	sbc	r19, r1
    117a:	41 09       	sbc	r20, r1
    117c:	51 09       	sbc	r21, r1
    117e:	c9 01       	movw	r24, r18
    1180:	1f 91       	pop	r17
    1182:	0f 91       	pop	r16
    1184:	ff 90       	pop	r15
    1186:	ef 90       	pop	r14
    1188:	08 95       	ret

0000118a <__pack_f>:
    118a:	df 92       	push	r13
    118c:	ef 92       	push	r14
    118e:	ff 92       	push	r15
    1190:	0f 93       	push	r16
    1192:	1f 93       	push	r17
    1194:	fc 01       	movw	r30, r24
    1196:	e4 80       	ldd	r14, Z+4	; 0x04
    1198:	f5 80       	ldd	r15, Z+5	; 0x05
    119a:	06 81       	ldd	r16, Z+6	; 0x06
    119c:	17 81       	ldd	r17, Z+7	; 0x07
    119e:	d1 80       	ldd	r13, Z+1	; 0x01
    11a0:	80 81       	ld	r24, Z
    11a2:	82 30       	cpi	r24, 0x02	; 2
    11a4:	48 f4       	brcc	.+18     	; 0x11b8 <__pack_f+0x2e>
    11a6:	80 e0       	ldi	r24, 0x00	; 0
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	a0 e1       	ldi	r26, 0x10	; 16
    11ac:	b0 e0       	ldi	r27, 0x00	; 0
    11ae:	e8 2a       	or	r14, r24
    11b0:	f9 2a       	or	r15, r25
    11b2:	0a 2b       	or	r16, r26
    11b4:	1b 2b       	or	r17, r27
    11b6:	a5 c0       	rjmp	.+330    	; 0x1302 <__pack_f+0x178>
    11b8:	84 30       	cpi	r24, 0x04	; 4
    11ba:	09 f4       	brne	.+2      	; 0x11be <__pack_f+0x34>
    11bc:	9f c0       	rjmp	.+318    	; 0x12fc <__pack_f+0x172>
    11be:	82 30       	cpi	r24, 0x02	; 2
    11c0:	21 f4       	brne	.+8      	; 0x11ca <__pack_f+0x40>
    11c2:	ee 24       	eor	r14, r14
    11c4:	ff 24       	eor	r15, r15
    11c6:	87 01       	movw	r16, r14
    11c8:	05 c0       	rjmp	.+10     	; 0x11d4 <__pack_f+0x4a>
    11ca:	e1 14       	cp	r14, r1
    11cc:	f1 04       	cpc	r15, r1
    11ce:	01 05       	cpc	r16, r1
    11d0:	11 05       	cpc	r17, r1
    11d2:	19 f4       	brne	.+6      	; 0x11da <__pack_f+0x50>
    11d4:	e0 e0       	ldi	r30, 0x00	; 0
    11d6:	f0 e0       	ldi	r31, 0x00	; 0
    11d8:	96 c0       	rjmp	.+300    	; 0x1306 <__pack_f+0x17c>
    11da:	62 81       	ldd	r22, Z+2	; 0x02
    11dc:	73 81       	ldd	r23, Z+3	; 0x03
    11de:	9f ef       	ldi	r25, 0xFF	; 255
    11e0:	62 38       	cpi	r22, 0x82	; 130
    11e2:	79 07       	cpc	r23, r25
    11e4:	0c f0       	brlt	.+2      	; 0x11e8 <__pack_f+0x5e>
    11e6:	5b c0       	rjmp	.+182    	; 0x129e <__pack_f+0x114>
    11e8:	22 e8       	ldi	r18, 0x82	; 130
    11ea:	3f ef       	ldi	r19, 0xFF	; 255
    11ec:	26 1b       	sub	r18, r22
    11ee:	37 0b       	sbc	r19, r23
    11f0:	2a 31       	cpi	r18, 0x1A	; 26
    11f2:	31 05       	cpc	r19, r1
    11f4:	2c f0       	brlt	.+10     	; 0x1200 <__pack_f+0x76>
    11f6:	20 e0       	ldi	r18, 0x00	; 0
    11f8:	30 e0       	ldi	r19, 0x00	; 0
    11fa:	40 e0       	ldi	r20, 0x00	; 0
    11fc:	50 e0       	ldi	r21, 0x00	; 0
    11fe:	2a c0       	rjmp	.+84     	; 0x1254 <__pack_f+0xca>
    1200:	b8 01       	movw	r22, r16
    1202:	a7 01       	movw	r20, r14
    1204:	02 2e       	mov	r0, r18
    1206:	04 c0       	rjmp	.+8      	; 0x1210 <__pack_f+0x86>
    1208:	76 95       	lsr	r23
    120a:	67 95       	ror	r22
    120c:	57 95       	ror	r21
    120e:	47 95       	ror	r20
    1210:	0a 94       	dec	r0
    1212:	d2 f7       	brpl	.-12     	; 0x1208 <__pack_f+0x7e>
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	a0 e0       	ldi	r26, 0x00	; 0
    121a:	b0 e0       	ldi	r27, 0x00	; 0
    121c:	04 c0       	rjmp	.+8      	; 0x1226 <__pack_f+0x9c>
    121e:	88 0f       	add	r24, r24
    1220:	99 1f       	adc	r25, r25
    1222:	aa 1f       	adc	r26, r26
    1224:	bb 1f       	adc	r27, r27
    1226:	2a 95       	dec	r18
    1228:	d2 f7       	brpl	.-12     	; 0x121e <__pack_f+0x94>
    122a:	01 97       	sbiw	r24, 0x01	; 1
    122c:	a1 09       	sbc	r26, r1
    122e:	b1 09       	sbc	r27, r1
    1230:	8e 21       	and	r24, r14
    1232:	9f 21       	and	r25, r15
    1234:	a0 23       	and	r26, r16
    1236:	b1 23       	and	r27, r17
    1238:	00 97       	sbiw	r24, 0x00	; 0
    123a:	a1 05       	cpc	r26, r1
    123c:	b1 05       	cpc	r27, r1
    123e:	21 f0       	breq	.+8      	; 0x1248 <__pack_f+0xbe>
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	a0 e0       	ldi	r26, 0x00	; 0
    1246:	b0 e0       	ldi	r27, 0x00	; 0
    1248:	9a 01       	movw	r18, r20
    124a:	ab 01       	movw	r20, r22
    124c:	28 2b       	or	r18, r24
    124e:	39 2b       	or	r19, r25
    1250:	4a 2b       	or	r20, r26
    1252:	5b 2b       	or	r21, r27
    1254:	da 01       	movw	r26, r20
    1256:	c9 01       	movw	r24, r18
    1258:	8f 77       	andi	r24, 0x7F	; 127
    125a:	90 70       	andi	r25, 0x00	; 0
    125c:	a0 70       	andi	r26, 0x00	; 0
    125e:	b0 70       	andi	r27, 0x00	; 0
    1260:	80 34       	cpi	r24, 0x40	; 64
    1262:	91 05       	cpc	r25, r1
    1264:	a1 05       	cpc	r26, r1
    1266:	b1 05       	cpc	r27, r1
    1268:	39 f4       	brne	.+14     	; 0x1278 <__pack_f+0xee>
    126a:	27 ff       	sbrs	r18, 7
    126c:	09 c0       	rjmp	.+18     	; 0x1280 <__pack_f+0xf6>
    126e:	20 5c       	subi	r18, 0xC0	; 192
    1270:	3f 4f       	sbci	r19, 0xFF	; 255
    1272:	4f 4f       	sbci	r20, 0xFF	; 255
    1274:	5f 4f       	sbci	r21, 0xFF	; 255
    1276:	04 c0       	rjmp	.+8      	; 0x1280 <__pack_f+0xf6>
    1278:	21 5c       	subi	r18, 0xC1	; 193
    127a:	3f 4f       	sbci	r19, 0xFF	; 255
    127c:	4f 4f       	sbci	r20, 0xFF	; 255
    127e:	5f 4f       	sbci	r21, 0xFF	; 255
    1280:	e0 e0       	ldi	r30, 0x00	; 0
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	20 30       	cpi	r18, 0x00	; 0
    1286:	a0 e0       	ldi	r26, 0x00	; 0
    1288:	3a 07       	cpc	r19, r26
    128a:	a0 e0       	ldi	r26, 0x00	; 0
    128c:	4a 07       	cpc	r20, r26
    128e:	a0 e4       	ldi	r26, 0x40	; 64
    1290:	5a 07       	cpc	r21, r26
    1292:	10 f0       	brcs	.+4      	; 0x1298 <__pack_f+0x10e>
    1294:	e1 e0       	ldi	r30, 0x01	; 1
    1296:	f0 e0       	ldi	r31, 0x00	; 0
    1298:	79 01       	movw	r14, r18
    129a:	8a 01       	movw	r16, r20
    129c:	27 c0       	rjmp	.+78     	; 0x12ec <__pack_f+0x162>
    129e:	60 38       	cpi	r22, 0x80	; 128
    12a0:	71 05       	cpc	r23, r1
    12a2:	64 f5       	brge	.+88     	; 0x12fc <__pack_f+0x172>
    12a4:	fb 01       	movw	r30, r22
    12a6:	e1 58       	subi	r30, 0x81	; 129
    12a8:	ff 4f       	sbci	r31, 0xFF	; 255
    12aa:	d8 01       	movw	r26, r16
    12ac:	c7 01       	movw	r24, r14
    12ae:	8f 77       	andi	r24, 0x7F	; 127
    12b0:	90 70       	andi	r25, 0x00	; 0
    12b2:	a0 70       	andi	r26, 0x00	; 0
    12b4:	b0 70       	andi	r27, 0x00	; 0
    12b6:	80 34       	cpi	r24, 0x40	; 64
    12b8:	91 05       	cpc	r25, r1
    12ba:	a1 05       	cpc	r26, r1
    12bc:	b1 05       	cpc	r27, r1
    12be:	39 f4       	brne	.+14     	; 0x12ce <__pack_f+0x144>
    12c0:	e7 fe       	sbrs	r14, 7
    12c2:	0d c0       	rjmp	.+26     	; 0x12de <__pack_f+0x154>
    12c4:	80 e4       	ldi	r24, 0x40	; 64
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	a0 e0       	ldi	r26, 0x00	; 0
    12ca:	b0 e0       	ldi	r27, 0x00	; 0
    12cc:	04 c0       	rjmp	.+8      	; 0x12d6 <__pack_f+0x14c>
    12ce:	8f e3       	ldi	r24, 0x3F	; 63
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	a0 e0       	ldi	r26, 0x00	; 0
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	e8 0e       	add	r14, r24
    12d8:	f9 1e       	adc	r15, r25
    12da:	0a 1f       	adc	r16, r26
    12dc:	1b 1f       	adc	r17, r27
    12de:	17 ff       	sbrs	r17, 7
    12e0:	05 c0       	rjmp	.+10     	; 0x12ec <__pack_f+0x162>
    12e2:	16 95       	lsr	r17
    12e4:	07 95       	ror	r16
    12e6:	f7 94       	ror	r15
    12e8:	e7 94       	ror	r14
    12ea:	31 96       	adiw	r30, 0x01	; 1
    12ec:	87 e0       	ldi	r24, 0x07	; 7
    12ee:	16 95       	lsr	r17
    12f0:	07 95       	ror	r16
    12f2:	f7 94       	ror	r15
    12f4:	e7 94       	ror	r14
    12f6:	8a 95       	dec	r24
    12f8:	d1 f7       	brne	.-12     	; 0x12ee <__pack_f+0x164>
    12fa:	05 c0       	rjmp	.+10     	; 0x1306 <__pack_f+0x17c>
    12fc:	ee 24       	eor	r14, r14
    12fe:	ff 24       	eor	r15, r15
    1300:	87 01       	movw	r16, r14
    1302:	ef ef       	ldi	r30, 0xFF	; 255
    1304:	f0 e0       	ldi	r31, 0x00	; 0
    1306:	6e 2f       	mov	r22, r30
    1308:	67 95       	ror	r22
    130a:	66 27       	eor	r22, r22
    130c:	67 95       	ror	r22
    130e:	90 2f       	mov	r25, r16
    1310:	9f 77       	andi	r25, 0x7F	; 127
    1312:	d7 94       	ror	r13
    1314:	dd 24       	eor	r13, r13
    1316:	d7 94       	ror	r13
    1318:	8e 2f       	mov	r24, r30
    131a:	86 95       	lsr	r24
    131c:	49 2f       	mov	r20, r25
    131e:	46 2b       	or	r20, r22
    1320:	58 2f       	mov	r21, r24
    1322:	5d 29       	or	r21, r13
    1324:	b7 01       	movw	r22, r14
    1326:	ca 01       	movw	r24, r20
    1328:	1f 91       	pop	r17
    132a:	0f 91       	pop	r16
    132c:	ff 90       	pop	r15
    132e:	ef 90       	pop	r14
    1330:	df 90       	pop	r13
    1332:	08 95       	ret

00001334 <__unpack_f>:
    1334:	fc 01       	movw	r30, r24
    1336:	db 01       	movw	r26, r22
    1338:	40 81       	ld	r20, Z
    133a:	51 81       	ldd	r21, Z+1	; 0x01
    133c:	22 81       	ldd	r18, Z+2	; 0x02
    133e:	62 2f       	mov	r22, r18
    1340:	6f 77       	andi	r22, 0x7F	; 127
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	22 1f       	adc	r18, r18
    1346:	22 27       	eor	r18, r18
    1348:	22 1f       	adc	r18, r18
    134a:	93 81       	ldd	r25, Z+3	; 0x03
    134c:	89 2f       	mov	r24, r25
    134e:	88 0f       	add	r24, r24
    1350:	82 2b       	or	r24, r18
    1352:	28 2f       	mov	r18, r24
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	99 1f       	adc	r25, r25
    1358:	99 27       	eor	r25, r25
    135a:	99 1f       	adc	r25, r25
    135c:	11 96       	adiw	r26, 0x01	; 1
    135e:	9c 93       	st	X, r25
    1360:	11 97       	sbiw	r26, 0x01	; 1
    1362:	21 15       	cp	r18, r1
    1364:	31 05       	cpc	r19, r1
    1366:	a9 f5       	brne	.+106    	; 0x13d2 <__unpack_f+0x9e>
    1368:	41 15       	cp	r20, r1
    136a:	51 05       	cpc	r21, r1
    136c:	61 05       	cpc	r22, r1
    136e:	71 05       	cpc	r23, r1
    1370:	11 f4       	brne	.+4      	; 0x1376 <__unpack_f+0x42>
    1372:	82 e0       	ldi	r24, 0x02	; 2
    1374:	37 c0       	rjmp	.+110    	; 0x13e4 <__unpack_f+0xb0>
    1376:	82 e8       	ldi	r24, 0x82	; 130
    1378:	9f ef       	ldi	r25, 0xFF	; 255
    137a:	13 96       	adiw	r26, 0x03	; 3
    137c:	9c 93       	st	X, r25
    137e:	8e 93       	st	-X, r24
    1380:	12 97       	sbiw	r26, 0x02	; 2
    1382:	9a 01       	movw	r18, r20
    1384:	ab 01       	movw	r20, r22
    1386:	67 e0       	ldi	r22, 0x07	; 7
    1388:	22 0f       	add	r18, r18
    138a:	33 1f       	adc	r19, r19
    138c:	44 1f       	adc	r20, r20
    138e:	55 1f       	adc	r21, r21
    1390:	6a 95       	dec	r22
    1392:	d1 f7       	brne	.-12     	; 0x1388 <__unpack_f+0x54>
    1394:	83 e0       	ldi	r24, 0x03	; 3
    1396:	8c 93       	st	X, r24
    1398:	0d c0       	rjmp	.+26     	; 0x13b4 <__unpack_f+0x80>
    139a:	22 0f       	add	r18, r18
    139c:	33 1f       	adc	r19, r19
    139e:	44 1f       	adc	r20, r20
    13a0:	55 1f       	adc	r21, r21
    13a2:	12 96       	adiw	r26, 0x02	; 2
    13a4:	8d 91       	ld	r24, X+
    13a6:	9c 91       	ld	r25, X
    13a8:	13 97       	sbiw	r26, 0x03	; 3
    13aa:	01 97       	sbiw	r24, 0x01	; 1
    13ac:	13 96       	adiw	r26, 0x03	; 3
    13ae:	9c 93       	st	X, r25
    13b0:	8e 93       	st	-X, r24
    13b2:	12 97       	sbiw	r26, 0x02	; 2
    13b4:	20 30       	cpi	r18, 0x00	; 0
    13b6:	80 e0       	ldi	r24, 0x00	; 0
    13b8:	38 07       	cpc	r19, r24
    13ba:	80 e0       	ldi	r24, 0x00	; 0
    13bc:	48 07       	cpc	r20, r24
    13be:	80 e4       	ldi	r24, 0x40	; 64
    13c0:	58 07       	cpc	r21, r24
    13c2:	58 f3       	brcs	.-42     	; 0x139a <__unpack_f+0x66>
    13c4:	14 96       	adiw	r26, 0x04	; 4
    13c6:	2d 93       	st	X+, r18
    13c8:	3d 93       	st	X+, r19
    13ca:	4d 93       	st	X+, r20
    13cc:	5c 93       	st	X, r21
    13ce:	17 97       	sbiw	r26, 0x07	; 7
    13d0:	08 95       	ret
    13d2:	2f 3f       	cpi	r18, 0xFF	; 255
    13d4:	31 05       	cpc	r19, r1
    13d6:	79 f4       	brne	.+30     	; 0x13f6 <__unpack_f+0xc2>
    13d8:	41 15       	cp	r20, r1
    13da:	51 05       	cpc	r21, r1
    13dc:	61 05       	cpc	r22, r1
    13de:	71 05       	cpc	r23, r1
    13e0:	19 f4       	brne	.+6      	; 0x13e8 <__unpack_f+0xb4>
    13e2:	84 e0       	ldi	r24, 0x04	; 4
    13e4:	8c 93       	st	X, r24
    13e6:	08 95       	ret
    13e8:	64 ff       	sbrs	r22, 4
    13ea:	03 c0       	rjmp	.+6      	; 0x13f2 <__unpack_f+0xbe>
    13ec:	81 e0       	ldi	r24, 0x01	; 1
    13ee:	8c 93       	st	X, r24
    13f0:	12 c0       	rjmp	.+36     	; 0x1416 <__unpack_f+0xe2>
    13f2:	1c 92       	st	X, r1
    13f4:	10 c0       	rjmp	.+32     	; 0x1416 <__unpack_f+0xe2>
    13f6:	2f 57       	subi	r18, 0x7F	; 127
    13f8:	30 40       	sbci	r19, 0x00	; 0
    13fa:	13 96       	adiw	r26, 0x03	; 3
    13fc:	3c 93       	st	X, r19
    13fe:	2e 93       	st	-X, r18
    1400:	12 97       	sbiw	r26, 0x02	; 2
    1402:	83 e0       	ldi	r24, 0x03	; 3
    1404:	8c 93       	st	X, r24
    1406:	87 e0       	ldi	r24, 0x07	; 7
    1408:	44 0f       	add	r20, r20
    140a:	55 1f       	adc	r21, r21
    140c:	66 1f       	adc	r22, r22
    140e:	77 1f       	adc	r23, r23
    1410:	8a 95       	dec	r24
    1412:	d1 f7       	brne	.-12     	; 0x1408 <__unpack_f+0xd4>
    1414:	70 64       	ori	r23, 0x40	; 64
    1416:	14 96       	adiw	r26, 0x04	; 4
    1418:	4d 93       	st	X+, r20
    141a:	5d 93       	st	X+, r21
    141c:	6d 93       	st	X+, r22
    141e:	7c 93       	st	X, r23
    1420:	17 97       	sbiw	r26, 0x07	; 7
    1422:	08 95       	ret

00001424 <__fpcmp_parts_f>:
    1424:	1f 93       	push	r17
    1426:	dc 01       	movw	r26, r24
    1428:	fb 01       	movw	r30, r22
    142a:	9c 91       	ld	r25, X
    142c:	92 30       	cpi	r25, 0x02	; 2
    142e:	08 f4       	brcc	.+2      	; 0x1432 <__fpcmp_parts_f+0xe>
    1430:	47 c0       	rjmp	.+142    	; 0x14c0 <__fpcmp_parts_f+0x9c>
    1432:	80 81       	ld	r24, Z
    1434:	82 30       	cpi	r24, 0x02	; 2
    1436:	08 f4       	brcc	.+2      	; 0x143a <__fpcmp_parts_f+0x16>
    1438:	43 c0       	rjmp	.+134    	; 0x14c0 <__fpcmp_parts_f+0x9c>
    143a:	94 30       	cpi	r25, 0x04	; 4
    143c:	51 f4       	brne	.+20     	; 0x1452 <__fpcmp_parts_f+0x2e>
    143e:	11 96       	adiw	r26, 0x01	; 1
    1440:	1c 91       	ld	r17, X
    1442:	84 30       	cpi	r24, 0x04	; 4
    1444:	99 f5       	brne	.+102    	; 0x14ac <__fpcmp_parts_f+0x88>
    1446:	81 81       	ldd	r24, Z+1	; 0x01
    1448:	68 2f       	mov	r22, r24
    144a:	70 e0       	ldi	r23, 0x00	; 0
    144c:	61 1b       	sub	r22, r17
    144e:	71 09       	sbc	r23, r1
    1450:	3f c0       	rjmp	.+126    	; 0x14d0 <__fpcmp_parts_f+0xac>
    1452:	84 30       	cpi	r24, 0x04	; 4
    1454:	21 f0       	breq	.+8      	; 0x145e <__fpcmp_parts_f+0x3a>
    1456:	92 30       	cpi	r25, 0x02	; 2
    1458:	31 f4       	brne	.+12     	; 0x1466 <__fpcmp_parts_f+0x42>
    145a:	82 30       	cpi	r24, 0x02	; 2
    145c:	b9 f1       	breq	.+110    	; 0x14cc <__fpcmp_parts_f+0xa8>
    145e:	81 81       	ldd	r24, Z+1	; 0x01
    1460:	88 23       	and	r24, r24
    1462:	89 f1       	breq	.+98     	; 0x14c6 <__fpcmp_parts_f+0xa2>
    1464:	2d c0       	rjmp	.+90     	; 0x14c0 <__fpcmp_parts_f+0x9c>
    1466:	11 96       	adiw	r26, 0x01	; 1
    1468:	1c 91       	ld	r17, X
    146a:	11 97       	sbiw	r26, 0x01	; 1
    146c:	82 30       	cpi	r24, 0x02	; 2
    146e:	f1 f0       	breq	.+60     	; 0x14ac <__fpcmp_parts_f+0x88>
    1470:	81 81       	ldd	r24, Z+1	; 0x01
    1472:	18 17       	cp	r17, r24
    1474:	d9 f4       	brne	.+54     	; 0x14ac <__fpcmp_parts_f+0x88>
    1476:	12 96       	adiw	r26, 0x02	; 2
    1478:	2d 91       	ld	r18, X+
    147a:	3c 91       	ld	r19, X
    147c:	13 97       	sbiw	r26, 0x03	; 3
    147e:	82 81       	ldd	r24, Z+2	; 0x02
    1480:	93 81       	ldd	r25, Z+3	; 0x03
    1482:	82 17       	cp	r24, r18
    1484:	93 07       	cpc	r25, r19
    1486:	94 f0       	brlt	.+36     	; 0x14ac <__fpcmp_parts_f+0x88>
    1488:	28 17       	cp	r18, r24
    148a:	39 07       	cpc	r19, r25
    148c:	bc f0       	brlt	.+46     	; 0x14bc <__fpcmp_parts_f+0x98>
    148e:	14 96       	adiw	r26, 0x04	; 4
    1490:	8d 91       	ld	r24, X+
    1492:	9d 91       	ld	r25, X+
    1494:	0d 90       	ld	r0, X+
    1496:	bc 91       	ld	r27, X
    1498:	a0 2d       	mov	r26, r0
    149a:	24 81       	ldd	r18, Z+4	; 0x04
    149c:	35 81       	ldd	r19, Z+5	; 0x05
    149e:	46 81       	ldd	r20, Z+6	; 0x06
    14a0:	57 81       	ldd	r21, Z+7	; 0x07
    14a2:	28 17       	cp	r18, r24
    14a4:	39 07       	cpc	r19, r25
    14a6:	4a 07       	cpc	r20, r26
    14a8:	5b 07       	cpc	r21, r27
    14aa:	18 f4       	brcc	.+6      	; 0x14b2 <__fpcmp_parts_f+0x8e>
    14ac:	11 23       	and	r17, r17
    14ae:	41 f0       	breq	.+16     	; 0x14c0 <__fpcmp_parts_f+0x9c>
    14b0:	0a c0       	rjmp	.+20     	; 0x14c6 <__fpcmp_parts_f+0xa2>
    14b2:	82 17       	cp	r24, r18
    14b4:	93 07       	cpc	r25, r19
    14b6:	a4 07       	cpc	r26, r20
    14b8:	b5 07       	cpc	r27, r21
    14ba:	40 f4       	brcc	.+16     	; 0x14cc <__fpcmp_parts_f+0xa8>
    14bc:	11 23       	and	r17, r17
    14be:	19 f0       	breq	.+6      	; 0x14c6 <__fpcmp_parts_f+0xa2>
    14c0:	61 e0       	ldi	r22, 0x01	; 1
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	05 c0       	rjmp	.+10     	; 0x14d0 <__fpcmp_parts_f+0xac>
    14c6:	6f ef       	ldi	r22, 0xFF	; 255
    14c8:	7f ef       	ldi	r23, 0xFF	; 255
    14ca:	02 c0       	rjmp	.+4      	; 0x14d0 <__fpcmp_parts_f+0xac>
    14cc:	60 e0       	ldi	r22, 0x00	; 0
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	cb 01       	movw	r24, r22
    14d2:	1f 91       	pop	r17
    14d4:	08 95       	ret

000014d6 <main>:
 */
#include "keypad.h"
#include "lcd.h"
#include <util/delay.h>
#define tenReverance 10
int main(void) {
    14d6:	2f 92       	push	r2
    14d8:	3f 92       	push	r3
    14da:	4f 92       	push	r4
    14dc:	5f 92       	push	r5
    14de:	6f 92       	push	r6
    14e0:	7f 92       	push	r7
    14e2:	8f 92       	push	r8
    14e4:	9f 92       	push	r9
    14e6:	af 92       	push	r10
    14e8:	bf 92       	push	r11
    14ea:	cf 92       	push	r12
    14ec:	df 92       	push	r13
    14ee:	ef 92       	push	r14
    14f0:	ff 92       	push	r15
    14f2:	0f 93       	push	r16
    14f4:	1f 93       	push	r17
    14f6:	df 93       	push	r29
    14f8:	cf 93       	push	r28
    14fa:	cd b7       	in	r28, 0x3d	; 61
    14fc:	de b7       	in	r29, 0x3e	; 62
    14fe:	c2 5e       	subi	r28, 0xE2	; 226
    1500:	d0 40       	sbci	r29, 0x00	; 0
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	f8 94       	cli
    1506:	de bf       	out	0x3e, r29	; 62
    1508:	0f be       	out	0x3f, r0	; 63
    150a:	cd bf       	out	0x3d, r28	; 61
	LCD_init();
    150c:	0e 94 8f 1c 	call	0x391e	; 0x391e <LCD_init>
	sint64 num[2] = { 0, 0 };
    1510:	ce 01       	movw	r24, r28
    1512:	8c 58       	subi	r24, 0x8C	; 140
    1514:	9f 4f       	sbci	r25, 0xFF	; 255
    1516:	c8 56       	subi	r28, 0x68	; 104
    1518:	df 4f       	sbci	r29, 0xFF	; 255
    151a:	99 83       	std	Y+1, r25	; 0x01
    151c:	88 83       	st	Y, r24
    151e:	c8 59       	subi	r28, 0x98	; 152
    1520:	d0 40       	sbci	r29, 0x00	; 0
    1522:	0a e7       	ldi	r16, 0x7A	; 122
    1524:	11 e0       	ldi	r17, 0x01	; 1
    1526:	c6 56       	subi	r28, 0x66	; 102
    1528:	df 4f       	sbci	r29, 0xFF	; 255
    152a:	19 83       	std	Y+1, r17	; 0x01
    152c:	08 83       	st	Y, r16
    152e:	ca 59       	subi	r28, 0x9A	; 154
    1530:	d0 40       	sbci	r29, 0x00	; 0
    1532:	10 e1       	ldi	r17, 0x10	; 16
    1534:	c4 56       	subi	r28, 0x64	; 100
    1536:	df 4f       	sbci	r29, 0xFF	; 255
    1538:	18 83       	st	Y, r17
    153a:	cc 59       	subi	r28, 0x9C	; 156
    153c:	d0 40       	sbci	r29, 0x00	; 0
    153e:	c6 56       	subi	r28, 0x66	; 102
    1540:	df 4f       	sbci	r29, 0xFF	; 255
    1542:	e8 81       	ld	r30, Y
    1544:	f9 81       	ldd	r31, Y+1	; 0x01
    1546:	ca 59       	subi	r28, 0x9A	; 154
    1548:	d0 40       	sbci	r29, 0x00	; 0
    154a:	00 80       	ld	r0, Z
    154c:	c6 56       	subi	r28, 0x66	; 102
    154e:	df 4f       	sbci	r29, 0xFF	; 255
    1550:	08 81       	ld	r16, Y
    1552:	19 81       	ldd	r17, Y+1	; 0x01
    1554:	ca 59       	subi	r28, 0x9A	; 154
    1556:	d0 40       	sbci	r29, 0x00	; 0
    1558:	0f 5f       	subi	r16, 0xFF	; 255
    155a:	1f 4f       	sbci	r17, 0xFF	; 255
    155c:	c6 56       	subi	r28, 0x66	; 102
    155e:	df 4f       	sbci	r29, 0xFF	; 255
    1560:	19 83       	std	Y+1, r17	; 0x01
    1562:	08 83       	st	Y, r16
    1564:	ca 59       	subi	r28, 0x9A	; 154
    1566:	d0 40       	sbci	r29, 0x00	; 0
    1568:	c8 56       	subi	r28, 0x68	; 104
    156a:	df 4f       	sbci	r29, 0xFF	; 255
    156c:	e8 81       	ld	r30, Y
    156e:	f9 81       	ldd	r31, Y+1	; 0x01
    1570:	c8 59       	subi	r28, 0x98	; 152
    1572:	d0 40       	sbci	r29, 0x00	; 0
    1574:	00 82       	st	Z, r0
    1576:	c8 56       	subi	r28, 0x68	; 104
    1578:	df 4f       	sbci	r29, 0xFF	; 255
    157a:	08 81       	ld	r16, Y
    157c:	19 81       	ldd	r17, Y+1	; 0x01
    157e:	c8 59       	subi	r28, 0x98	; 152
    1580:	d0 40       	sbci	r29, 0x00	; 0
    1582:	0f 5f       	subi	r16, 0xFF	; 255
    1584:	1f 4f       	sbci	r17, 0xFF	; 255
    1586:	c8 56       	subi	r28, 0x68	; 104
    1588:	df 4f       	sbci	r29, 0xFF	; 255
    158a:	19 83       	std	Y+1, r17	; 0x01
    158c:	08 83       	st	Y, r16
    158e:	c8 59       	subi	r28, 0x98	; 152
    1590:	d0 40       	sbci	r29, 0x00	; 0
    1592:	c4 56       	subi	r28, 0x64	; 100
    1594:	df 4f       	sbci	r29, 0xFF	; 255
    1596:	18 81       	ld	r17, Y
    1598:	cc 59       	subi	r28, 0x9C	; 156
    159a:	d0 40       	sbci	r29, 0x00	; 0
    159c:	11 50       	subi	r17, 0x01	; 1
    159e:	c4 56       	subi	r28, 0x64	; 100
    15a0:	df 4f       	sbci	r29, 0xFF	; 255
    15a2:	18 83       	st	Y, r17
    15a4:	cc 59       	subi	r28, 0x9C	; 156
    15a6:	d0 40       	sbci	r29, 0x00	; 0
    15a8:	c4 56       	subi	r28, 0x64	; 100
    15aa:	df 4f       	sbci	r29, 0xFF	; 255
    15ac:	28 81       	ld	r18, Y
    15ae:	cc 59       	subi	r28, 0x9C	; 156
    15b0:	d0 40       	sbci	r29, 0x00	; 0
    15b2:	22 23       	and	r18, r18
    15b4:	21 f6       	brne	.-120    	; 0x153e <main+0x68>
	uint8 counter = 0, operation, temp;
    15b6:	fe 01       	movw	r30, r28
    15b8:	ed 58       	subi	r30, 0x8D	; 141
    15ba:	ff 4f       	sbci	r31, 0xFF	; 255
    15bc:	10 82       	st	Z, r1
	LCD_displayStringRowColumn(0, 2, "Simple");
    15be:	20 e6       	ldi	r18, 0x60	; 96
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	62 e0       	ldi	r22, 0x02	; 2
    15c6:	a9 01       	movw	r20, r18
    15c8:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <LCD_displayStringRowColumn>
	LCD_displayStringRowColumn(1, 5, "Calculator");
    15cc:	27 e6       	ldi	r18, 0x67	; 103
    15ce:	30 e0       	ldi	r19, 0x00	; 0
    15d0:	81 e0       	ldi	r24, 0x01	; 1
    15d2:	65 e0       	ldi	r22, 0x05	; 5
    15d4:	a9 01       	movw	r20, r18
    15d6:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <LCD_displayStringRowColumn>
    15da:	fe 01       	movw	r30, r28
    15dc:	e3 59       	subi	r30, 0x93	; 147
    15de:	ff 4f       	sbci	r31, 0xFF	; 255
    15e0:	80 e0       	ldi	r24, 0x00	; 0
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	aa ef       	ldi	r26, 0xFA	; 250
    15e6:	b3 e4       	ldi	r27, 0x43	; 67
    15e8:	80 83       	st	Z, r24
    15ea:	91 83       	std	Z+1, r25	; 0x01
    15ec:	a2 83       	std	Z+2, r26	; 0x02
    15ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15f0:	8e 01       	movw	r16, r28
    15f2:	07 59       	subi	r16, 0x97	; 151
    15f4:	1f 4f       	sbci	r17, 0xFF	; 255
    15f6:	fe 01       	movw	r30, r28
    15f8:	e3 59       	subi	r30, 0x93	; 147
    15fa:	ff 4f       	sbci	r31, 0xFF	; 255
    15fc:	60 81       	ld	r22, Z
    15fe:	71 81       	ldd	r23, Z+1	; 0x01
    1600:	82 81       	ldd	r24, Z+2	; 0x02
    1602:	93 81       	ldd	r25, Z+3	; 0x03
    1604:	20 e0       	ldi	r18, 0x00	; 0
    1606:	30 e0       	ldi	r19, 0x00	; 0
    1608:	4a e7       	ldi	r20, 0x7A	; 122
    160a:	55 e4       	ldi	r21, 0x45	; 69
    160c:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    1610:	dc 01       	movw	r26, r24
    1612:	cb 01       	movw	r24, r22
    1614:	f8 01       	movw	r30, r16
    1616:	80 83       	st	Z, r24
    1618:	91 83       	std	Z+1, r25	; 0x01
    161a:	a2 83       	std	Z+2, r26	; 0x02
    161c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    161e:	fe 01       	movw	r30, r28
    1620:	e7 59       	subi	r30, 0x97	; 151
    1622:	ff 4f       	sbci	r31, 0xFF	; 255
    1624:	60 81       	ld	r22, Z
    1626:	71 81       	ldd	r23, Z+1	; 0x01
    1628:	82 81       	ldd	r24, Z+2	; 0x02
    162a:	93 81       	ldd	r25, Z+3	; 0x03
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	40 e8       	ldi	r20, 0x80	; 128
    1632:	5f e3       	ldi	r21, 0x3F	; 63
    1634:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    1638:	88 23       	and	r24, r24
    163a:	44 f4       	brge	.+16     	; 0x164c <main+0x176>
		__ticks = 1;
    163c:	fe 01       	movw	r30, r28
    163e:	e9 59       	subi	r30, 0x99	; 153
    1640:	ff 4f       	sbci	r31, 0xFF	; 255
    1642:	81 e0       	ldi	r24, 0x01	; 1
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	91 83       	std	Z+1, r25	; 0x01
    1648:	80 83       	st	Z, r24
    164a:	64 c0       	rjmp	.+200    	; 0x1714 <main+0x23e>
	else if (__tmp > 65535)
    164c:	fe 01       	movw	r30, r28
    164e:	e7 59       	subi	r30, 0x97	; 151
    1650:	ff 4f       	sbci	r31, 0xFF	; 255
    1652:	60 81       	ld	r22, Z
    1654:	71 81       	ldd	r23, Z+1	; 0x01
    1656:	82 81       	ldd	r24, Z+2	; 0x02
    1658:	93 81       	ldd	r25, Z+3	; 0x03
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	3f ef       	ldi	r19, 0xFF	; 255
    165e:	4f e7       	ldi	r20, 0x7F	; 127
    1660:	57 e4       	ldi	r21, 0x47	; 71
    1662:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    1666:	18 16       	cp	r1, r24
    1668:	0c f0       	brlt	.+2      	; 0x166c <main+0x196>
    166a:	43 c0       	rjmp	.+134    	; 0x16f2 <main+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    166c:	fe 01       	movw	r30, r28
    166e:	e3 59       	subi	r30, 0x93	; 147
    1670:	ff 4f       	sbci	r31, 0xFF	; 255
    1672:	60 81       	ld	r22, Z
    1674:	71 81       	ldd	r23, Z+1	; 0x01
    1676:	82 81       	ldd	r24, Z+2	; 0x02
    1678:	93 81       	ldd	r25, Z+3	; 0x03
    167a:	20 e0       	ldi	r18, 0x00	; 0
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	40 e2       	ldi	r20, 0x20	; 32
    1680:	51 e4       	ldi	r21, 0x41	; 65
    1682:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    1686:	dc 01       	movw	r26, r24
    1688:	cb 01       	movw	r24, r22
    168a:	8e 01       	movw	r16, r28
    168c:	09 59       	subi	r16, 0x99	; 153
    168e:	1f 4f       	sbci	r17, 0xFF	; 255
    1690:	bc 01       	movw	r22, r24
    1692:	cd 01       	movw	r24, r26
    1694:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    1698:	dc 01       	movw	r26, r24
    169a:	cb 01       	movw	r24, r22
    169c:	f8 01       	movw	r30, r16
    169e:	91 83       	std	Z+1, r25	; 0x01
    16a0:	80 83       	st	Z, r24
    16a2:	1f c0       	rjmp	.+62     	; 0x16e2 <main+0x20c>
    16a4:	fe 01       	movw	r30, r28
    16a6:	eb 59       	subi	r30, 0x9B	; 155
    16a8:	ff 4f       	sbci	r31, 0xFF	; 255
    16aa:	80 e9       	ldi	r24, 0x90	; 144
    16ac:	91 e0       	ldi	r25, 0x01	; 1
    16ae:	91 83       	std	Z+1, r25	; 0x01
    16b0:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    16b2:	fe 01       	movw	r30, r28
    16b4:	eb 59       	subi	r30, 0x9B	; 155
    16b6:	ff 4f       	sbci	r31, 0xFF	; 255
    16b8:	80 81       	ld	r24, Z
    16ba:	91 81       	ldd	r25, Z+1	; 0x01
    16bc:	01 97       	sbiw	r24, 0x01	; 1
    16be:	f1 f7       	brne	.-4      	; 0x16bc <main+0x1e6>
    16c0:	fe 01       	movw	r30, r28
    16c2:	eb 59       	subi	r30, 0x9B	; 155
    16c4:	ff 4f       	sbci	r31, 0xFF	; 255
    16c6:	91 83       	std	Z+1, r25	; 0x01
    16c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16ca:	de 01       	movw	r26, r28
    16cc:	a9 59       	subi	r26, 0x99	; 153
    16ce:	bf 4f       	sbci	r27, 0xFF	; 255
    16d0:	fe 01       	movw	r30, r28
    16d2:	e9 59       	subi	r30, 0x99	; 153
    16d4:	ff 4f       	sbci	r31, 0xFF	; 255
    16d6:	80 81       	ld	r24, Z
    16d8:	91 81       	ldd	r25, Z+1	; 0x01
    16da:	01 97       	sbiw	r24, 0x01	; 1
    16dc:	11 96       	adiw	r26, 0x01	; 1
    16de:	9c 93       	st	X, r25
    16e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16e2:	fe 01       	movw	r30, r28
    16e4:	e9 59       	subi	r30, 0x99	; 153
    16e6:	ff 4f       	sbci	r31, 0xFF	; 255
    16e8:	80 81       	ld	r24, Z
    16ea:	91 81       	ldd	r25, Z+1	; 0x01
    16ec:	00 97       	sbiw	r24, 0x00	; 0
    16ee:	d1 f6       	brne	.-76     	; 0x16a4 <main+0x1ce>
    16f0:	27 c0       	rjmp	.+78     	; 0x1740 <main+0x26a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16f2:	8e 01       	movw	r16, r28
    16f4:	09 59       	subi	r16, 0x99	; 153
    16f6:	1f 4f       	sbci	r17, 0xFF	; 255
    16f8:	fe 01       	movw	r30, r28
    16fa:	e7 59       	subi	r30, 0x97	; 151
    16fc:	ff 4f       	sbci	r31, 0xFF	; 255
    16fe:	60 81       	ld	r22, Z
    1700:	71 81       	ldd	r23, Z+1	; 0x01
    1702:	82 81       	ldd	r24, Z+2	; 0x02
    1704:	93 81       	ldd	r25, Z+3	; 0x03
    1706:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	f8 01       	movw	r30, r16
    1710:	91 83       	std	Z+1, r25	; 0x01
    1712:	80 83       	st	Z, r24
    1714:	de 01       	movw	r26, r28
    1716:	ad 59       	subi	r26, 0x9D	; 157
    1718:	bf 4f       	sbci	r27, 0xFF	; 255
    171a:	fe 01       	movw	r30, r28
    171c:	e9 59       	subi	r30, 0x99	; 153
    171e:	ff 4f       	sbci	r31, 0xFF	; 255
    1720:	80 81       	ld	r24, Z
    1722:	91 81       	ldd	r25, Z+1	; 0x01
    1724:	8d 93       	st	X+, r24
    1726:	9c 93       	st	X, r25
    1728:	fe 01       	movw	r30, r28
    172a:	ed 59       	subi	r30, 0x9D	; 157
    172c:	ff 4f       	sbci	r31, 0xFF	; 255
    172e:	80 81       	ld	r24, Z
    1730:	91 81       	ldd	r25, Z+1	; 0x01
    1732:	01 97       	sbiw	r24, 0x01	; 1
    1734:	f1 f7       	brne	.-4      	; 0x1732 <main+0x25c>
    1736:	fe 01       	movw	r30, r28
    1738:	ed 59       	subi	r30, 0x9D	; 157
    173a:	ff 4f       	sbci	r31, 0xFF	; 255
    173c:	91 83       	std	Z+1, r25	; 0x01
    173e:	80 83       	st	Z, r24
	_delay_ms(500);
	LCD_clearScreen();
    1740:	0e 94 0c 27 	call	0x4e18	; 0x4e18 <LCD_clearScreen>
	while (1) {
		temp = KEYPAD_getPressedKey();
    1744:	0e 94 fb 1a 	call	0x35f6	; 0x35f6 <KEYPAD_getPressedKey>
    1748:	fe 01       	movw	r30, r28
    174a:	ef 58       	subi	r30, 0x8F	; 143
    174c:	ff 4f       	sbci	r31, 0xFF	; 255
    174e:	80 83       	st	Z, r24
		if (temp == 'C') {
    1750:	fe 01       	movw	r30, r28
    1752:	ef 58       	subi	r30, 0x8F	; 143
    1754:	ff 4f       	sbci	r31, 0xFF	; 255
    1756:	80 81       	ld	r24, Z
    1758:	83 34       	cpi	r24, 0x43	; 67
    175a:	e1 f4       	brne	.+56     	; 0x1794 <main+0x2be>
			LCD_clearScreen();
    175c:	0e 94 0c 27 	call	0x4e18	; 0x4e18 <LCD_clearScreen>
			counter = 0;
    1760:	fe 01       	movw	r30, r28
    1762:	ed 58       	subi	r30, 0x8D	; 141
    1764:	ff 4f       	sbci	r31, 0xFF	; 255
    1766:	10 82       	st	Z, r1
			num[0] = 0;
    1768:	fe 01       	movw	r30, r28
    176a:	ec 58       	subi	r30, 0x8C	; 140
    176c:	ff 4f       	sbci	r31, 0xFF	; 255
    176e:	10 82       	st	Z, r1
    1770:	11 82       	std	Z+1, r1	; 0x01
    1772:	12 82       	std	Z+2, r1	; 0x02
    1774:	13 82       	std	Z+3, r1	; 0x03
    1776:	14 82       	std	Z+4, r1	; 0x04
    1778:	15 82       	std	Z+5, r1	; 0x05
    177a:	16 82       	std	Z+6, r1	; 0x06
    177c:	17 82       	std	Z+7, r1	; 0x07
			num[1] = 0;
    177e:	fe 01       	movw	r30, r28
    1780:	ec 58       	subi	r30, 0x8C	; 140
    1782:	ff 4f       	sbci	r31, 0xFF	; 255
    1784:	10 86       	std	Z+8, r1	; 0x08
    1786:	11 86       	std	Z+9, r1	; 0x09
    1788:	12 86       	std	Z+10, r1	; 0x0a
    178a:	13 86       	std	Z+11, r1	; 0x0b
    178c:	14 86       	std	Z+12, r1	; 0x0c
    178e:	15 86       	std	Z+13, r1	; 0x0d
    1790:	16 86       	std	Z+14, r1	; 0x0e
    1792:	17 86       	std	Z+15, r1	; 0x0f
		}
		if ((temp <= 9) && (temp >= 0)) {
    1794:	fe 01       	movw	r30, r28
    1796:	ef 58       	subi	r30, 0x8F	; 143
    1798:	ff 4f       	sbci	r31, 0xFF	; 255
    179a:	80 81       	ld	r24, Z
    179c:	8a 30       	cpi	r24, 0x0A	; 10
    179e:	08 f0       	brcs	.+2      	; 0x17a2 <main+0x2cc>
    17a0:	a3 c7       	rjmp	.+3910   	; 0x26e8 <main+0x1212>
			LCD_intgerToString(temp);
    17a2:	fe 01       	movw	r30, r28
    17a4:	ef 58       	subi	r30, 0x8F	; 143
    17a6:	ff 4f       	sbci	r31, 0xFF	; 255
    17a8:	80 81       	ld	r24, Z
    17aa:	88 2f       	mov	r24, r24
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	0e 94 bb 26 	call	0x4d76	; 0x4d76 <LCD_intgerToString>
    17b2:	fe 01       	movw	r30, r28
    17b4:	e1 5a       	subi	r30, 0xA1	; 161
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	80 e0       	ldi	r24, 0x00	; 0
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	a6 e9       	ldi	r26, 0x96	; 150
    17be:	b3 e4       	ldi	r27, 0x43	; 67
    17c0:	80 83       	st	Z, r24
    17c2:	91 83       	std	Z+1, r25	; 0x01
    17c4:	a2 83       	std	Z+2, r26	; 0x02
    17c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17c8:	8e 01       	movw	r16, r28
    17ca:	05 5a       	subi	r16, 0xA5	; 165
    17cc:	1f 4f       	sbci	r17, 0xFF	; 255
    17ce:	fe 01       	movw	r30, r28
    17d0:	e1 5a       	subi	r30, 0xA1	; 161
    17d2:	ff 4f       	sbci	r31, 0xFF	; 255
    17d4:	60 81       	ld	r22, Z
    17d6:	71 81       	ldd	r23, Z+1	; 0x01
    17d8:	82 81       	ldd	r24, Z+2	; 0x02
    17da:	93 81       	ldd	r25, Z+3	; 0x03
    17dc:	20 e0       	ldi	r18, 0x00	; 0
    17de:	30 e0       	ldi	r19, 0x00	; 0
    17e0:	4a e7       	ldi	r20, 0x7A	; 122
    17e2:	55 e4       	ldi	r21, 0x45	; 69
    17e4:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    17e8:	dc 01       	movw	r26, r24
    17ea:	cb 01       	movw	r24, r22
    17ec:	f8 01       	movw	r30, r16
    17ee:	80 83       	st	Z, r24
    17f0:	91 83       	std	Z+1, r25	; 0x01
    17f2:	a2 83       	std	Z+2, r26	; 0x02
    17f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17f6:	fe 01       	movw	r30, r28
    17f8:	e5 5a       	subi	r30, 0xA5	; 165
    17fa:	ff 4f       	sbci	r31, 0xFF	; 255
    17fc:	60 81       	ld	r22, Z
    17fe:	71 81       	ldd	r23, Z+1	; 0x01
    1800:	82 81       	ldd	r24, Z+2	; 0x02
    1802:	93 81       	ldd	r25, Z+3	; 0x03
    1804:	20 e0       	ldi	r18, 0x00	; 0
    1806:	30 e0       	ldi	r19, 0x00	; 0
    1808:	40 e8       	ldi	r20, 0x80	; 128
    180a:	5f e3       	ldi	r21, 0x3F	; 63
    180c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    1810:	88 23       	and	r24, r24
    1812:	44 f4       	brge	.+16     	; 0x1824 <main+0x34e>
		__ticks = 1;
    1814:	fe 01       	movw	r30, r28
    1816:	e7 5a       	subi	r30, 0xA7	; 167
    1818:	ff 4f       	sbci	r31, 0xFF	; 255
    181a:	81 e0       	ldi	r24, 0x01	; 1
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	91 83       	std	Z+1, r25	; 0x01
    1820:	80 83       	st	Z, r24
    1822:	64 c0       	rjmp	.+200    	; 0x18ec <main+0x416>
	else if (__tmp > 65535)
    1824:	fe 01       	movw	r30, r28
    1826:	e5 5a       	subi	r30, 0xA5	; 165
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	60 81       	ld	r22, Z
    182c:	71 81       	ldd	r23, Z+1	; 0x01
    182e:	82 81       	ldd	r24, Z+2	; 0x02
    1830:	93 81       	ldd	r25, Z+3	; 0x03
    1832:	20 e0       	ldi	r18, 0x00	; 0
    1834:	3f ef       	ldi	r19, 0xFF	; 255
    1836:	4f e7       	ldi	r20, 0x7F	; 127
    1838:	57 e4       	ldi	r21, 0x47	; 71
    183a:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    183e:	18 16       	cp	r1, r24
    1840:	0c f0       	brlt	.+2      	; 0x1844 <main+0x36e>
    1842:	43 c0       	rjmp	.+134    	; 0x18ca <main+0x3f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1844:	fe 01       	movw	r30, r28
    1846:	e1 5a       	subi	r30, 0xA1	; 161
    1848:	ff 4f       	sbci	r31, 0xFF	; 255
    184a:	60 81       	ld	r22, Z
    184c:	71 81       	ldd	r23, Z+1	; 0x01
    184e:	82 81       	ldd	r24, Z+2	; 0x02
    1850:	93 81       	ldd	r25, Z+3	; 0x03
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	40 e2       	ldi	r20, 0x20	; 32
    1858:	51 e4       	ldi	r21, 0x41	; 65
    185a:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    185e:	dc 01       	movw	r26, r24
    1860:	cb 01       	movw	r24, r22
    1862:	8e 01       	movw	r16, r28
    1864:	07 5a       	subi	r16, 0xA7	; 167
    1866:	1f 4f       	sbci	r17, 0xFF	; 255
    1868:	bc 01       	movw	r22, r24
    186a:	cd 01       	movw	r24, r26
    186c:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    1870:	dc 01       	movw	r26, r24
    1872:	cb 01       	movw	r24, r22
    1874:	f8 01       	movw	r30, r16
    1876:	91 83       	std	Z+1, r25	; 0x01
    1878:	80 83       	st	Z, r24
    187a:	1f c0       	rjmp	.+62     	; 0x18ba <main+0x3e4>
    187c:	fe 01       	movw	r30, r28
    187e:	e9 5a       	subi	r30, 0xA9	; 169
    1880:	ff 4f       	sbci	r31, 0xFF	; 255
    1882:	80 e9       	ldi	r24, 0x90	; 144
    1884:	91 e0       	ldi	r25, 0x01	; 1
    1886:	91 83       	std	Z+1, r25	; 0x01
    1888:	80 83       	st	Z, r24
    188a:	fe 01       	movw	r30, r28
    188c:	e9 5a       	subi	r30, 0xA9	; 169
    188e:	ff 4f       	sbci	r31, 0xFF	; 255
    1890:	80 81       	ld	r24, Z
    1892:	91 81       	ldd	r25, Z+1	; 0x01
    1894:	01 97       	sbiw	r24, 0x01	; 1
    1896:	f1 f7       	brne	.-4      	; 0x1894 <main+0x3be>
    1898:	fe 01       	movw	r30, r28
    189a:	e9 5a       	subi	r30, 0xA9	; 169
    189c:	ff 4f       	sbci	r31, 0xFF	; 255
    189e:	91 83       	std	Z+1, r25	; 0x01
    18a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18a2:	de 01       	movw	r26, r28
    18a4:	a7 5a       	subi	r26, 0xA7	; 167
    18a6:	bf 4f       	sbci	r27, 0xFF	; 255
    18a8:	fe 01       	movw	r30, r28
    18aa:	e7 5a       	subi	r30, 0xA7	; 167
    18ac:	ff 4f       	sbci	r31, 0xFF	; 255
    18ae:	80 81       	ld	r24, Z
    18b0:	91 81       	ldd	r25, Z+1	; 0x01
    18b2:	01 97       	sbiw	r24, 0x01	; 1
    18b4:	11 96       	adiw	r26, 0x01	; 1
    18b6:	9c 93       	st	X, r25
    18b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18ba:	fe 01       	movw	r30, r28
    18bc:	e7 5a       	subi	r30, 0xA7	; 167
    18be:	ff 4f       	sbci	r31, 0xFF	; 255
    18c0:	80 81       	ld	r24, Z
    18c2:	91 81       	ldd	r25, Z+1	; 0x01
    18c4:	00 97       	sbiw	r24, 0x00	; 0
    18c6:	d1 f6       	brne	.-76     	; 0x187c <main+0x3a6>
    18c8:	27 c0       	rjmp	.+78     	; 0x1918 <main+0x442>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ca:	8e 01       	movw	r16, r28
    18cc:	07 5a       	subi	r16, 0xA7	; 167
    18ce:	1f 4f       	sbci	r17, 0xFF	; 255
    18d0:	fe 01       	movw	r30, r28
    18d2:	e5 5a       	subi	r30, 0xA5	; 165
    18d4:	ff 4f       	sbci	r31, 0xFF	; 255
    18d6:	60 81       	ld	r22, Z
    18d8:	71 81       	ldd	r23, Z+1	; 0x01
    18da:	82 81       	ldd	r24, Z+2	; 0x02
    18dc:	93 81       	ldd	r25, Z+3	; 0x03
    18de:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    18e2:	dc 01       	movw	r26, r24
    18e4:	cb 01       	movw	r24, r22
    18e6:	f8 01       	movw	r30, r16
    18e8:	91 83       	std	Z+1, r25	; 0x01
    18ea:	80 83       	st	Z, r24
    18ec:	de 01       	movw	r26, r28
    18ee:	ab 5a       	subi	r26, 0xAB	; 171
    18f0:	bf 4f       	sbci	r27, 0xFF	; 255
    18f2:	fe 01       	movw	r30, r28
    18f4:	e7 5a       	subi	r30, 0xA7	; 167
    18f6:	ff 4f       	sbci	r31, 0xFF	; 255
    18f8:	80 81       	ld	r24, Z
    18fa:	91 81       	ldd	r25, Z+1	; 0x01
    18fc:	8d 93       	st	X+, r24
    18fe:	9c 93       	st	X, r25
    1900:	fe 01       	movw	r30, r28
    1902:	eb 5a       	subi	r30, 0xAB	; 171
    1904:	ff 4f       	sbci	r31, 0xFF	; 255
    1906:	80 81       	ld	r24, Z
    1908:	91 81       	ldd	r25, Z+1	; 0x01
    190a:	01 97       	sbiw	r24, 0x01	; 1
    190c:	f1 f7       	brne	.-4      	; 0x190a <main+0x434>
    190e:	fe 01       	movw	r30, r28
    1910:	eb 5a       	subi	r30, 0xAB	; 171
    1912:	ff 4f       	sbci	r31, 0xFF	; 255
    1914:	91 83       	std	Z+1, r25	; 0x01
    1916:	80 83       	st	Z, r24
			_delay_ms(300);
			num[counter] = (tenReverance * num[counter]) + temp;
    1918:	fe 01       	movw	r30, r28
    191a:	ed 58       	subi	r30, 0x8D	; 141
    191c:	ff 4f       	sbci	r31, 0xFF	; 255
    191e:	80 81       	ld	r24, Z
    1920:	08 2f       	mov	r16, r24
    1922:	10 e0       	ldi	r17, 0x00	; 0
    1924:	ca 56       	subi	r28, 0x6A	; 106
    1926:	df 4f       	sbci	r29, 0xFF	; 255
    1928:	19 83       	std	Y+1, r17	; 0x01
    192a:	08 83       	st	Y, r16
    192c:	c6 59       	subi	r28, 0x96	; 150
    192e:	d0 40       	sbci	r29, 0x00	; 0
    1930:	fe 01       	movw	r30, r28
    1932:	ed 58       	subi	r30, 0x8D	; 141
    1934:	ff 4f       	sbci	r31, 0xFF	; 255
    1936:	80 81       	ld	r24, Z
    1938:	88 2f       	mov	r24, r24
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	9e 01       	movw	r18, r28
    193e:	2c 58       	subi	r18, 0x8C	; 140
    1940:	3f 4f       	sbci	r19, 0xFF	; 255
    1942:	88 0f       	add	r24, r24
    1944:	99 1f       	adc	r25, r25
    1946:	88 0f       	add	r24, r24
    1948:	99 1f       	adc	r25, r25
    194a:	88 0f       	add	r24, r24
    194c:	99 1f       	adc	r25, r25
    194e:	f9 01       	movw	r30, r18
    1950:	e8 0f       	add	r30, r24
    1952:	f9 1f       	adc	r31, r25
    1954:	20 81       	ld	r18, Z
    1956:	31 81       	ldd	r19, Z+1	; 0x01
    1958:	42 81       	ldd	r20, Z+2	; 0x02
    195a:	53 81       	ldd	r21, Z+3	; 0x03
    195c:	64 81       	ldd	r22, Z+4	; 0x04
    195e:	75 81       	ldd	r23, Z+5	; 0x05
    1960:	86 81       	ldd	r24, Z+6	; 0x06
    1962:	97 81       	ldd	r25, Z+7	; 0x07
    1964:	a2 2e       	mov	r10, r18
    1966:	b3 2e       	mov	r11, r19
    1968:	c4 2e       	mov	r12, r20
    196a:	d5 2e       	mov	r13, r21
    196c:	e6 2e       	mov	r14, r22
    196e:	f7 2e       	mov	r15, r23
    1970:	08 2f       	mov	r16, r24
    1972:	19 2f       	mov	r17, r25
    1974:	2a 2d       	mov	r18, r10
    1976:	3b 2d       	mov	r19, r11
    1978:	4c 2d       	mov	r20, r12
    197a:	5d 2d       	mov	r21, r13
    197c:	6e 2d       	mov	r22, r14
    197e:	7f 2d       	mov	r23, r15
    1980:	80 2f       	mov	r24, r16
    1982:	91 2f       	mov	r25, r17
    1984:	01 e0       	ldi	r16, 0x01	; 1
    1986:	0e 94 b9 01 	call	0x372	; 0x372 <__ashldi3>
    198a:	c3 56       	subi	r28, 0x63	; 99
    198c:	df 4f       	sbci	r29, 0xFF	; 255
    198e:	28 83       	st	Y, r18
    1990:	cd 59       	subi	r28, 0x9D	; 157
    1992:	d0 40       	sbci	r29, 0x00	; 0
    1994:	c2 56       	subi	r28, 0x62	; 98
    1996:	df 4f       	sbci	r29, 0xFF	; 255
    1998:	38 83       	st	Y, r19
    199a:	ce 59       	subi	r28, 0x9E	; 158
    199c:	d0 40       	sbci	r29, 0x00	; 0
    199e:	c1 56       	subi	r28, 0x61	; 97
    19a0:	df 4f       	sbci	r29, 0xFF	; 255
    19a2:	48 83       	st	Y, r20
    19a4:	cf 59       	subi	r28, 0x9F	; 159
    19a6:	d0 40       	sbci	r29, 0x00	; 0
    19a8:	c0 56       	subi	r28, 0x60	; 96
    19aa:	df 4f       	sbci	r29, 0xFF	; 255
    19ac:	58 83       	st	Y, r21
    19ae:	c0 5a       	subi	r28, 0xA0	; 160
    19b0:	d0 40       	sbci	r29, 0x00	; 0
    19b2:	cf 55       	subi	r28, 0x5F	; 95
    19b4:	df 4f       	sbci	r29, 0xFF	; 255
    19b6:	68 83       	st	Y, r22
    19b8:	c1 5a       	subi	r28, 0xA1	; 161
    19ba:	d0 40       	sbci	r29, 0x00	; 0
    19bc:	ce 55       	subi	r28, 0x5E	; 94
    19be:	df 4f       	sbci	r29, 0xFF	; 255
    19c0:	78 83       	st	Y, r23
    19c2:	c2 5a       	subi	r28, 0xA2	; 162
    19c4:	d0 40       	sbci	r29, 0x00	; 0
    19c6:	cd 55       	subi	r28, 0x5D	; 93
    19c8:	df 4f       	sbci	r29, 0xFF	; 255
    19ca:	88 83       	st	Y, r24
    19cc:	c3 5a       	subi	r28, 0xA3	; 163
    19ce:	d0 40       	sbci	r29, 0x00	; 0
    19d0:	cc 55       	subi	r28, 0x5C	; 92
    19d2:	df 4f       	sbci	r29, 0xFF	; 255
    19d4:	98 83       	st	Y, r25
    19d6:	c4 5a       	subi	r28, 0xA4	; 164
    19d8:	d0 40       	sbci	r29, 0x00	; 0
    19da:	c3 56       	subi	r28, 0x63	; 99
    19dc:	df 4f       	sbci	r29, 0xFF	; 255
    19de:	28 81       	ld	r18, Y
    19e0:	cd 59       	subi	r28, 0x9D	; 157
    19e2:	d0 40       	sbci	r29, 0x00	; 0
    19e4:	c2 56       	subi	r28, 0x62	; 98
    19e6:	df 4f       	sbci	r29, 0xFF	; 255
    19e8:	38 81       	ld	r19, Y
    19ea:	ce 59       	subi	r28, 0x9E	; 158
    19ec:	d0 40       	sbci	r29, 0x00	; 0
    19ee:	c1 56       	subi	r28, 0x61	; 97
    19f0:	df 4f       	sbci	r29, 0xFF	; 255
    19f2:	48 81       	ld	r20, Y
    19f4:	cf 59       	subi	r28, 0x9F	; 159
    19f6:	d0 40       	sbci	r29, 0x00	; 0
    19f8:	c0 56       	subi	r28, 0x60	; 96
    19fa:	df 4f       	sbci	r29, 0xFF	; 255
    19fc:	58 81       	ld	r21, Y
    19fe:	c0 5a       	subi	r28, 0xA0	; 160
    1a00:	d0 40       	sbci	r29, 0x00	; 0
    1a02:	cf 55       	subi	r28, 0x5F	; 95
    1a04:	df 4f       	sbci	r29, 0xFF	; 255
    1a06:	68 81       	ld	r22, Y
    1a08:	c1 5a       	subi	r28, 0xA1	; 161
    1a0a:	d0 40       	sbci	r29, 0x00	; 0
    1a0c:	ce 55       	subi	r28, 0x5E	; 94
    1a0e:	df 4f       	sbci	r29, 0xFF	; 255
    1a10:	78 81       	ld	r23, Y
    1a12:	c2 5a       	subi	r28, 0xA2	; 162
    1a14:	d0 40       	sbci	r29, 0x00	; 0
    1a16:	cd 55       	subi	r28, 0x5D	; 93
    1a18:	df 4f       	sbci	r29, 0xFF	; 255
    1a1a:	88 81       	ld	r24, Y
    1a1c:	c3 5a       	subi	r28, 0xA3	; 163
    1a1e:	d0 40       	sbci	r29, 0x00	; 0
    1a20:	cc 55       	subi	r28, 0x5C	; 92
    1a22:	df 4f       	sbci	r29, 0xFF	; 255
    1a24:	98 81       	ld	r25, Y
    1a26:	c4 5a       	subi	r28, 0xA4	; 164
    1a28:	d0 40       	sbci	r29, 0x00	; 0
    1a2a:	02 e0       	ldi	r16, 0x02	; 2
    1a2c:	0e 94 b9 01 	call	0x372	; 0x372 <__ashldi3>
    1a30:	cb 55       	subi	r28, 0x5B	; 91
    1a32:	df 4f       	sbci	r29, 0xFF	; 255
    1a34:	28 83       	st	Y, r18
    1a36:	c5 5a       	subi	r28, 0xA5	; 165
    1a38:	d0 40       	sbci	r29, 0x00	; 0
    1a3a:	ca 55       	subi	r28, 0x5A	; 90
    1a3c:	df 4f       	sbci	r29, 0xFF	; 255
    1a3e:	38 83       	st	Y, r19
    1a40:	c6 5a       	subi	r28, 0xA6	; 166
    1a42:	d0 40       	sbci	r29, 0x00	; 0
    1a44:	c9 55       	subi	r28, 0x59	; 89
    1a46:	df 4f       	sbci	r29, 0xFF	; 255
    1a48:	48 83       	st	Y, r20
    1a4a:	c7 5a       	subi	r28, 0xA7	; 167
    1a4c:	d0 40       	sbci	r29, 0x00	; 0
    1a4e:	c8 55       	subi	r28, 0x58	; 88
    1a50:	df 4f       	sbci	r29, 0xFF	; 255
    1a52:	58 83       	st	Y, r21
    1a54:	c8 5a       	subi	r28, 0xA8	; 168
    1a56:	d0 40       	sbci	r29, 0x00	; 0
    1a58:	c7 55       	subi	r28, 0x57	; 87
    1a5a:	df 4f       	sbci	r29, 0xFF	; 255
    1a5c:	68 83       	st	Y, r22
    1a5e:	c9 5a       	subi	r28, 0xA9	; 169
    1a60:	d0 40       	sbci	r29, 0x00	; 0
    1a62:	c6 55       	subi	r28, 0x56	; 86
    1a64:	df 4f       	sbci	r29, 0xFF	; 255
    1a66:	78 83       	st	Y, r23
    1a68:	ca 5a       	subi	r28, 0xAA	; 170
    1a6a:	d0 40       	sbci	r29, 0x00	; 0
    1a6c:	c5 55       	subi	r28, 0x55	; 85
    1a6e:	df 4f       	sbci	r29, 0xFF	; 255
    1a70:	88 83       	st	Y, r24
    1a72:	cb 5a       	subi	r28, 0xAB	; 171
    1a74:	d0 40       	sbci	r29, 0x00	; 0
    1a76:	c4 55       	subi	r28, 0x54	; 84
    1a78:	df 4f       	sbci	r29, 0xFF	; 255
    1a7a:	98 83       	st	Y, r25
    1a7c:	cc 5a       	subi	r28, 0xAC	; 172
    1a7e:	d0 40       	sbci	r29, 0x00	; 0
    1a80:	c3 56       	subi	r28, 0x63	; 99
    1a82:	df 4f       	sbci	r29, 0xFF	; 255
    1a84:	18 81       	ld	r17, Y
    1a86:	cd 59       	subi	r28, 0x9D	; 157
    1a88:	d0 40       	sbci	r29, 0x00	; 0
    1a8a:	cb 55       	subi	r28, 0x5B	; 91
    1a8c:	df 4f       	sbci	r29, 0xFF	; 255
    1a8e:	28 81       	ld	r18, Y
    1a90:	c5 5a       	subi	r28, 0xA5	; 165
    1a92:	d0 40       	sbci	r29, 0x00	; 0
    1a94:	12 0f       	add	r17, r18
    1a96:	c3 55       	subi	r28, 0x53	; 83
    1a98:	df 4f       	sbci	r29, 0xFF	; 255
    1a9a:	18 83       	st	Y, r17
    1a9c:	cd 5a       	subi	r28, 0xAD	; 173
    1a9e:	d0 40       	sbci	r29, 0x00	; 0
    1aa0:	31 e0       	ldi	r19, 0x01	; 1
    1aa2:	cb 54       	subi	r28, 0x4B	; 75
    1aa4:	df 4f       	sbci	r29, 0xFF	; 255
    1aa6:	38 83       	st	Y, r19
    1aa8:	c5 5b       	subi	r28, 0xB5	; 181
    1aaa:	d0 40       	sbci	r29, 0x00	; 0
    1aac:	c3 55       	subi	r28, 0x53	; 83
    1aae:	df 4f       	sbci	r29, 0xFF	; 255
    1ab0:	48 81       	ld	r20, Y
    1ab2:	cd 5a       	subi	r28, 0xAD	; 173
    1ab4:	d0 40       	sbci	r29, 0x00	; 0
    1ab6:	c3 56       	subi	r28, 0x63	; 99
    1ab8:	df 4f       	sbci	r29, 0xFF	; 255
    1aba:	58 81       	ld	r21, Y
    1abc:	cd 59       	subi	r28, 0x9D	; 157
    1abe:	d0 40       	sbci	r29, 0x00	; 0
    1ac0:	45 17       	cp	r20, r21
    1ac2:	28 f0       	brcs	.+10     	; 0x1ace <main+0x5f8>
    1ac4:	cb 54       	subi	r28, 0x4B	; 75
    1ac6:	df 4f       	sbci	r29, 0xFF	; 255
    1ac8:	18 82       	st	Y, r1
    1aca:	c5 5b       	subi	r28, 0xB5	; 181
    1acc:	d0 40       	sbci	r29, 0x00	; 0
    1ace:	c2 56       	subi	r28, 0x62	; 98
    1ad0:	df 4f       	sbci	r29, 0xFF	; 255
    1ad2:	68 81       	ld	r22, Y
    1ad4:	ce 59       	subi	r28, 0x9E	; 158
    1ad6:	d0 40       	sbci	r29, 0x00	; 0
    1ad8:	ca 55       	subi	r28, 0x5A	; 90
    1ada:	df 4f       	sbci	r29, 0xFF	; 255
    1adc:	78 81       	ld	r23, Y
    1ade:	c6 5a       	subi	r28, 0xA6	; 166
    1ae0:	d0 40       	sbci	r29, 0x00	; 0
    1ae2:	67 0f       	add	r22, r23
    1ae4:	c2 55       	subi	r28, 0x52	; 82
    1ae6:	df 4f       	sbci	r29, 0xFF	; 255
    1ae8:	68 83       	st	Y, r22
    1aea:	ce 5a       	subi	r28, 0xAE	; 174
    1aec:	d0 40       	sbci	r29, 0x00	; 0
    1aee:	81 e0       	ldi	r24, 0x01	; 1
    1af0:	ca 54       	subi	r28, 0x4A	; 74
    1af2:	df 4f       	sbci	r29, 0xFF	; 255
    1af4:	88 83       	st	Y, r24
    1af6:	c6 5b       	subi	r28, 0xB6	; 182
    1af8:	d0 40       	sbci	r29, 0x00	; 0
    1afa:	c2 55       	subi	r28, 0x52	; 82
    1afc:	df 4f       	sbci	r29, 0xFF	; 255
    1afe:	98 81       	ld	r25, Y
    1b00:	ce 5a       	subi	r28, 0xAE	; 174
    1b02:	d0 40       	sbci	r29, 0x00	; 0
    1b04:	c2 56       	subi	r28, 0x62	; 98
    1b06:	df 4f       	sbci	r29, 0xFF	; 255
    1b08:	e8 81       	ld	r30, Y
    1b0a:	ce 59       	subi	r28, 0x9E	; 158
    1b0c:	d0 40       	sbci	r29, 0x00	; 0
    1b0e:	9e 17       	cp	r25, r30
    1b10:	28 f0       	brcs	.+10     	; 0x1b1c <main+0x646>
    1b12:	ca 54       	subi	r28, 0x4A	; 74
    1b14:	df 4f       	sbci	r29, 0xFF	; 255
    1b16:	18 82       	st	Y, r1
    1b18:	c6 5b       	subi	r28, 0xB6	; 182
    1b1a:	d0 40       	sbci	r29, 0x00	; 0
    1b1c:	cb 54       	subi	r28, 0x4B	; 75
    1b1e:	df 4f       	sbci	r29, 0xFF	; 255
    1b20:	f8 81       	ld	r31, Y
    1b22:	c5 5b       	subi	r28, 0xB5	; 181
    1b24:	d0 40       	sbci	r29, 0x00	; 0
    1b26:	c2 55       	subi	r28, 0x52	; 82
    1b28:	df 4f       	sbci	r29, 0xFF	; 255
    1b2a:	08 81       	ld	r16, Y
    1b2c:	ce 5a       	subi	r28, 0xAE	; 174
    1b2e:	d0 40       	sbci	r29, 0x00	; 0
    1b30:	f0 0f       	add	r31, r16
    1b32:	c9 54       	subi	r28, 0x49	; 73
    1b34:	df 4f       	sbci	r29, 0xFF	; 255
    1b36:	f8 83       	st	Y, r31
    1b38:	c7 5b       	subi	r28, 0xB7	; 183
    1b3a:	d0 40       	sbci	r29, 0x00	; 0
    1b3c:	11 e0       	ldi	r17, 0x01	; 1
    1b3e:	c8 54       	subi	r28, 0x48	; 72
    1b40:	df 4f       	sbci	r29, 0xFF	; 255
    1b42:	18 83       	st	Y, r17
    1b44:	c8 5b       	subi	r28, 0xB8	; 184
    1b46:	d0 40       	sbci	r29, 0x00	; 0
    1b48:	c9 54       	subi	r28, 0x49	; 73
    1b4a:	df 4f       	sbci	r29, 0xFF	; 255
    1b4c:	28 81       	ld	r18, Y
    1b4e:	c7 5b       	subi	r28, 0xB7	; 183
    1b50:	d0 40       	sbci	r29, 0x00	; 0
    1b52:	c2 55       	subi	r28, 0x52	; 82
    1b54:	df 4f       	sbci	r29, 0xFF	; 255
    1b56:	38 81       	ld	r19, Y
    1b58:	ce 5a       	subi	r28, 0xAE	; 174
    1b5a:	d0 40       	sbci	r29, 0x00	; 0
    1b5c:	23 17       	cp	r18, r19
    1b5e:	28 f0       	brcs	.+10     	; 0x1b6a <main+0x694>
    1b60:	c8 54       	subi	r28, 0x48	; 72
    1b62:	df 4f       	sbci	r29, 0xFF	; 255
    1b64:	18 82       	st	Y, r1
    1b66:	c8 5b       	subi	r28, 0xB8	; 184
    1b68:	d0 40       	sbci	r29, 0x00	; 0
    1b6a:	ca 54       	subi	r28, 0x4A	; 74
    1b6c:	df 4f       	sbci	r29, 0xFF	; 255
    1b6e:	48 81       	ld	r20, Y
    1b70:	c6 5b       	subi	r28, 0xB6	; 182
    1b72:	d0 40       	sbci	r29, 0x00	; 0
    1b74:	c8 54       	subi	r28, 0x48	; 72
    1b76:	df 4f       	sbci	r29, 0xFF	; 255
    1b78:	58 81       	ld	r21, Y
    1b7a:	c8 5b       	subi	r28, 0xB8	; 184
    1b7c:	d0 40       	sbci	r29, 0x00	; 0
    1b7e:	45 2b       	or	r20, r21
    1b80:	ca 54       	subi	r28, 0x4A	; 74
    1b82:	df 4f       	sbci	r29, 0xFF	; 255
    1b84:	48 83       	st	Y, r20
    1b86:	c6 5b       	subi	r28, 0xB6	; 182
    1b88:	d0 40       	sbci	r29, 0x00	; 0
    1b8a:	c9 54       	subi	r28, 0x49	; 73
    1b8c:	df 4f       	sbci	r29, 0xFF	; 255
    1b8e:	68 81       	ld	r22, Y
    1b90:	c7 5b       	subi	r28, 0xB7	; 183
    1b92:	d0 40       	sbci	r29, 0x00	; 0
    1b94:	c2 55       	subi	r28, 0x52	; 82
    1b96:	df 4f       	sbci	r29, 0xFF	; 255
    1b98:	68 83       	st	Y, r22
    1b9a:	ce 5a       	subi	r28, 0xAE	; 174
    1b9c:	d0 40       	sbci	r29, 0x00	; 0
    1b9e:	c1 56       	subi	r28, 0x61	; 97
    1ba0:	df 4f       	sbci	r29, 0xFF	; 255
    1ba2:	78 81       	ld	r23, Y
    1ba4:	cf 59       	subi	r28, 0x9F	; 159
    1ba6:	d0 40       	sbci	r29, 0x00	; 0
    1ba8:	c9 55       	subi	r28, 0x59	; 89
    1baa:	df 4f       	sbci	r29, 0xFF	; 255
    1bac:	88 81       	ld	r24, Y
    1bae:	c7 5a       	subi	r28, 0xA7	; 167
    1bb0:	d0 40       	sbci	r29, 0x00	; 0
    1bb2:	78 0f       	add	r23, r24
    1bb4:	c1 55       	subi	r28, 0x51	; 81
    1bb6:	df 4f       	sbci	r29, 0xFF	; 255
    1bb8:	78 83       	st	Y, r23
    1bba:	cf 5a       	subi	r28, 0xAF	; 175
    1bbc:	d0 40       	sbci	r29, 0x00	; 0
    1bbe:	91 e0       	ldi	r25, 0x01	; 1
    1bc0:	c7 54       	subi	r28, 0x47	; 71
    1bc2:	df 4f       	sbci	r29, 0xFF	; 255
    1bc4:	98 83       	st	Y, r25
    1bc6:	c9 5b       	subi	r28, 0xB9	; 185
    1bc8:	d0 40       	sbci	r29, 0x00	; 0
    1bca:	c1 55       	subi	r28, 0x51	; 81
    1bcc:	df 4f       	sbci	r29, 0xFF	; 255
    1bce:	e8 81       	ld	r30, Y
    1bd0:	cf 5a       	subi	r28, 0xAF	; 175
    1bd2:	d0 40       	sbci	r29, 0x00	; 0
    1bd4:	c1 56       	subi	r28, 0x61	; 97
    1bd6:	df 4f       	sbci	r29, 0xFF	; 255
    1bd8:	f8 81       	ld	r31, Y
    1bda:	cf 59       	subi	r28, 0x9F	; 159
    1bdc:	d0 40       	sbci	r29, 0x00	; 0
    1bde:	ef 17       	cp	r30, r31
    1be0:	28 f0       	brcs	.+10     	; 0x1bec <main+0x716>
    1be2:	c7 54       	subi	r28, 0x47	; 71
    1be4:	df 4f       	sbci	r29, 0xFF	; 255
    1be6:	18 82       	st	Y, r1
    1be8:	c9 5b       	subi	r28, 0xB9	; 185
    1bea:	d0 40       	sbci	r29, 0x00	; 0
    1bec:	ca 54       	subi	r28, 0x4A	; 74
    1bee:	df 4f       	sbci	r29, 0xFF	; 255
    1bf0:	08 81       	ld	r16, Y
    1bf2:	c6 5b       	subi	r28, 0xB6	; 182
    1bf4:	d0 40       	sbci	r29, 0x00	; 0
    1bf6:	c1 55       	subi	r28, 0x51	; 81
    1bf8:	df 4f       	sbci	r29, 0xFF	; 255
    1bfa:	18 81       	ld	r17, Y
    1bfc:	cf 5a       	subi	r28, 0xAF	; 175
    1bfe:	d0 40       	sbci	r29, 0x00	; 0
    1c00:	01 0f       	add	r16, r17
    1c02:	c6 54       	subi	r28, 0x46	; 70
    1c04:	df 4f       	sbci	r29, 0xFF	; 255
    1c06:	08 83       	st	Y, r16
    1c08:	ca 5b       	subi	r28, 0xBA	; 186
    1c0a:	d0 40       	sbci	r29, 0x00	; 0
    1c0c:	21 e0       	ldi	r18, 0x01	; 1
    1c0e:	c5 54       	subi	r28, 0x45	; 69
    1c10:	df 4f       	sbci	r29, 0xFF	; 255
    1c12:	28 83       	st	Y, r18
    1c14:	cb 5b       	subi	r28, 0xBB	; 187
    1c16:	d0 40       	sbci	r29, 0x00	; 0
    1c18:	c6 54       	subi	r28, 0x46	; 70
    1c1a:	df 4f       	sbci	r29, 0xFF	; 255
    1c1c:	38 81       	ld	r19, Y
    1c1e:	ca 5b       	subi	r28, 0xBA	; 186
    1c20:	d0 40       	sbci	r29, 0x00	; 0
    1c22:	c1 55       	subi	r28, 0x51	; 81
    1c24:	df 4f       	sbci	r29, 0xFF	; 255
    1c26:	48 81       	ld	r20, Y
    1c28:	cf 5a       	subi	r28, 0xAF	; 175
    1c2a:	d0 40       	sbci	r29, 0x00	; 0
    1c2c:	34 17       	cp	r19, r20
    1c2e:	28 f0       	brcs	.+10     	; 0x1c3a <main+0x764>
    1c30:	c5 54       	subi	r28, 0x45	; 69
    1c32:	df 4f       	sbci	r29, 0xFF	; 255
    1c34:	18 82       	st	Y, r1
    1c36:	cb 5b       	subi	r28, 0xBB	; 187
    1c38:	d0 40       	sbci	r29, 0x00	; 0
    1c3a:	c7 54       	subi	r28, 0x47	; 71
    1c3c:	df 4f       	sbci	r29, 0xFF	; 255
    1c3e:	58 81       	ld	r21, Y
    1c40:	c9 5b       	subi	r28, 0xB9	; 185
    1c42:	d0 40       	sbci	r29, 0x00	; 0
    1c44:	c5 54       	subi	r28, 0x45	; 69
    1c46:	df 4f       	sbci	r29, 0xFF	; 255
    1c48:	68 81       	ld	r22, Y
    1c4a:	cb 5b       	subi	r28, 0xBB	; 187
    1c4c:	d0 40       	sbci	r29, 0x00	; 0
    1c4e:	56 2b       	or	r21, r22
    1c50:	c7 54       	subi	r28, 0x47	; 71
    1c52:	df 4f       	sbci	r29, 0xFF	; 255
    1c54:	58 83       	st	Y, r21
    1c56:	c9 5b       	subi	r28, 0xB9	; 185
    1c58:	d0 40       	sbci	r29, 0x00	; 0
    1c5a:	c6 54       	subi	r28, 0x46	; 70
    1c5c:	df 4f       	sbci	r29, 0xFF	; 255
    1c5e:	78 81       	ld	r23, Y
    1c60:	ca 5b       	subi	r28, 0xBA	; 186
    1c62:	d0 40       	sbci	r29, 0x00	; 0
    1c64:	c1 55       	subi	r28, 0x51	; 81
    1c66:	df 4f       	sbci	r29, 0xFF	; 255
    1c68:	78 83       	st	Y, r23
    1c6a:	cf 5a       	subi	r28, 0xAF	; 175
    1c6c:	d0 40       	sbci	r29, 0x00	; 0
    1c6e:	c0 56       	subi	r28, 0x60	; 96
    1c70:	df 4f       	sbci	r29, 0xFF	; 255
    1c72:	88 81       	ld	r24, Y
    1c74:	c0 5a       	subi	r28, 0xA0	; 160
    1c76:	d0 40       	sbci	r29, 0x00	; 0
    1c78:	c8 55       	subi	r28, 0x58	; 88
    1c7a:	df 4f       	sbci	r29, 0xFF	; 255
    1c7c:	98 81       	ld	r25, Y
    1c7e:	c8 5a       	subi	r28, 0xA8	; 168
    1c80:	d0 40       	sbci	r29, 0x00	; 0
    1c82:	89 0f       	add	r24, r25
    1c84:	c0 55       	subi	r28, 0x50	; 80
    1c86:	df 4f       	sbci	r29, 0xFF	; 255
    1c88:	88 83       	st	Y, r24
    1c8a:	c0 5b       	subi	r28, 0xB0	; 176
    1c8c:	d0 40       	sbci	r29, 0x00	; 0
    1c8e:	e1 e0       	ldi	r30, 0x01	; 1
    1c90:	c4 54       	subi	r28, 0x44	; 68
    1c92:	df 4f       	sbci	r29, 0xFF	; 255
    1c94:	e8 83       	st	Y, r30
    1c96:	cc 5b       	subi	r28, 0xBC	; 188
    1c98:	d0 40       	sbci	r29, 0x00	; 0
    1c9a:	c0 55       	subi	r28, 0x50	; 80
    1c9c:	df 4f       	sbci	r29, 0xFF	; 255
    1c9e:	f8 81       	ld	r31, Y
    1ca0:	c0 5b       	subi	r28, 0xB0	; 176
    1ca2:	d0 40       	sbci	r29, 0x00	; 0
    1ca4:	c0 56       	subi	r28, 0x60	; 96
    1ca6:	df 4f       	sbci	r29, 0xFF	; 255
    1ca8:	08 81       	ld	r16, Y
    1caa:	c0 5a       	subi	r28, 0xA0	; 160
    1cac:	d0 40       	sbci	r29, 0x00	; 0
    1cae:	f0 17       	cp	r31, r16
    1cb0:	28 f0       	brcs	.+10     	; 0x1cbc <main+0x7e6>
    1cb2:	c4 54       	subi	r28, 0x44	; 68
    1cb4:	df 4f       	sbci	r29, 0xFF	; 255
    1cb6:	18 82       	st	Y, r1
    1cb8:	cc 5b       	subi	r28, 0xBC	; 188
    1cba:	d0 40       	sbci	r29, 0x00	; 0
    1cbc:	c7 54       	subi	r28, 0x47	; 71
    1cbe:	df 4f       	sbci	r29, 0xFF	; 255
    1cc0:	18 81       	ld	r17, Y
    1cc2:	c9 5b       	subi	r28, 0xB9	; 185
    1cc4:	d0 40       	sbci	r29, 0x00	; 0
    1cc6:	c0 55       	subi	r28, 0x50	; 80
    1cc8:	df 4f       	sbci	r29, 0xFF	; 255
    1cca:	28 81       	ld	r18, Y
    1ccc:	c0 5b       	subi	r28, 0xB0	; 176
    1cce:	d0 40       	sbci	r29, 0x00	; 0
    1cd0:	12 0f       	add	r17, r18
    1cd2:	c3 54       	subi	r28, 0x43	; 67
    1cd4:	df 4f       	sbci	r29, 0xFF	; 255
    1cd6:	18 83       	st	Y, r17
    1cd8:	cd 5b       	subi	r28, 0xBD	; 189
    1cda:	d0 40       	sbci	r29, 0x00	; 0
    1cdc:	31 e0       	ldi	r19, 0x01	; 1
    1cde:	c2 54       	subi	r28, 0x42	; 66
    1ce0:	df 4f       	sbci	r29, 0xFF	; 255
    1ce2:	38 83       	st	Y, r19
    1ce4:	ce 5b       	subi	r28, 0xBE	; 190
    1ce6:	d0 40       	sbci	r29, 0x00	; 0
    1ce8:	c3 54       	subi	r28, 0x43	; 67
    1cea:	df 4f       	sbci	r29, 0xFF	; 255
    1cec:	48 81       	ld	r20, Y
    1cee:	cd 5b       	subi	r28, 0xBD	; 189
    1cf0:	d0 40       	sbci	r29, 0x00	; 0
    1cf2:	c0 55       	subi	r28, 0x50	; 80
    1cf4:	df 4f       	sbci	r29, 0xFF	; 255
    1cf6:	58 81       	ld	r21, Y
    1cf8:	c0 5b       	subi	r28, 0xB0	; 176
    1cfa:	d0 40       	sbci	r29, 0x00	; 0
    1cfc:	45 17       	cp	r20, r21
    1cfe:	28 f0       	brcs	.+10     	; 0x1d0a <main+0x834>
    1d00:	c2 54       	subi	r28, 0x42	; 66
    1d02:	df 4f       	sbci	r29, 0xFF	; 255
    1d04:	18 82       	st	Y, r1
    1d06:	ce 5b       	subi	r28, 0xBE	; 190
    1d08:	d0 40       	sbci	r29, 0x00	; 0
    1d0a:	c4 54       	subi	r28, 0x44	; 68
    1d0c:	df 4f       	sbci	r29, 0xFF	; 255
    1d0e:	68 81       	ld	r22, Y
    1d10:	cc 5b       	subi	r28, 0xBC	; 188
    1d12:	d0 40       	sbci	r29, 0x00	; 0
    1d14:	c2 54       	subi	r28, 0x42	; 66
    1d16:	df 4f       	sbci	r29, 0xFF	; 255
    1d18:	78 81       	ld	r23, Y
    1d1a:	ce 5b       	subi	r28, 0xBE	; 190
    1d1c:	d0 40       	sbci	r29, 0x00	; 0
    1d1e:	67 2b       	or	r22, r23
    1d20:	c4 54       	subi	r28, 0x44	; 68
    1d22:	df 4f       	sbci	r29, 0xFF	; 255
    1d24:	68 83       	st	Y, r22
    1d26:	cc 5b       	subi	r28, 0xBC	; 188
    1d28:	d0 40       	sbci	r29, 0x00	; 0
    1d2a:	c3 54       	subi	r28, 0x43	; 67
    1d2c:	df 4f       	sbci	r29, 0xFF	; 255
    1d2e:	88 81       	ld	r24, Y
    1d30:	cd 5b       	subi	r28, 0xBD	; 189
    1d32:	d0 40       	sbci	r29, 0x00	; 0
    1d34:	c0 55       	subi	r28, 0x50	; 80
    1d36:	df 4f       	sbci	r29, 0xFF	; 255
    1d38:	88 83       	st	Y, r24
    1d3a:	c0 5b       	subi	r28, 0xB0	; 176
    1d3c:	d0 40       	sbci	r29, 0x00	; 0
    1d3e:	cf 55       	subi	r28, 0x5F	; 95
    1d40:	df 4f       	sbci	r29, 0xFF	; 255
    1d42:	98 81       	ld	r25, Y
    1d44:	c1 5a       	subi	r28, 0xA1	; 161
    1d46:	d0 40       	sbci	r29, 0x00	; 0
    1d48:	c7 55       	subi	r28, 0x57	; 87
    1d4a:	df 4f       	sbci	r29, 0xFF	; 255
    1d4c:	e8 81       	ld	r30, Y
    1d4e:	c9 5a       	subi	r28, 0xA9	; 169
    1d50:	d0 40       	sbci	r29, 0x00	; 0
    1d52:	9e 0f       	add	r25, r30
    1d54:	cf 54       	subi	r28, 0x4F	; 79
    1d56:	df 4f       	sbci	r29, 0xFF	; 255
    1d58:	98 83       	st	Y, r25
    1d5a:	c1 5b       	subi	r28, 0xB1	; 177
    1d5c:	d0 40       	sbci	r29, 0x00	; 0
    1d5e:	f1 e0       	ldi	r31, 0x01	; 1
    1d60:	c1 54       	subi	r28, 0x41	; 65
    1d62:	df 4f       	sbci	r29, 0xFF	; 255
    1d64:	f8 83       	st	Y, r31
    1d66:	cf 5b       	subi	r28, 0xBF	; 191
    1d68:	d0 40       	sbci	r29, 0x00	; 0
    1d6a:	cf 54       	subi	r28, 0x4F	; 79
    1d6c:	df 4f       	sbci	r29, 0xFF	; 255
    1d6e:	08 81       	ld	r16, Y
    1d70:	c1 5b       	subi	r28, 0xB1	; 177
    1d72:	d0 40       	sbci	r29, 0x00	; 0
    1d74:	cf 55       	subi	r28, 0x5F	; 95
    1d76:	df 4f       	sbci	r29, 0xFF	; 255
    1d78:	18 81       	ld	r17, Y
    1d7a:	c1 5a       	subi	r28, 0xA1	; 161
    1d7c:	d0 40       	sbci	r29, 0x00	; 0
    1d7e:	01 17       	cp	r16, r17
    1d80:	28 f0       	brcs	.+10     	; 0x1d8c <main+0x8b6>
    1d82:	c1 54       	subi	r28, 0x41	; 65
    1d84:	df 4f       	sbci	r29, 0xFF	; 255
    1d86:	18 82       	st	Y, r1
    1d88:	cf 5b       	subi	r28, 0xBF	; 191
    1d8a:	d0 40       	sbci	r29, 0x00	; 0
    1d8c:	c4 54       	subi	r28, 0x44	; 68
    1d8e:	df 4f       	sbci	r29, 0xFF	; 255
    1d90:	28 81       	ld	r18, Y
    1d92:	cc 5b       	subi	r28, 0xBC	; 188
    1d94:	d0 40       	sbci	r29, 0x00	; 0
    1d96:	cf 54       	subi	r28, 0x4F	; 79
    1d98:	df 4f       	sbci	r29, 0xFF	; 255
    1d9a:	38 81       	ld	r19, Y
    1d9c:	c1 5b       	subi	r28, 0xB1	; 177
    1d9e:	d0 40       	sbci	r29, 0x00	; 0
    1da0:	23 0f       	add	r18, r19
    1da2:	c0 54       	subi	r28, 0x40	; 64
    1da4:	df 4f       	sbci	r29, 0xFF	; 255
    1da6:	28 83       	st	Y, r18
    1da8:	c0 5c       	subi	r28, 0xC0	; 192
    1daa:	d0 40       	sbci	r29, 0x00	; 0
    1dac:	41 e0       	ldi	r20, 0x01	; 1
    1dae:	cf 53       	subi	r28, 0x3F	; 63
    1db0:	df 4f       	sbci	r29, 0xFF	; 255
    1db2:	48 83       	st	Y, r20
    1db4:	c1 5c       	subi	r28, 0xC1	; 193
    1db6:	d0 40       	sbci	r29, 0x00	; 0
    1db8:	c0 54       	subi	r28, 0x40	; 64
    1dba:	df 4f       	sbci	r29, 0xFF	; 255
    1dbc:	58 81       	ld	r21, Y
    1dbe:	c0 5c       	subi	r28, 0xC0	; 192
    1dc0:	d0 40       	sbci	r29, 0x00	; 0
    1dc2:	cf 54       	subi	r28, 0x4F	; 79
    1dc4:	df 4f       	sbci	r29, 0xFF	; 255
    1dc6:	68 81       	ld	r22, Y
    1dc8:	c1 5b       	subi	r28, 0xB1	; 177
    1dca:	d0 40       	sbci	r29, 0x00	; 0
    1dcc:	56 17       	cp	r21, r22
    1dce:	28 f0       	brcs	.+10     	; 0x1dda <main+0x904>
    1dd0:	cf 53       	subi	r28, 0x3F	; 63
    1dd2:	df 4f       	sbci	r29, 0xFF	; 255
    1dd4:	18 82       	st	Y, r1
    1dd6:	c1 5c       	subi	r28, 0xC1	; 193
    1dd8:	d0 40       	sbci	r29, 0x00	; 0
    1dda:	c1 54       	subi	r28, 0x41	; 65
    1ddc:	df 4f       	sbci	r29, 0xFF	; 255
    1dde:	78 81       	ld	r23, Y
    1de0:	cf 5b       	subi	r28, 0xBF	; 191
    1de2:	d0 40       	sbci	r29, 0x00	; 0
    1de4:	cf 53       	subi	r28, 0x3F	; 63
    1de6:	df 4f       	sbci	r29, 0xFF	; 255
    1de8:	88 81       	ld	r24, Y
    1dea:	c1 5c       	subi	r28, 0xC1	; 193
    1dec:	d0 40       	sbci	r29, 0x00	; 0
    1dee:	78 2b       	or	r23, r24
    1df0:	c1 54       	subi	r28, 0x41	; 65
    1df2:	df 4f       	sbci	r29, 0xFF	; 255
    1df4:	78 83       	st	Y, r23
    1df6:	cf 5b       	subi	r28, 0xBF	; 191
    1df8:	d0 40       	sbci	r29, 0x00	; 0
    1dfa:	c0 54       	subi	r28, 0x40	; 64
    1dfc:	df 4f       	sbci	r29, 0xFF	; 255
    1dfe:	98 81       	ld	r25, Y
    1e00:	c0 5c       	subi	r28, 0xC0	; 192
    1e02:	d0 40       	sbci	r29, 0x00	; 0
    1e04:	cf 54       	subi	r28, 0x4F	; 79
    1e06:	df 4f       	sbci	r29, 0xFF	; 255
    1e08:	98 83       	st	Y, r25
    1e0a:	c1 5b       	subi	r28, 0xB1	; 177
    1e0c:	d0 40       	sbci	r29, 0x00	; 0
    1e0e:	ce 55       	subi	r28, 0x5E	; 94
    1e10:	df 4f       	sbci	r29, 0xFF	; 255
    1e12:	e8 81       	ld	r30, Y
    1e14:	c2 5a       	subi	r28, 0xA2	; 162
    1e16:	d0 40       	sbci	r29, 0x00	; 0
    1e18:	c6 55       	subi	r28, 0x56	; 86
    1e1a:	df 4f       	sbci	r29, 0xFF	; 255
    1e1c:	f8 81       	ld	r31, Y
    1e1e:	ca 5a       	subi	r28, 0xAA	; 170
    1e20:	d0 40       	sbci	r29, 0x00	; 0
    1e22:	ef 0f       	add	r30, r31
    1e24:	ce 54       	subi	r28, 0x4E	; 78
    1e26:	df 4f       	sbci	r29, 0xFF	; 255
    1e28:	e8 83       	st	Y, r30
    1e2a:	c2 5b       	subi	r28, 0xB2	; 178
    1e2c:	d0 40       	sbci	r29, 0x00	; 0
    1e2e:	01 e0       	ldi	r16, 0x01	; 1
    1e30:	ce 53       	subi	r28, 0x3E	; 62
    1e32:	df 4f       	sbci	r29, 0xFF	; 255
    1e34:	08 83       	st	Y, r16
    1e36:	c2 5c       	subi	r28, 0xC2	; 194
    1e38:	d0 40       	sbci	r29, 0x00	; 0
    1e3a:	ce 54       	subi	r28, 0x4E	; 78
    1e3c:	df 4f       	sbci	r29, 0xFF	; 255
    1e3e:	18 81       	ld	r17, Y
    1e40:	c2 5b       	subi	r28, 0xB2	; 178
    1e42:	d0 40       	sbci	r29, 0x00	; 0
    1e44:	ce 55       	subi	r28, 0x5E	; 94
    1e46:	df 4f       	sbci	r29, 0xFF	; 255
    1e48:	28 81       	ld	r18, Y
    1e4a:	c2 5a       	subi	r28, 0xA2	; 162
    1e4c:	d0 40       	sbci	r29, 0x00	; 0
    1e4e:	12 17       	cp	r17, r18
    1e50:	28 f0       	brcs	.+10     	; 0x1e5c <main+0x986>
    1e52:	ce 53       	subi	r28, 0x3E	; 62
    1e54:	df 4f       	sbci	r29, 0xFF	; 255
    1e56:	18 82       	st	Y, r1
    1e58:	c2 5c       	subi	r28, 0xC2	; 194
    1e5a:	d0 40       	sbci	r29, 0x00	; 0
    1e5c:	c1 54       	subi	r28, 0x41	; 65
    1e5e:	df 4f       	sbci	r29, 0xFF	; 255
    1e60:	38 81       	ld	r19, Y
    1e62:	cf 5b       	subi	r28, 0xBF	; 191
    1e64:	d0 40       	sbci	r29, 0x00	; 0
    1e66:	ce 54       	subi	r28, 0x4E	; 78
    1e68:	df 4f       	sbci	r29, 0xFF	; 255
    1e6a:	48 81       	ld	r20, Y
    1e6c:	c2 5b       	subi	r28, 0xB2	; 178
    1e6e:	d0 40       	sbci	r29, 0x00	; 0
    1e70:	34 0f       	add	r19, r20
    1e72:	cd 53       	subi	r28, 0x3D	; 61
    1e74:	df 4f       	sbci	r29, 0xFF	; 255
    1e76:	38 83       	st	Y, r19
    1e78:	c3 5c       	subi	r28, 0xC3	; 195
    1e7a:	d0 40       	sbci	r29, 0x00	; 0
    1e7c:	51 e0       	ldi	r21, 0x01	; 1
    1e7e:	cc 53       	subi	r28, 0x3C	; 60
    1e80:	df 4f       	sbci	r29, 0xFF	; 255
    1e82:	58 83       	st	Y, r21
    1e84:	c4 5c       	subi	r28, 0xC4	; 196
    1e86:	d0 40       	sbci	r29, 0x00	; 0
    1e88:	cd 53       	subi	r28, 0x3D	; 61
    1e8a:	df 4f       	sbci	r29, 0xFF	; 255
    1e8c:	68 81       	ld	r22, Y
    1e8e:	c3 5c       	subi	r28, 0xC3	; 195
    1e90:	d0 40       	sbci	r29, 0x00	; 0
    1e92:	ce 54       	subi	r28, 0x4E	; 78
    1e94:	df 4f       	sbci	r29, 0xFF	; 255
    1e96:	78 81       	ld	r23, Y
    1e98:	c2 5b       	subi	r28, 0xB2	; 178
    1e9a:	d0 40       	sbci	r29, 0x00	; 0
    1e9c:	67 17       	cp	r22, r23
    1e9e:	28 f0       	brcs	.+10     	; 0x1eaa <main+0x9d4>
    1ea0:	cc 53       	subi	r28, 0x3C	; 60
    1ea2:	df 4f       	sbci	r29, 0xFF	; 255
    1ea4:	18 82       	st	Y, r1
    1ea6:	c4 5c       	subi	r28, 0xC4	; 196
    1ea8:	d0 40       	sbci	r29, 0x00	; 0
    1eaa:	ce 53       	subi	r28, 0x3E	; 62
    1eac:	df 4f       	sbci	r29, 0xFF	; 255
    1eae:	88 81       	ld	r24, Y
    1eb0:	c2 5c       	subi	r28, 0xC2	; 194
    1eb2:	d0 40       	sbci	r29, 0x00	; 0
    1eb4:	cc 53       	subi	r28, 0x3C	; 60
    1eb6:	df 4f       	sbci	r29, 0xFF	; 255
    1eb8:	98 81       	ld	r25, Y
    1eba:	c4 5c       	subi	r28, 0xC4	; 196
    1ebc:	d0 40       	sbci	r29, 0x00	; 0
    1ebe:	89 2b       	or	r24, r25
    1ec0:	ce 53       	subi	r28, 0x3E	; 62
    1ec2:	df 4f       	sbci	r29, 0xFF	; 255
    1ec4:	88 83       	st	Y, r24
    1ec6:	c2 5c       	subi	r28, 0xC2	; 194
    1ec8:	d0 40       	sbci	r29, 0x00	; 0
    1eca:	cd 53       	subi	r28, 0x3D	; 61
    1ecc:	df 4f       	sbci	r29, 0xFF	; 255
    1ece:	e8 81       	ld	r30, Y
    1ed0:	c3 5c       	subi	r28, 0xC3	; 195
    1ed2:	d0 40       	sbci	r29, 0x00	; 0
    1ed4:	ce 54       	subi	r28, 0x4E	; 78
    1ed6:	df 4f       	sbci	r29, 0xFF	; 255
    1ed8:	e8 83       	st	Y, r30
    1eda:	c2 5b       	subi	r28, 0xB2	; 178
    1edc:	d0 40       	sbci	r29, 0x00	; 0
    1ede:	cd 55       	subi	r28, 0x5D	; 93
    1ee0:	df 4f       	sbci	r29, 0xFF	; 255
    1ee2:	f8 81       	ld	r31, Y
    1ee4:	c3 5a       	subi	r28, 0xA3	; 163
    1ee6:	d0 40       	sbci	r29, 0x00	; 0
    1ee8:	c5 55       	subi	r28, 0x55	; 85
    1eea:	df 4f       	sbci	r29, 0xFF	; 255
    1eec:	08 81       	ld	r16, Y
    1eee:	cb 5a       	subi	r28, 0xAB	; 171
    1ef0:	d0 40       	sbci	r29, 0x00	; 0
    1ef2:	f0 0f       	add	r31, r16
    1ef4:	cd 54       	subi	r28, 0x4D	; 77
    1ef6:	df 4f       	sbci	r29, 0xFF	; 255
    1ef8:	f8 83       	st	Y, r31
    1efa:	c3 5b       	subi	r28, 0xB3	; 179
    1efc:	d0 40       	sbci	r29, 0x00	; 0
    1efe:	11 e0       	ldi	r17, 0x01	; 1
    1f00:	cb 53       	subi	r28, 0x3B	; 59
    1f02:	df 4f       	sbci	r29, 0xFF	; 255
    1f04:	18 83       	st	Y, r17
    1f06:	c5 5c       	subi	r28, 0xC5	; 197
    1f08:	d0 40       	sbci	r29, 0x00	; 0
    1f0a:	cd 54       	subi	r28, 0x4D	; 77
    1f0c:	df 4f       	sbci	r29, 0xFF	; 255
    1f0e:	28 81       	ld	r18, Y
    1f10:	c3 5b       	subi	r28, 0xB3	; 179
    1f12:	d0 40       	sbci	r29, 0x00	; 0
    1f14:	cd 55       	subi	r28, 0x5D	; 93
    1f16:	df 4f       	sbci	r29, 0xFF	; 255
    1f18:	38 81       	ld	r19, Y
    1f1a:	c3 5a       	subi	r28, 0xA3	; 163
    1f1c:	d0 40       	sbci	r29, 0x00	; 0
    1f1e:	23 17       	cp	r18, r19
    1f20:	28 f0       	brcs	.+10     	; 0x1f2c <main+0xa56>
    1f22:	cb 53       	subi	r28, 0x3B	; 59
    1f24:	df 4f       	sbci	r29, 0xFF	; 255
    1f26:	18 82       	st	Y, r1
    1f28:	c5 5c       	subi	r28, 0xC5	; 197
    1f2a:	d0 40       	sbci	r29, 0x00	; 0
    1f2c:	ce 53       	subi	r28, 0x3E	; 62
    1f2e:	df 4f       	sbci	r29, 0xFF	; 255
    1f30:	48 81       	ld	r20, Y
    1f32:	c2 5c       	subi	r28, 0xC2	; 194
    1f34:	d0 40       	sbci	r29, 0x00	; 0
    1f36:	cd 54       	subi	r28, 0x4D	; 77
    1f38:	df 4f       	sbci	r29, 0xFF	; 255
    1f3a:	58 81       	ld	r21, Y
    1f3c:	c3 5b       	subi	r28, 0xB3	; 179
    1f3e:	d0 40       	sbci	r29, 0x00	; 0
    1f40:	45 0f       	add	r20, r21
    1f42:	ca 53       	subi	r28, 0x3A	; 58
    1f44:	df 4f       	sbci	r29, 0xFF	; 255
    1f46:	48 83       	st	Y, r20
    1f48:	c6 5c       	subi	r28, 0xC6	; 198
    1f4a:	d0 40       	sbci	r29, 0x00	; 0
    1f4c:	61 e0       	ldi	r22, 0x01	; 1
    1f4e:	c9 53       	subi	r28, 0x39	; 57
    1f50:	df 4f       	sbci	r29, 0xFF	; 255
    1f52:	68 83       	st	Y, r22
    1f54:	c7 5c       	subi	r28, 0xC7	; 199
    1f56:	d0 40       	sbci	r29, 0x00	; 0
    1f58:	ca 53       	subi	r28, 0x3A	; 58
    1f5a:	df 4f       	sbci	r29, 0xFF	; 255
    1f5c:	78 81       	ld	r23, Y
    1f5e:	c6 5c       	subi	r28, 0xC6	; 198
    1f60:	d0 40       	sbci	r29, 0x00	; 0
    1f62:	cd 54       	subi	r28, 0x4D	; 77
    1f64:	df 4f       	sbci	r29, 0xFF	; 255
    1f66:	88 81       	ld	r24, Y
    1f68:	c3 5b       	subi	r28, 0xB3	; 179
    1f6a:	d0 40       	sbci	r29, 0x00	; 0
    1f6c:	78 17       	cp	r23, r24
    1f6e:	28 f0       	brcs	.+10     	; 0x1f7a <main+0xaa4>
    1f70:	c9 53       	subi	r28, 0x39	; 57
    1f72:	df 4f       	sbci	r29, 0xFF	; 255
    1f74:	18 82       	st	Y, r1
    1f76:	c7 5c       	subi	r28, 0xC7	; 199
    1f78:	d0 40       	sbci	r29, 0x00	; 0
    1f7a:	cb 53       	subi	r28, 0x3B	; 59
    1f7c:	df 4f       	sbci	r29, 0xFF	; 255
    1f7e:	98 81       	ld	r25, Y
    1f80:	c5 5c       	subi	r28, 0xC5	; 197
    1f82:	d0 40       	sbci	r29, 0x00	; 0
    1f84:	c9 53       	subi	r28, 0x39	; 57
    1f86:	df 4f       	sbci	r29, 0xFF	; 255
    1f88:	e8 81       	ld	r30, Y
    1f8a:	c7 5c       	subi	r28, 0xC7	; 199
    1f8c:	d0 40       	sbci	r29, 0x00	; 0
    1f8e:	9e 2b       	or	r25, r30
    1f90:	cb 53       	subi	r28, 0x3B	; 59
    1f92:	df 4f       	sbci	r29, 0xFF	; 255
    1f94:	98 83       	st	Y, r25
    1f96:	c5 5c       	subi	r28, 0xC5	; 197
    1f98:	d0 40       	sbci	r29, 0x00	; 0
    1f9a:	ca 53       	subi	r28, 0x3A	; 58
    1f9c:	df 4f       	sbci	r29, 0xFF	; 255
    1f9e:	f8 81       	ld	r31, Y
    1fa0:	c6 5c       	subi	r28, 0xC6	; 198
    1fa2:	d0 40       	sbci	r29, 0x00	; 0
    1fa4:	cd 54       	subi	r28, 0x4D	; 77
    1fa6:	df 4f       	sbci	r29, 0xFF	; 255
    1fa8:	f8 83       	st	Y, r31
    1faa:	c3 5b       	subi	r28, 0xB3	; 179
    1fac:	d0 40       	sbci	r29, 0x00	; 0
    1fae:	cc 55       	subi	r28, 0x5C	; 92
    1fb0:	df 4f       	sbci	r29, 0xFF	; 255
    1fb2:	08 81       	ld	r16, Y
    1fb4:	c4 5a       	subi	r28, 0xA4	; 164
    1fb6:	d0 40       	sbci	r29, 0x00	; 0
    1fb8:	c4 55       	subi	r28, 0x54	; 84
    1fba:	df 4f       	sbci	r29, 0xFF	; 255
    1fbc:	18 81       	ld	r17, Y
    1fbe:	cc 5a       	subi	r28, 0xAC	; 172
    1fc0:	d0 40       	sbci	r29, 0x00	; 0
    1fc2:	01 0f       	add	r16, r17
    1fc4:	cc 54       	subi	r28, 0x4C	; 76
    1fc6:	df 4f       	sbci	r29, 0xFF	; 255
    1fc8:	08 83       	st	Y, r16
    1fca:	c4 5b       	subi	r28, 0xB4	; 180
    1fcc:	d0 40       	sbci	r29, 0x00	; 0
    1fce:	cb 53       	subi	r28, 0x3B	; 59
    1fd0:	df 4f       	sbci	r29, 0xFF	; 255
    1fd2:	88 81       	ld	r24, Y
    1fd4:	c5 5c       	subi	r28, 0xC5	; 197
    1fd6:	d0 40       	sbci	r29, 0x00	; 0
    1fd8:	cc 54       	subi	r28, 0x4C	; 76
    1fda:	df 4f       	sbci	r29, 0xFF	; 255
    1fdc:	28 81       	ld	r18, Y
    1fde:	c4 5b       	subi	r28, 0xB4	; 180
    1fe0:	d0 40       	sbci	r29, 0x00	; 0
    1fe2:	82 0f       	add	r24, r18
    1fe4:	cc 54       	subi	r28, 0x4C	; 76
    1fe6:	df 4f       	sbci	r29, 0xFF	; 255
    1fe8:	88 83       	st	Y, r24
    1fea:	c4 5b       	subi	r28, 0xB4	; 180
    1fec:	d0 40       	sbci	r29, 0x00	; 0
    1fee:	c3 55       	subi	r28, 0x53	; 83
    1ff0:	df 4f       	sbci	r29, 0xFF	; 255
    1ff2:	38 81       	ld	r19, Y
    1ff4:	cd 5a       	subi	r28, 0xAD	; 173
    1ff6:	d0 40       	sbci	r29, 0x00	; 0
    1ff8:	c2 57       	subi	r28, 0x72	; 114
    1ffa:	df 4f       	sbci	r29, 0xFF	; 255
    1ffc:	38 83       	st	Y, r19
    1ffe:	ce 58       	subi	r28, 0x8E	; 142
    2000:	d0 40       	sbci	r29, 0x00	; 0
    2002:	c2 55       	subi	r28, 0x52	; 82
    2004:	df 4f       	sbci	r29, 0xFF	; 255
    2006:	48 81       	ld	r20, Y
    2008:	ce 5a       	subi	r28, 0xAE	; 174
    200a:	d0 40       	sbci	r29, 0x00	; 0
    200c:	c1 57       	subi	r28, 0x71	; 113
    200e:	df 4f       	sbci	r29, 0xFF	; 255
    2010:	48 83       	st	Y, r20
    2012:	cf 58       	subi	r28, 0x8F	; 143
    2014:	d0 40       	sbci	r29, 0x00	; 0
    2016:	c1 55       	subi	r28, 0x51	; 81
    2018:	df 4f       	sbci	r29, 0xFF	; 255
    201a:	58 81       	ld	r21, Y
    201c:	cf 5a       	subi	r28, 0xAF	; 175
    201e:	d0 40       	sbci	r29, 0x00	; 0
    2020:	c0 57       	subi	r28, 0x70	; 112
    2022:	df 4f       	sbci	r29, 0xFF	; 255
    2024:	58 83       	st	Y, r21
    2026:	c0 59       	subi	r28, 0x90	; 144
    2028:	d0 40       	sbci	r29, 0x00	; 0
    202a:	c0 55       	subi	r28, 0x50	; 80
    202c:	df 4f       	sbci	r29, 0xFF	; 255
    202e:	68 81       	ld	r22, Y
    2030:	c0 5b       	subi	r28, 0xB0	; 176
    2032:	d0 40       	sbci	r29, 0x00	; 0
    2034:	cf 56       	subi	r28, 0x6F	; 111
    2036:	df 4f       	sbci	r29, 0xFF	; 255
    2038:	68 83       	st	Y, r22
    203a:	c1 59       	subi	r28, 0x91	; 145
    203c:	d0 40       	sbci	r29, 0x00	; 0
    203e:	cf 54       	subi	r28, 0x4F	; 79
    2040:	df 4f       	sbci	r29, 0xFF	; 255
    2042:	78 81       	ld	r23, Y
    2044:	c1 5b       	subi	r28, 0xB1	; 177
    2046:	d0 40       	sbci	r29, 0x00	; 0
    2048:	ce 56       	subi	r28, 0x6E	; 110
    204a:	df 4f       	sbci	r29, 0xFF	; 255
    204c:	78 83       	st	Y, r23
    204e:	c2 59       	subi	r28, 0x92	; 146
    2050:	d0 40       	sbci	r29, 0x00	; 0
    2052:	ce 54       	subi	r28, 0x4E	; 78
    2054:	df 4f       	sbci	r29, 0xFF	; 255
    2056:	88 81       	ld	r24, Y
    2058:	c2 5b       	subi	r28, 0xB2	; 178
    205a:	d0 40       	sbci	r29, 0x00	; 0
    205c:	cd 56       	subi	r28, 0x6D	; 109
    205e:	df 4f       	sbci	r29, 0xFF	; 255
    2060:	88 83       	st	Y, r24
    2062:	c3 59       	subi	r28, 0x93	; 147
    2064:	d0 40       	sbci	r29, 0x00	; 0
    2066:	cd 54       	subi	r28, 0x4D	; 77
    2068:	df 4f       	sbci	r29, 0xFF	; 255
    206a:	98 81       	ld	r25, Y
    206c:	c3 5b       	subi	r28, 0xB3	; 179
    206e:	d0 40       	sbci	r29, 0x00	; 0
    2070:	cc 56       	subi	r28, 0x6C	; 108
    2072:	df 4f       	sbci	r29, 0xFF	; 255
    2074:	98 83       	st	Y, r25
    2076:	c4 59       	subi	r28, 0x94	; 148
    2078:	d0 40       	sbci	r29, 0x00	; 0
    207a:	cc 54       	subi	r28, 0x4C	; 76
    207c:	df 4f       	sbci	r29, 0xFF	; 255
    207e:	e8 81       	ld	r30, Y
    2080:	c4 5b       	subi	r28, 0xB4	; 180
    2082:	d0 40       	sbci	r29, 0x00	; 0
    2084:	cb 56       	subi	r28, 0x6B	; 107
    2086:	df 4f       	sbci	r29, 0xFF	; 255
    2088:	e8 83       	st	Y, r30
    208a:	c5 59       	subi	r28, 0x95	; 149
    208c:	d0 40       	sbci	r29, 0x00	; 0
    208e:	fe 01       	movw	r30, r28
    2090:	ef 58       	subi	r30, 0x8F	; 143
    2092:	ff 4f       	sbci	r31, 0xFF	; 255
    2094:	80 81       	ld	r24, Z
    2096:	08 2f       	mov	r16, r24
    2098:	10 e0       	ldi	r17, 0x00	; 0
    209a:	20 e0       	ldi	r18, 0x00	; 0
    209c:	30 e0       	ldi	r19, 0x00	; 0
    209e:	40 e0       	ldi	r20, 0x00	; 0
    20a0:	50 e0       	ldi	r21, 0x00	; 0
    20a2:	60 e0       	ldi	r22, 0x00	; 0
    20a4:	70 e0       	ldi	r23, 0x00	; 0
    20a6:	ca 57       	subi	r28, 0x7A	; 122
    20a8:	df 4f       	sbci	r29, 0xFF	; 255
    20aa:	08 83       	st	Y, r16
    20ac:	c6 58       	subi	r28, 0x86	; 134
    20ae:	d0 40       	sbci	r29, 0x00	; 0
    20b0:	c9 57       	subi	r28, 0x79	; 121
    20b2:	df 4f       	sbci	r29, 0xFF	; 255
    20b4:	18 83       	st	Y, r17
    20b6:	c7 58       	subi	r28, 0x87	; 135
    20b8:	d0 40       	sbci	r29, 0x00	; 0
    20ba:	c8 57       	subi	r28, 0x78	; 120
    20bc:	df 4f       	sbci	r29, 0xFF	; 255
    20be:	28 83       	st	Y, r18
    20c0:	c8 58       	subi	r28, 0x88	; 136
    20c2:	d0 40       	sbci	r29, 0x00	; 0
    20c4:	c7 57       	subi	r28, 0x77	; 119
    20c6:	df 4f       	sbci	r29, 0xFF	; 255
    20c8:	38 83       	st	Y, r19
    20ca:	c9 58       	subi	r28, 0x89	; 137
    20cc:	d0 40       	sbci	r29, 0x00	; 0
    20ce:	c6 57       	subi	r28, 0x76	; 118
    20d0:	df 4f       	sbci	r29, 0xFF	; 255
    20d2:	48 83       	st	Y, r20
    20d4:	ca 58       	subi	r28, 0x8A	; 138
    20d6:	d0 40       	sbci	r29, 0x00	; 0
    20d8:	c5 57       	subi	r28, 0x75	; 117
    20da:	df 4f       	sbci	r29, 0xFF	; 255
    20dc:	58 83       	st	Y, r21
    20de:	cb 58       	subi	r28, 0x8B	; 139
    20e0:	d0 40       	sbci	r29, 0x00	; 0
    20e2:	c4 57       	subi	r28, 0x74	; 116
    20e4:	df 4f       	sbci	r29, 0xFF	; 255
    20e6:	68 83       	st	Y, r22
    20e8:	cc 58       	subi	r28, 0x8C	; 140
    20ea:	d0 40       	sbci	r29, 0x00	; 0
    20ec:	c3 57       	subi	r28, 0x73	; 115
    20ee:	df 4f       	sbci	r29, 0xFF	; 255
    20f0:	78 83       	st	Y, r23
    20f2:	cd 58       	subi	r28, 0x8D	; 141
    20f4:	d0 40       	sbci	r29, 0x00	; 0
    20f6:	c2 57       	subi	r28, 0x72	; 114
    20f8:	df 4f       	sbci	r29, 0xFF	; 255
    20fa:	18 81       	ld	r17, Y
    20fc:	ce 58       	subi	r28, 0x8E	; 142
    20fe:	d0 40       	sbci	r29, 0x00	; 0
    2100:	ca 57       	subi	r28, 0x7A	; 122
    2102:	df 4f       	sbci	r29, 0xFF	; 255
    2104:	28 81       	ld	r18, Y
    2106:	c6 58       	subi	r28, 0x86	; 134
    2108:	d0 40       	sbci	r29, 0x00	; 0
    210a:	12 0f       	add	r17, r18
    210c:	c8 53       	subi	r28, 0x38	; 56
    210e:	df 4f       	sbci	r29, 0xFF	; 255
    2110:	18 83       	st	Y, r17
    2112:	c8 5c       	subi	r28, 0xC8	; 200
    2114:	d0 40       	sbci	r29, 0x00	; 0
    2116:	31 e0       	ldi	r19, 0x01	; 1
    2118:	c0 53       	subi	r28, 0x30	; 48
    211a:	df 4f       	sbci	r29, 0xFF	; 255
    211c:	38 83       	st	Y, r19
    211e:	c0 5d       	subi	r28, 0xD0	; 208
    2120:	d0 40       	sbci	r29, 0x00	; 0
    2122:	c8 53       	subi	r28, 0x38	; 56
    2124:	df 4f       	sbci	r29, 0xFF	; 255
    2126:	48 81       	ld	r20, Y
    2128:	c8 5c       	subi	r28, 0xC8	; 200
    212a:	d0 40       	sbci	r29, 0x00	; 0
    212c:	c2 57       	subi	r28, 0x72	; 114
    212e:	df 4f       	sbci	r29, 0xFF	; 255
    2130:	58 81       	ld	r21, Y
    2132:	ce 58       	subi	r28, 0x8E	; 142
    2134:	d0 40       	sbci	r29, 0x00	; 0
    2136:	45 17       	cp	r20, r21
    2138:	28 f0       	brcs	.+10     	; 0x2144 <main+0xc6e>
    213a:	c0 53       	subi	r28, 0x30	; 48
    213c:	df 4f       	sbci	r29, 0xFF	; 255
    213e:	18 82       	st	Y, r1
    2140:	c0 5d       	subi	r28, 0xD0	; 208
    2142:	d0 40       	sbci	r29, 0x00	; 0
    2144:	c1 57       	subi	r28, 0x71	; 113
    2146:	df 4f       	sbci	r29, 0xFF	; 255
    2148:	68 81       	ld	r22, Y
    214a:	cf 58       	subi	r28, 0x8F	; 143
    214c:	d0 40       	sbci	r29, 0x00	; 0
    214e:	c9 57       	subi	r28, 0x79	; 121
    2150:	df 4f       	sbci	r29, 0xFF	; 255
    2152:	78 81       	ld	r23, Y
    2154:	c7 58       	subi	r28, 0x87	; 135
    2156:	d0 40       	sbci	r29, 0x00	; 0
    2158:	67 0f       	add	r22, r23
    215a:	c7 53       	subi	r28, 0x37	; 55
    215c:	df 4f       	sbci	r29, 0xFF	; 255
    215e:	68 83       	st	Y, r22
    2160:	c9 5c       	subi	r28, 0xC9	; 201
    2162:	d0 40       	sbci	r29, 0x00	; 0
    2164:	81 e0       	ldi	r24, 0x01	; 1
    2166:	cf 52       	subi	r28, 0x2F	; 47
    2168:	df 4f       	sbci	r29, 0xFF	; 255
    216a:	88 83       	st	Y, r24
    216c:	c1 5d       	subi	r28, 0xD1	; 209
    216e:	d0 40       	sbci	r29, 0x00	; 0
    2170:	c7 53       	subi	r28, 0x37	; 55
    2172:	df 4f       	sbci	r29, 0xFF	; 255
    2174:	98 81       	ld	r25, Y
    2176:	c9 5c       	subi	r28, 0xC9	; 201
    2178:	d0 40       	sbci	r29, 0x00	; 0
    217a:	c1 57       	subi	r28, 0x71	; 113
    217c:	df 4f       	sbci	r29, 0xFF	; 255
    217e:	e8 81       	ld	r30, Y
    2180:	cf 58       	subi	r28, 0x8F	; 143
    2182:	d0 40       	sbci	r29, 0x00	; 0
    2184:	9e 17       	cp	r25, r30
    2186:	28 f0       	brcs	.+10     	; 0x2192 <main+0xcbc>
    2188:	cf 52       	subi	r28, 0x2F	; 47
    218a:	df 4f       	sbci	r29, 0xFF	; 255
    218c:	18 82       	st	Y, r1
    218e:	c1 5d       	subi	r28, 0xD1	; 209
    2190:	d0 40       	sbci	r29, 0x00	; 0
    2192:	c0 53       	subi	r28, 0x30	; 48
    2194:	df 4f       	sbci	r29, 0xFF	; 255
    2196:	f8 81       	ld	r31, Y
    2198:	c0 5d       	subi	r28, 0xD0	; 208
    219a:	d0 40       	sbci	r29, 0x00	; 0
    219c:	c7 53       	subi	r28, 0x37	; 55
    219e:	df 4f       	sbci	r29, 0xFF	; 255
    21a0:	08 81       	ld	r16, Y
    21a2:	c9 5c       	subi	r28, 0xC9	; 201
    21a4:	d0 40       	sbci	r29, 0x00	; 0
    21a6:	f0 0f       	add	r31, r16
    21a8:	ce 52       	subi	r28, 0x2E	; 46
    21aa:	df 4f       	sbci	r29, 0xFF	; 255
    21ac:	f8 83       	st	Y, r31
    21ae:	c2 5d       	subi	r28, 0xD2	; 210
    21b0:	d0 40       	sbci	r29, 0x00	; 0
    21b2:	11 e0       	ldi	r17, 0x01	; 1
    21b4:	cd 52       	subi	r28, 0x2D	; 45
    21b6:	df 4f       	sbci	r29, 0xFF	; 255
    21b8:	18 83       	st	Y, r17
    21ba:	c3 5d       	subi	r28, 0xD3	; 211
    21bc:	d0 40       	sbci	r29, 0x00	; 0
    21be:	ce 52       	subi	r28, 0x2E	; 46
    21c0:	df 4f       	sbci	r29, 0xFF	; 255
    21c2:	28 81       	ld	r18, Y
    21c4:	c2 5d       	subi	r28, 0xD2	; 210
    21c6:	d0 40       	sbci	r29, 0x00	; 0
    21c8:	c7 53       	subi	r28, 0x37	; 55
    21ca:	df 4f       	sbci	r29, 0xFF	; 255
    21cc:	38 81       	ld	r19, Y
    21ce:	c9 5c       	subi	r28, 0xC9	; 201
    21d0:	d0 40       	sbci	r29, 0x00	; 0
    21d2:	23 17       	cp	r18, r19
    21d4:	28 f0       	brcs	.+10     	; 0x21e0 <main+0xd0a>
    21d6:	cd 52       	subi	r28, 0x2D	; 45
    21d8:	df 4f       	sbci	r29, 0xFF	; 255
    21da:	18 82       	st	Y, r1
    21dc:	c3 5d       	subi	r28, 0xD3	; 211
    21de:	d0 40       	sbci	r29, 0x00	; 0
    21e0:	cf 52       	subi	r28, 0x2F	; 47
    21e2:	df 4f       	sbci	r29, 0xFF	; 255
    21e4:	48 81       	ld	r20, Y
    21e6:	c1 5d       	subi	r28, 0xD1	; 209
    21e8:	d0 40       	sbci	r29, 0x00	; 0
    21ea:	cd 52       	subi	r28, 0x2D	; 45
    21ec:	df 4f       	sbci	r29, 0xFF	; 255
    21ee:	58 81       	ld	r21, Y
    21f0:	c3 5d       	subi	r28, 0xD3	; 211
    21f2:	d0 40       	sbci	r29, 0x00	; 0
    21f4:	45 2b       	or	r20, r21
    21f6:	cf 52       	subi	r28, 0x2F	; 47
    21f8:	df 4f       	sbci	r29, 0xFF	; 255
    21fa:	48 83       	st	Y, r20
    21fc:	c1 5d       	subi	r28, 0xD1	; 209
    21fe:	d0 40       	sbci	r29, 0x00	; 0
    2200:	ce 52       	subi	r28, 0x2E	; 46
    2202:	df 4f       	sbci	r29, 0xFF	; 255
    2204:	68 81       	ld	r22, Y
    2206:	c2 5d       	subi	r28, 0xD2	; 210
    2208:	d0 40       	sbci	r29, 0x00	; 0
    220a:	c7 53       	subi	r28, 0x37	; 55
    220c:	df 4f       	sbci	r29, 0xFF	; 255
    220e:	68 83       	st	Y, r22
    2210:	c9 5c       	subi	r28, 0xC9	; 201
    2212:	d0 40       	sbci	r29, 0x00	; 0
    2214:	c0 57       	subi	r28, 0x70	; 112
    2216:	df 4f       	sbci	r29, 0xFF	; 255
    2218:	78 81       	ld	r23, Y
    221a:	c0 59       	subi	r28, 0x90	; 144
    221c:	d0 40       	sbci	r29, 0x00	; 0
    221e:	c8 57       	subi	r28, 0x78	; 120
    2220:	df 4f       	sbci	r29, 0xFF	; 255
    2222:	88 81       	ld	r24, Y
    2224:	c8 58       	subi	r28, 0x88	; 136
    2226:	d0 40       	sbci	r29, 0x00	; 0
    2228:	78 0f       	add	r23, r24
    222a:	c6 53       	subi	r28, 0x36	; 54
    222c:	df 4f       	sbci	r29, 0xFF	; 255
    222e:	78 83       	st	Y, r23
    2230:	ca 5c       	subi	r28, 0xCA	; 202
    2232:	d0 40       	sbci	r29, 0x00	; 0
    2234:	91 e0       	ldi	r25, 0x01	; 1
    2236:	cc 52       	subi	r28, 0x2C	; 44
    2238:	df 4f       	sbci	r29, 0xFF	; 255
    223a:	98 83       	st	Y, r25
    223c:	c4 5d       	subi	r28, 0xD4	; 212
    223e:	d0 40       	sbci	r29, 0x00	; 0
    2240:	c6 53       	subi	r28, 0x36	; 54
    2242:	df 4f       	sbci	r29, 0xFF	; 255
    2244:	e8 81       	ld	r30, Y
    2246:	ca 5c       	subi	r28, 0xCA	; 202
    2248:	d0 40       	sbci	r29, 0x00	; 0
    224a:	c0 57       	subi	r28, 0x70	; 112
    224c:	df 4f       	sbci	r29, 0xFF	; 255
    224e:	f8 81       	ld	r31, Y
    2250:	c0 59       	subi	r28, 0x90	; 144
    2252:	d0 40       	sbci	r29, 0x00	; 0
    2254:	ef 17       	cp	r30, r31
    2256:	28 f0       	brcs	.+10     	; 0x2262 <main+0xd8c>
    2258:	cc 52       	subi	r28, 0x2C	; 44
    225a:	df 4f       	sbci	r29, 0xFF	; 255
    225c:	18 82       	st	Y, r1
    225e:	c4 5d       	subi	r28, 0xD4	; 212
    2260:	d0 40       	sbci	r29, 0x00	; 0
    2262:	cf 52       	subi	r28, 0x2F	; 47
    2264:	df 4f       	sbci	r29, 0xFF	; 255
    2266:	08 81       	ld	r16, Y
    2268:	c1 5d       	subi	r28, 0xD1	; 209
    226a:	d0 40       	sbci	r29, 0x00	; 0
    226c:	c6 53       	subi	r28, 0x36	; 54
    226e:	df 4f       	sbci	r29, 0xFF	; 255
    2270:	18 81       	ld	r17, Y
    2272:	ca 5c       	subi	r28, 0xCA	; 202
    2274:	d0 40       	sbci	r29, 0x00	; 0
    2276:	01 0f       	add	r16, r17
    2278:	cb 52       	subi	r28, 0x2B	; 43
    227a:	df 4f       	sbci	r29, 0xFF	; 255
    227c:	08 83       	st	Y, r16
    227e:	c5 5d       	subi	r28, 0xD5	; 213
    2280:	d0 40       	sbci	r29, 0x00	; 0
    2282:	21 e0       	ldi	r18, 0x01	; 1
    2284:	ca 52       	subi	r28, 0x2A	; 42
    2286:	df 4f       	sbci	r29, 0xFF	; 255
    2288:	28 83       	st	Y, r18
    228a:	c6 5d       	subi	r28, 0xD6	; 214
    228c:	d0 40       	sbci	r29, 0x00	; 0
    228e:	cb 52       	subi	r28, 0x2B	; 43
    2290:	df 4f       	sbci	r29, 0xFF	; 255
    2292:	38 81       	ld	r19, Y
    2294:	c5 5d       	subi	r28, 0xD5	; 213
    2296:	d0 40       	sbci	r29, 0x00	; 0
    2298:	c6 53       	subi	r28, 0x36	; 54
    229a:	df 4f       	sbci	r29, 0xFF	; 255
    229c:	48 81       	ld	r20, Y
    229e:	ca 5c       	subi	r28, 0xCA	; 202
    22a0:	d0 40       	sbci	r29, 0x00	; 0
    22a2:	34 17       	cp	r19, r20
    22a4:	28 f0       	brcs	.+10     	; 0x22b0 <main+0xdda>
    22a6:	ca 52       	subi	r28, 0x2A	; 42
    22a8:	df 4f       	sbci	r29, 0xFF	; 255
    22aa:	18 82       	st	Y, r1
    22ac:	c6 5d       	subi	r28, 0xD6	; 214
    22ae:	d0 40       	sbci	r29, 0x00	; 0
    22b0:	cc 52       	subi	r28, 0x2C	; 44
    22b2:	df 4f       	sbci	r29, 0xFF	; 255
    22b4:	58 81       	ld	r21, Y
    22b6:	c4 5d       	subi	r28, 0xD4	; 212
    22b8:	d0 40       	sbci	r29, 0x00	; 0
    22ba:	ca 52       	subi	r28, 0x2A	; 42
    22bc:	df 4f       	sbci	r29, 0xFF	; 255
    22be:	68 81       	ld	r22, Y
    22c0:	c6 5d       	subi	r28, 0xD6	; 214
    22c2:	d0 40       	sbci	r29, 0x00	; 0
    22c4:	56 2b       	or	r21, r22
    22c6:	cc 52       	subi	r28, 0x2C	; 44
    22c8:	df 4f       	sbci	r29, 0xFF	; 255
    22ca:	58 83       	st	Y, r21
    22cc:	c4 5d       	subi	r28, 0xD4	; 212
    22ce:	d0 40       	sbci	r29, 0x00	; 0
    22d0:	cb 52       	subi	r28, 0x2B	; 43
    22d2:	df 4f       	sbci	r29, 0xFF	; 255
    22d4:	78 81       	ld	r23, Y
    22d6:	c5 5d       	subi	r28, 0xD5	; 213
    22d8:	d0 40       	sbci	r29, 0x00	; 0
    22da:	c6 53       	subi	r28, 0x36	; 54
    22dc:	df 4f       	sbci	r29, 0xFF	; 255
    22de:	78 83       	st	Y, r23
    22e0:	ca 5c       	subi	r28, 0xCA	; 202
    22e2:	d0 40       	sbci	r29, 0x00	; 0
    22e4:	cf 56       	subi	r28, 0x6F	; 111
    22e6:	df 4f       	sbci	r29, 0xFF	; 255
    22e8:	88 81       	ld	r24, Y
    22ea:	c1 59       	subi	r28, 0x91	; 145
    22ec:	d0 40       	sbci	r29, 0x00	; 0
    22ee:	c7 57       	subi	r28, 0x77	; 119
    22f0:	df 4f       	sbci	r29, 0xFF	; 255
    22f2:	98 81       	ld	r25, Y
    22f4:	c9 58       	subi	r28, 0x89	; 137
    22f6:	d0 40       	sbci	r29, 0x00	; 0
    22f8:	89 0f       	add	r24, r25
    22fa:	c5 53       	subi	r28, 0x35	; 53
    22fc:	df 4f       	sbci	r29, 0xFF	; 255
    22fe:	88 83       	st	Y, r24
    2300:	cb 5c       	subi	r28, 0xCB	; 203
    2302:	d0 40       	sbci	r29, 0x00	; 0
    2304:	e1 e0       	ldi	r30, 0x01	; 1
    2306:	c9 52       	subi	r28, 0x29	; 41
    2308:	df 4f       	sbci	r29, 0xFF	; 255
    230a:	e8 83       	st	Y, r30
    230c:	c7 5d       	subi	r28, 0xD7	; 215
    230e:	d0 40       	sbci	r29, 0x00	; 0
    2310:	c5 53       	subi	r28, 0x35	; 53
    2312:	df 4f       	sbci	r29, 0xFF	; 255
    2314:	f8 81       	ld	r31, Y
    2316:	cb 5c       	subi	r28, 0xCB	; 203
    2318:	d0 40       	sbci	r29, 0x00	; 0
    231a:	cf 56       	subi	r28, 0x6F	; 111
    231c:	df 4f       	sbci	r29, 0xFF	; 255
    231e:	08 81       	ld	r16, Y
    2320:	c1 59       	subi	r28, 0x91	; 145
    2322:	d0 40       	sbci	r29, 0x00	; 0
    2324:	f0 17       	cp	r31, r16
    2326:	28 f0       	brcs	.+10     	; 0x2332 <main+0xe5c>
    2328:	c9 52       	subi	r28, 0x29	; 41
    232a:	df 4f       	sbci	r29, 0xFF	; 255
    232c:	18 82       	st	Y, r1
    232e:	c7 5d       	subi	r28, 0xD7	; 215
    2330:	d0 40       	sbci	r29, 0x00	; 0
    2332:	cc 52       	subi	r28, 0x2C	; 44
    2334:	df 4f       	sbci	r29, 0xFF	; 255
    2336:	18 81       	ld	r17, Y
    2338:	c4 5d       	subi	r28, 0xD4	; 212
    233a:	d0 40       	sbci	r29, 0x00	; 0
    233c:	c5 53       	subi	r28, 0x35	; 53
    233e:	df 4f       	sbci	r29, 0xFF	; 255
    2340:	28 81       	ld	r18, Y
    2342:	cb 5c       	subi	r28, 0xCB	; 203
    2344:	d0 40       	sbci	r29, 0x00	; 0
    2346:	12 0f       	add	r17, r18
    2348:	c8 52       	subi	r28, 0x28	; 40
    234a:	df 4f       	sbci	r29, 0xFF	; 255
    234c:	18 83       	st	Y, r17
    234e:	c8 5d       	subi	r28, 0xD8	; 216
    2350:	d0 40       	sbci	r29, 0x00	; 0
    2352:	31 e0       	ldi	r19, 0x01	; 1
    2354:	c7 52       	subi	r28, 0x27	; 39
    2356:	df 4f       	sbci	r29, 0xFF	; 255
    2358:	38 83       	st	Y, r19
    235a:	c9 5d       	subi	r28, 0xD9	; 217
    235c:	d0 40       	sbci	r29, 0x00	; 0
    235e:	c8 52       	subi	r28, 0x28	; 40
    2360:	df 4f       	sbci	r29, 0xFF	; 255
    2362:	48 81       	ld	r20, Y
    2364:	c8 5d       	subi	r28, 0xD8	; 216
    2366:	d0 40       	sbci	r29, 0x00	; 0
    2368:	c5 53       	subi	r28, 0x35	; 53
    236a:	df 4f       	sbci	r29, 0xFF	; 255
    236c:	58 81       	ld	r21, Y
    236e:	cb 5c       	subi	r28, 0xCB	; 203
    2370:	d0 40       	sbci	r29, 0x00	; 0
    2372:	45 17       	cp	r20, r21
    2374:	28 f0       	brcs	.+10     	; 0x2380 <main+0xeaa>
    2376:	c7 52       	subi	r28, 0x27	; 39
    2378:	df 4f       	sbci	r29, 0xFF	; 255
    237a:	18 82       	st	Y, r1
    237c:	c9 5d       	subi	r28, 0xD9	; 217
    237e:	d0 40       	sbci	r29, 0x00	; 0
    2380:	c9 52       	subi	r28, 0x29	; 41
    2382:	df 4f       	sbci	r29, 0xFF	; 255
    2384:	68 81       	ld	r22, Y
    2386:	c7 5d       	subi	r28, 0xD7	; 215
    2388:	d0 40       	sbci	r29, 0x00	; 0
    238a:	c7 52       	subi	r28, 0x27	; 39
    238c:	df 4f       	sbci	r29, 0xFF	; 255
    238e:	78 81       	ld	r23, Y
    2390:	c9 5d       	subi	r28, 0xD9	; 217
    2392:	d0 40       	sbci	r29, 0x00	; 0
    2394:	67 2b       	or	r22, r23
    2396:	c9 52       	subi	r28, 0x29	; 41
    2398:	df 4f       	sbci	r29, 0xFF	; 255
    239a:	68 83       	st	Y, r22
    239c:	c7 5d       	subi	r28, 0xD7	; 215
    239e:	d0 40       	sbci	r29, 0x00	; 0
    23a0:	c8 52       	subi	r28, 0x28	; 40
    23a2:	df 4f       	sbci	r29, 0xFF	; 255
    23a4:	88 81       	ld	r24, Y
    23a6:	c8 5d       	subi	r28, 0xD8	; 216
    23a8:	d0 40       	sbci	r29, 0x00	; 0
    23aa:	c5 53       	subi	r28, 0x35	; 53
    23ac:	df 4f       	sbci	r29, 0xFF	; 255
    23ae:	88 83       	st	Y, r24
    23b0:	cb 5c       	subi	r28, 0xCB	; 203
    23b2:	d0 40       	sbci	r29, 0x00	; 0
    23b4:	ce 56       	subi	r28, 0x6E	; 110
    23b6:	df 4f       	sbci	r29, 0xFF	; 255
    23b8:	98 81       	ld	r25, Y
    23ba:	c2 59       	subi	r28, 0x92	; 146
    23bc:	d0 40       	sbci	r29, 0x00	; 0
    23be:	c6 57       	subi	r28, 0x76	; 118
    23c0:	df 4f       	sbci	r29, 0xFF	; 255
    23c2:	e8 81       	ld	r30, Y
    23c4:	ca 58       	subi	r28, 0x8A	; 138
    23c6:	d0 40       	sbci	r29, 0x00	; 0
    23c8:	9e 0f       	add	r25, r30
    23ca:	c4 53       	subi	r28, 0x34	; 52
    23cc:	df 4f       	sbci	r29, 0xFF	; 255
    23ce:	98 83       	st	Y, r25
    23d0:	cc 5c       	subi	r28, 0xCC	; 204
    23d2:	d0 40       	sbci	r29, 0x00	; 0
    23d4:	f1 e0       	ldi	r31, 0x01	; 1
    23d6:	c6 52       	subi	r28, 0x26	; 38
    23d8:	df 4f       	sbci	r29, 0xFF	; 255
    23da:	f8 83       	st	Y, r31
    23dc:	ca 5d       	subi	r28, 0xDA	; 218
    23de:	d0 40       	sbci	r29, 0x00	; 0
    23e0:	c4 53       	subi	r28, 0x34	; 52
    23e2:	df 4f       	sbci	r29, 0xFF	; 255
    23e4:	08 81       	ld	r16, Y
    23e6:	cc 5c       	subi	r28, 0xCC	; 204
    23e8:	d0 40       	sbci	r29, 0x00	; 0
    23ea:	ce 56       	subi	r28, 0x6E	; 110
    23ec:	df 4f       	sbci	r29, 0xFF	; 255
    23ee:	18 81       	ld	r17, Y
    23f0:	c2 59       	subi	r28, 0x92	; 146
    23f2:	d0 40       	sbci	r29, 0x00	; 0
    23f4:	01 17       	cp	r16, r17
    23f6:	28 f0       	brcs	.+10     	; 0x2402 <main+0xf2c>
    23f8:	c6 52       	subi	r28, 0x26	; 38
    23fa:	df 4f       	sbci	r29, 0xFF	; 255
    23fc:	18 82       	st	Y, r1
    23fe:	ca 5d       	subi	r28, 0xDA	; 218
    2400:	d0 40       	sbci	r29, 0x00	; 0
    2402:	c9 52       	subi	r28, 0x29	; 41
    2404:	df 4f       	sbci	r29, 0xFF	; 255
    2406:	28 81       	ld	r18, Y
    2408:	c7 5d       	subi	r28, 0xD7	; 215
    240a:	d0 40       	sbci	r29, 0x00	; 0
    240c:	c4 53       	subi	r28, 0x34	; 52
    240e:	df 4f       	sbci	r29, 0xFF	; 255
    2410:	38 81       	ld	r19, Y
    2412:	cc 5c       	subi	r28, 0xCC	; 204
    2414:	d0 40       	sbci	r29, 0x00	; 0
    2416:	23 0f       	add	r18, r19
    2418:	c5 52       	subi	r28, 0x25	; 37
    241a:	df 4f       	sbci	r29, 0xFF	; 255
    241c:	28 83       	st	Y, r18
    241e:	cb 5d       	subi	r28, 0xDB	; 219
    2420:	d0 40       	sbci	r29, 0x00	; 0
    2422:	41 e0       	ldi	r20, 0x01	; 1
    2424:	c4 52       	subi	r28, 0x24	; 36
    2426:	df 4f       	sbci	r29, 0xFF	; 255
    2428:	48 83       	st	Y, r20
    242a:	cc 5d       	subi	r28, 0xDC	; 220
    242c:	d0 40       	sbci	r29, 0x00	; 0
    242e:	c5 52       	subi	r28, 0x25	; 37
    2430:	df 4f       	sbci	r29, 0xFF	; 255
    2432:	58 81       	ld	r21, Y
    2434:	cb 5d       	subi	r28, 0xDB	; 219
    2436:	d0 40       	sbci	r29, 0x00	; 0
    2438:	c4 53       	subi	r28, 0x34	; 52
    243a:	df 4f       	sbci	r29, 0xFF	; 255
    243c:	68 81       	ld	r22, Y
    243e:	cc 5c       	subi	r28, 0xCC	; 204
    2440:	d0 40       	sbci	r29, 0x00	; 0
    2442:	56 17       	cp	r21, r22
    2444:	28 f0       	brcs	.+10     	; 0x2450 <main+0xf7a>
    2446:	c4 52       	subi	r28, 0x24	; 36
    2448:	df 4f       	sbci	r29, 0xFF	; 255
    244a:	18 82       	st	Y, r1
    244c:	cc 5d       	subi	r28, 0xDC	; 220
    244e:	d0 40       	sbci	r29, 0x00	; 0
    2450:	c6 52       	subi	r28, 0x26	; 38
    2452:	df 4f       	sbci	r29, 0xFF	; 255
    2454:	78 81       	ld	r23, Y
    2456:	ca 5d       	subi	r28, 0xDA	; 218
    2458:	d0 40       	sbci	r29, 0x00	; 0
    245a:	c4 52       	subi	r28, 0x24	; 36
    245c:	df 4f       	sbci	r29, 0xFF	; 255
    245e:	88 81       	ld	r24, Y
    2460:	cc 5d       	subi	r28, 0xDC	; 220
    2462:	d0 40       	sbci	r29, 0x00	; 0
    2464:	78 2b       	or	r23, r24
    2466:	c6 52       	subi	r28, 0x26	; 38
    2468:	df 4f       	sbci	r29, 0xFF	; 255
    246a:	78 83       	st	Y, r23
    246c:	ca 5d       	subi	r28, 0xDA	; 218
    246e:	d0 40       	sbci	r29, 0x00	; 0
    2470:	c5 52       	subi	r28, 0x25	; 37
    2472:	df 4f       	sbci	r29, 0xFF	; 255
    2474:	98 81       	ld	r25, Y
    2476:	cb 5d       	subi	r28, 0xDB	; 219
    2478:	d0 40       	sbci	r29, 0x00	; 0
    247a:	c4 53       	subi	r28, 0x34	; 52
    247c:	df 4f       	sbci	r29, 0xFF	; 255
    247e:	98 83       	st	Y, r25
    2480:	cc 5c       	subi	r28, 0xCC	; 204
    2482:	d0 40       	sbci	r29, 0x00	; 0
    2484:	cd 56       	subi	r28, 0x6D	; 109
    2486:	df 4f       	sbci	r29, 0xFF	; 255
    2488:	e8 81       	ld	r30, Y
    248a:	c3 59       	subi	r28, 0x93	; 147
    248c:	d0 40       	sbci	r29, 0x00	; 0
    248e:	c5 57       	subi	r28, 0x75	; 117
    2490:	df 4f       	sbci	r29, 0xFF	; 255
    2492:	f8 81       	ld	r31, Y
    2494:	cb 58       	subi	r28, 0x8B	; 139
    2496:	d0 40       	sbci	r29, 0x00	; 0
    2498:	ef 0f       	add	r30, r31
    249a:	c3 53       	subi	r28, 0x33	; 51
    249c:	df 4f       	sbci	r29, 0xFF	; 255
    249e:	e8 83       	st	Y, r30
    24a0:	cd 5c       	subi	r28, 0xCD	; 205
    24a2:	d0 40       	sbci	r29, 0x00	; 0
    24a4:	01 e0       	ldi	r16, 0x01	; 1
    24a6:	c3 52       	subi	r28, 0x23	; 35
    24a8:	df 4f       	sbci	r29, 0xFF	; 255
    24aa:	08 83       	st	Y, r16
    24ac:	cd 5d       	subi	r28, 0xDD	; 221
    24ae:	d0 40       	sbci	r29, 0x00	; 0
    24b0:	c3 53       	subi	r28, 0x33	; 51
    24b2:	df 4f       	sbci	r29, 0xFF	; 255
    24b4:	18 81       	ld	r17, Y
    24b6:	cd 5c       	subi	r28, 0xCD	; 205
    24b8:	d0 40       	sbci	r29, 0x00	; 0
    24ba:	cd 56       	subi	r28, 0x6D	; 109
    24bc:	df 4f       	sbci	r29, 0xFF	; 255
    24be:	28 81       	ld	r18, Y
    24c0:	c3 59       	subi	r28, 0x93	; 147
    24c2:	d0 40       	sbci	r29, 0x00	; 0
    24c4:	12 17       	cp	r17, r18
    24c6:	28 f0       	brcs	.+10     	; 0x24d2 <main+0xffc>
    24c8:	c3 52       	subi	r28, 0x23	; 35
    24ca:	df 4f       	sbci	r29, 0xFF	; 255
    24cc:	18 82       	st	Y, r1
    24ce:	cd 5d       	subi	r28, 0xDD	; 221
    24d0:	d0 40       	sbci	r29, 0x00	; 0
    24d2:	c6 52       	subi	r28, 0x26	; 38
    24d4:	df 4f       	sbci	r29, 0xFF	; 255
    24d6:	38 81       	ld	r19, Y
    24d8:	ca 5d       	subi	r28, 0xDA	; 218
    24da:	d0 40       	sbci	r29, 0x00	; 0
    24dc:	c3 53       	subi	r28, 0x33	; 51
    24de:	df 4f       	sbci	r29, 0xFF	; 255
    24e0:	48 81       	ld	r20, Y
    24e2:	cd 5c       	subi	r28, 0xCD	; 205
    24e4:	d0 40       	sbci	r29, 0x00	; 0
    24e6:	34 0f       	add	r19, r20
    24e8:	c2 52       	subi	r28, 0x22	; 34
    24ea:	df 4f       	sbci	r29, 0xFF	; 255
    24ec:	38 83       	st	Y, r19
    24ee:	ce 5d       	subi	r28, 0xDE	; 222
    24f0:	d0 40       	sbci	r29, 0x00	; 0
    24f2:	51 e0       	ldi	r21, 0x01	; 1
    24f4:	c1 52       	subi	r28, 0x21	; 33
    24f6:	df 4f       	sbci	r29, 0xFF	; 255
    24f8:	58 83       	st	Y, r21
    24fa:	cf 5d       	subi	r28, 0xDF	; 223
    24fc:	d0 40       	sbci	r29, 0x00	; 0
    24fe:	c2 52       	subi	r28, 0x22	; 34
    2500:	df 4f       	sbci	r29, 0xFF	; 255
    2502:	68 81       	ld	r22, Y
    2504:	ce 5d       	subi	r28, 0xDE	; 222
    2506:	d0 40       	sbci	r29, 0x00	; 0
    2508:	c3 53       	subi	r28, 0x33	; 51
    250a:	df 4f       	sbci	r29, 0xFF	; 255
    250c:	78 81       	ld	r23, Y
    250e:	cd 5c       	subi	r28, 0xCD	; 205
    2510:	d0 40       	sbci	r29, 0x00	; 0
    2512:	67 17       	cp	r22, r23
    2514:	28 f0       	brcs	.+10     	; 0x2520 <main+0x104a>
    2516:	c1 52       	subi	r28, 0x21	; 33
    2518:	df 4f       	sbci	r29, 0xFF	; 255
    251a:	18 82       	st	Y, r1
    251c:	cf 5d       	subi	r28, 0xDF	; 223
    251e:	d0 40       	sbci	r29, 0x00	; 0
    2520:	c3 52       	subi	r28, 0x23	; 35
    2522:	df 4f       	sbci	r29, 0xFF	; 255
    2524:	88 81       	ld	r24, Y
    2526:	cd 5d       	subi	r28, 0xDD	; 221
    2528:	d0 40       	sbci	r29, 0x00	; 0
    252a:	c1 52       	subi	r28, 0x21	; 33
    252c:	df 4f       	sbci	r29, 0xFF	; 255
    252e:	98 81       	ld	r25, Y
    2530:	cf 5d       	subi	r28, 0xDF	; 223
    2532:	d0 40       	sbci	r29, 0x00	; 0
    2534:	89 2b       	or	r24, r25
    2536:	c3 52       	subi	r28, 0x23	; 35
    2538:	df 4f       	sbci	r29, 0xFF	; 255
    253a:	88 83       	st	Y, r24
    253c:	cd 5d       	subi	r28, 0xDD	; 221
    253e:	d0 40       	sbci	r29, 0x00	; 0
    2540:	c2 52       	subi	r28, 0x22	; 34
    2542:	df 4f       	sbci	r29, 0xFF	; 255
    2544:	e8 81       	ld	r30, Y
    2546:	ce 5d       	subi	r28, 0xDE	; 222
    2548:	d0 40       	sbci	r29, 0x00	; 0
    254a:	c3 53       	subi	r28, 0x33	; 51
    254c:	df 4f       	sbci	r29, 0xFF	; 255
    254e:	e8 83       	st	Y, r30
    2550:	cd 5c       	subi	r28, 0xCD	; 205
    2552:	d0 40       	sbci	r29, 0x00	; 0
    2554:	cc 56       	subi	r28, 0x6C	; 108
    2556:	df 4f       	sbci	r29, 0xFF	; 255
    2558:	f8 81       	ld	r31, Y
    255a:	c4 59       	subi	r28, 0x94	; 148
    255c:	d0 40       	sbci	r29, 0x00	; 0
    255e:	c4 57       	subi	r28, 0x74	; 116
    2560:	df 4f       	sbci	r29, 0xFF	; 255
    2562:	08 81       	ld	r16, Y
    2564:	cc 58       	subi	r28, 0x8C	; 140
    2566:	d0 40       	sbci	r29, 0x00	; 0
    2568:	f0 0f       	add	r31, r16
    256a:	c2 53       	subi	r28, 0x32	; 50
    256c:	df 4f       	sbci	r29, 0xFF	; 255
    256e:	f8 83       	st	Y, r31
    2570:	ce 5c       	subi	r28, 0xCE	; 206
    2572:	d0 40       	sbci	r29, 0x00	; 0
    2574:	11 e0       	ldi	r17, 0x01	; 1
    2576:	c0 52       	subi	r28, 0x20	; 32
    2578:	df 4f       	sbci	r29, 0xFF	; 255
    257a:	18 83       	st	Y, r17
    257c:	c0 5e       	subi	r28, 0xE0	; 224
    257e:	d0 40       	sbci	r29, 0x00	; 0
    2580:	c2 53       	subi	r28, 0x32	; 50
    2582:	df 4f       	sbci	r29, 0xFF	; 255
    2584:	28 81       	ld	r18, Y
    2586:	ce 5c       	subi	r28, 0xCE	; 206
    2588:	d0 40       	sbci	r29, 0x00	; 0
    258a:	cc 56       	subi	r28, 0x6C	; 108
    258c:	df 4f       	sbci	r29, 0xFF	; 255
    258e:	38 81       	ld	r19, Y
    2590:	c4 59       	subi	r28, 0x94	; 148
    2592:	d0 40       	sbci	r29, 0x00	; 0
    2594:	23 17       	cp	r18, r19
    2596:	28 f0       	brcs	.+10     	; 0x25a2 <main+0x10cc>
    2598:	c0 52       	subi	r28, 0x20	; 32
    259a:	df 4f       	sbci	r29, 0xFF	; 255
    259c:	18 82       	st	Y, r1
    259e:	c0 5e       	subi	r28, 0xE0	; 224
    25a0:	d0 40       	sbci	r29, 0x00	; 0
    25a2:	c3 52       	subi	r28, 0x23	; 35
    25a4:	df 4f       	sbci	r29, 0xFF	; 255
    25a6:	48 81       	ld	r20, Y
    25a8:	cd 5d       	subi	r28, 0xDD	; 221
    25aa:	d0 40       	sbci	r29, 0x00	; 0
    25ac:	c2 53       	subi	r28, 0x32	; 50
    25ae:	df 4f       	sbci	r29, 0xFF	; 255
    25b0:	58 81       	ld	r21, Y
    25b2:	ce 5c       	subi	r28, 0xCE	; 206
    25b4:	d0 40       	sbci	r29, 0x00	; 0
    25b6:	45 0f       	add	r20, r21
    25b8:	cf 51       	subi	r28, 0x1F	; 31
    25ba:	df 4f       	sbci	r29, 0xFF	; 255
    25bc:	48 83       	st	Y, r20
    25be:	c1 5e       	subi	r28, 0xE1	; 225
    25c0:	d0 40       	sbci	r29, 0x00	; 0
    25c2:	61 e0       	ldi	r22, 0x01	; 1
    25c4:	ce 51       	subi	r28, 0x1E	; 30
    25c6:	df 4f       	sbci	r29, 0xFF	; 255
    25c8:	68 83       	st	Y, r22
    25ca:	c2 5e       	subi	r28, 0xE2	; 226
    25cc:	d0 40       	sbci	r29, 0x00	; 0
    25ce:	cf 51       	subi	r28, 0x1F	; 31
    25d0:	df 4f       	sbci	r29, 0xFF	; 255
    25d2:	78 81       	ld	r23, Y
    25d4:	c1 5e       	subi	r28, 0xE1	; 225
    25d6:	d0 40       	sbci	r29, 0x00	; 0
    25d8:	c2 53       	subi	r28, 0x32	; 50
    25da:	df 4f       	sbci	r29, 0xFF	; 255
    25dc:	88 81       	ld	r24, Y
    25de:	ce 5c       	subi	r28, 0xCE	; 206
    25e0:	d0 40       	sbci	r29, 0x00	; 0
    25e2:	78 17       	cp	r23, r24
    25e4:	28 f0       	brcs	.+10     	; 0x25f0 <main+0x111a>
    25e6:	ce 51       	subi	r28, 0x1E	; 30
    25e8:	df 4f       	sbci	r29, 0xFF	; 255
    25ea:	18 82       	st	Y, r1
    25ec:	c2 5e       	subi	r28, 0xE2	; 226
    25ee:	d0 40       	sbci	r29, 0x00	; 0
    25f0:	c0 52       	subi	r28, 0x20	; 32
    25f2:	df 4f       	sbci	r29, 0xFF	; 255
    25f4:	98 81       	ld	r25, Y
    25f6:	c0 5e       	subi	r28, 0xE0	; 224
    25f8:	d0 40       	sbci	r29, 0x00	; 0
    25fa:	ce 51       	subi	r28, 0x1E	; 30
    25fc:	df 4f       	sbci	r29, 0xFF	; 255
    25fe:	e8 81       	ld	r30, Y
    2600:	c2 5e       	subi	r28, 0xE2	; 226
    2602:	d0 40       	sbci	r29, 0x00	; 0
    2604:	9e 2b       	or	r25, r30
    2606:	c0 52       	subi	r28, 0x20	; 32
    2608:	df 4f       	sbci	r29, 0xFF	; 255
    260a:	98 83       	st	Y, r25
    260c:	c0 5e       	subi	r28, 0xE0	; 224
    260e:	d0 40       	sbci	r29, 0x00	; 0
    2610:	cf 51       	subi	r28, 0x1F	; 31
    2612:	df 4f       	sbci	r29, 0xFF	; 255
    2614:	f8 81       	ld	r31, Y
    2616:	c1 5e       	subi	r28, 0xE1	; 225
    2618:	d0 40       	sbci	r29, 0x00	; 0
    261a:	c2 53       	subi	r28, 0x32	; 50
    261c:	df 4f       	sbci	r29, 0xFF	; 255
    261e:	f8 83       	st	Y, r31
    2620:	ce 5c       	subi	r28, 0xCE	; 206
    2622:	d0 40       	sbci	r29, 0x00	; 0
    2624:	cb 56       	subi	r28, 0x6B	; 107
    2626:	df 4f       	sbci	r29, 0xFF	; 255
    2628:	08 81       	ld	r16, Y
    262a:	c5 59       	subi	r28, 0x95	; 149
    262c:	d0 40       	sbci	r29, 0x00	; 0
    262e:	c3 57       	subi	r28, 0x73	; 115
    2630:	df 4f       	sbci	r29, 0xFF	; 255
    2632:	18 81       	ld	r17, Y
    2634:	cd 58       	subi	r28, 0x8D	; 141
    2636:	d0 40       	sbci	r29, 0x00	; 0
    2638:	01 0f       	add	r16, r17
    263a:	c1 53       	subi	r28, 0x31	; 49
    263c:	df 4f       	sbci	r29, 0xFF	; 255
    263e:	08 83       	st	Y, r16
    2640:	cf 5c       	subi	r28, 0xCF	; 207
    2642:	d0 40       	sbci	r29, 0x00	; 0
    2644:	c0 52       	subi	r28, 0x20	; 32
    2646:	df 4f       	sbci	r29, 0xFF	; 255
    2648:	88 81       	ld	r24, Y
    264a:	c0 5e       	subi	r28, 0xE0	; 224
    264c:	d0 40       	sbci	r29, 0x00	; 0
    264e:	c1 53       	subi	r28, 0x31	; 49
    2650:	df 4f       	sbci	r29, 0xFF	; 255
    2652:	28 81       	ld	r18, Y
    2654:	cf 5c       	subi	r28, 0xCF	; 207
    2656:	d0 40       	sbci	r29, 0x00	; 0
    2658:	82 0f       	add	r24, r18
    265a:	c1 53       	subi	r28, 0x31	; 49
    265c:	df 4f       	sbci	r29, 0xFF	; 255
    265e:	88 83       	st	Y, r24
    2660:	cf 5c       	subi	r28, 0xCF	; 207
    2662:	d0 40       	sbci	r29, 0x00	; 0
    2664:	c8 53       	subi	r28, 0x38	; 56
    2666:	df 4f       	sbci	r29, 0xFF	; 255
    2668:	28 81       	ld	r18, Y
    266a:	c8 5c       	subi	r28, 0xC8	; 200
    266c:	d0 40       	sbci	r29, 0x00	; 0
    266e:	c7 53       	subi	r28, 0x37	; 55
    2670:	df 4f       	sbci	r29, 0xFF	; 255
    2672:	38 81       	ld	r19, Y
    2674:	c9 5c       	subi	r28, 0xC9	; 201
    2676:	d0 40       	sbci	r29, 0x00	; 0
    2678:	c6 53       	subi	r28, 0x36	; 54
    267a:	df 4f       	sbci	r29, 0xFF	; 255
    267c:	48 81       	ld	r20, Y
    267e:	ca 5c       	subi	r28, 0xCA	; 202
    2680:	d0 40       	sbci	r29, 0x00	; 0
    2682:	c5 53       	subi	r28, 0x35	; 53
    2684:	df 4f       	sbci	r29, 0xFF	; 255
    2686:	58 81       	ld	r21, Y
    2688:	cb 5c       	subi	r28, 0xCB	; 203
    268a:	d0 40       	sbci	r29, 0x00	; 0
    268c:	c4 53       	subi	r28, 0x34	; 52
    268e:	df 4f       	sbci	r29, 0xFF	; 255
    2690:	68 81       	ld	r22, Y
    2692:	cc 5c       	subi	r28, 0xCC	; 204
    2694:	d0 40       	sbci	r29, 0x00	; 0
    2696:	c3 53       	subi	r28, 0x33	; 51
    2698:	df 4f       	sbci	r29, 0xFF	; 255
    269a:	78 81       	ld	r23, Y
    269c:	cd 5c       	subi	r28, 0xCD	; 205
    269e:	d0 40       	sbci	r29, 0x00	; 0
    26a0:	c2 53       	subi	r28, 0x32	; 50
    26a2:	df 4f       	sbci	r29, 0xFF	; 255
    26a4:	88 81       	ld	r24, Y
    26a6:	ce 5c       	subi	r28, 0xCE	; 206
    26a8:	d0 40       	sbci	r29, 0x00	; 0
    26aa:	c1 53       	subi	r28, 0x31	; 49
    26ac:	df 4f       	sbci	r29, 0xFF	; 255
    26ae:	98 81       	ld	r25, Y
    26b0:	cf 5c       	subi	r28, 0xCF	; 207
    26b2:	d0 40       	sbci	r29, 0x00	; 0
    26b4:	de 01       	movw	r26, r28
    26b6:	ac 58       	subi	r26, 0x8C	; 140
    26b8:	bf 4f       	sbci	r27, 0xFF	; 255
    26ba:	ca 56       	subi	r28, 0x6A	; 106
    26bc:	df 4f       	sbci	r29, 0xFF	; 255
    26be:	e8 81       	ld	r30, Y
    26c0:	f9 81       	ldd	r31, Y+1	; 0x01
    26c2:	c6 59       	subi	r28, 0x96	; 150
    26c4:	d0 40       	sbci	r29, 0x00	; 0
    26c6:	ee 0f       	add	r30, r30
    26c8:	ff 1f       	adc	r31, r31
    26ca:	ee 0f       	add	r30, r30
    26cc:	ff 1f       	adc	r31, r31
    26ce:	ee 0f       	add	r30, r30
    26d0:	ff 1f       	adc	r31, r31
    26d2:	ea 0f       	add	r30, r26
    26d4:	fb 1f       	adc	r31, r27
    26d6:	20 83       	st	Z, r18
    26d8:	31 83       	std	Z+1, r19	; 0x01
    26da:	42 83       	std	Z+2, r20	; 0x02
    26dc:	53 83       	std	Z+3, r21	; 0x03
    26de:	64 83       	std	Z+4, r22	; 0x04
    26e0:	75 83       	std	Z+5, r23	; 0x05
    26e2:	86 83       	std	Z+6, r24	; 0x06
    26e4:	97 83       	std	Z+7, r25	; 0x07
    26e6:	6f c1       	rjmp	.+734    	; 0x29c6 <main+0x14f0>
		} else {
			if (temp != '=' && temp != 'C') {
    26e8:	fe 01       	movw	r30, r28
    26ea:	ef 58       	subi	r30, 0x8F	; 143
    26ec:	ff 4f       	sbci	r31, 0xFF	; 255
    26ee:	80 81       	ld	r24, Z
    26f0:	8d 33       	cpi	r24, 0x3D	; 61
    26f2:	09 f4       	brne	.+2      	; 0x26f6 <main+0x1220>
    26f4:	d2 c0       	rjmp	.+420    	; 0x289a <main+0x13c4>
    26f6:	fe 01       	movw	r30, r28
    26f8:	ef 58       	subi	r30, 0x8F	; 143
    26fa:	ff 4f       	sbci	r31, 0xFF	; 255
    26fc:	80 81       	ld	r24, Z
    26fe:	83 34       	cpi	r24, 0x43	; 67
    2700:	09 f4       	brne	.+2      	; 0x2704 <main+0x122e>
    2702:	cb c0       	rjmp	.+406    	; 0x289a <main+0x13c4>
				LCD_displayCharacter(temp);
    2704:	fe 01       	movw	r30, r28
    2706:	ef 58       	subi	r30, 0x8F	; 143
    2708:	ff 4f       	sbci	r31, 0xFF	; 255
    270a:	80 81       	ld	r24, Z
    270c:	0e 94 bc 21 	call	0x4378	; 0x4378 <LCD_displayCharacter>
    2710:	fe 01       	movw	r30, r28
    2712:	ef 5a       	subi	r30, 0xAF	; 175
    2714:	ff 4f       	sbci	r31, 0xFF	; 255
    2716:	80 e0       	ldi	r24, 0x00	; 0
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	a6 e9       	ldi	r26, 0x96	; 150
    271c:	b3 e4       	ldi	r27, 0x43	; 67
    271e:	80 83       	st	Z, r24
    2720:	91 83       	std	Z+1, r25	; 0x01
    2722:	a2 83       	std	Z+2, r26	; 0x02
    2724:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2726:	8e 01       	movw	r16, r28
    2728:	03 5b       	subi	r16, 0xB3	; 179
    272a:	1f 4f       	sbci	r17, 0xFF	; 255
    272c:	fe 01       	movw	r30, r28
    272e:	ef 5a       	subi	r30, 0xAF	; 175
    2730:	ff 4f       	sbci	r31, 0xFF	; 255
    2732:	60 81       	ld	r22, Z
    2734:	71 81       	ldd	r23, Z+1	; 0x01
    2736:	82 81       	ldd	r24, Z+2	; 0x02
    2738:	93 81       	ldd	r25, Z+3	; 0x03
    273a:	20 e0       	ldi	r18, 0x00	; 0
    273c:	30 e0       	ldi	r19, 0x00	; 0
    273e:	4a e7       	ldi	r20, 0x7A	; 122
    2740:	55 e4       	ldi	r21, 0x45	; 69
    2742:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2746:	dc 01       	movw	r26, r24
    2748:	cb 01       	movw	r24, r22
    274a:	f8 01       	movw	r30, r16
    274c:	80 83       	st	Z, r24
    274e:	91 83       	std	Z+1, r25	; 0x01
    2750:	a2 83       	std	Z+2, r26	; 0x02
    2752:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2754:	fe 01       	movw	r30, r28
    2756:	e3 5b       	subi	r30, 0xB3	; 179
    2758:	ff 4f       	sbci	r31, 0xFF	; 255
    275a:	60 81       	ld	r22, Z
    275c:	71 81       	ldd	r23, Z+1	; 0x01
    275e:	82 81       	ldd	r24, Z+2	; 0x02
    2760:	93 81       	ldd	r25, Z+3	; 0x03
    2762:	20 e0       	ldi	r18, 0x00	; 0
    2764:	30 e0       	ldi	r19, 0x00	; 0
    2766:	40 e8       	ldi	r20, 0x80	; 128
    2768:	5f e3       	ldi	r21, 0x3F	; 63
    276a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    276e:	88 23       	and	r24, r24
    2770:	44 f4       	brge	.+16     	; 0x2782 <main+0x12ac>
		__ticks = 1;
    2772:	fe 01       	movw	r30, r28
    2774:	e5 5b       	subi	r30, 0xB5	; 181
    2776:	ff 4f       	sbci	r31, 0xFF	; 255
    2778:	81 e0       	ldi	r24, 0x01	; 1
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	91 83       	std	Z+1, r25	; 0x01
    277e:	80 83       	st	Z, r24
    2780:	64 c0       	rjmp	.+200    	; 0x284a <main+0x1374>
	else if (__tmp > 65535)
    2782:	fe 01       	movw	r30, r28
    2784:	e3 5b       	subi	r30, 0xB3	; 179
    2786:	ff 4f       	sbci	r31, 0xFF	; 255
    2788:	60 81       	ld	r22, Z
    278a:	71 81       	ldd	r23, Z+1	; 0x01
    278c:	82 81       	ldd	r24, Z+2	; 0x02
    278e:	93 81       	ldd	r25, Z+3	; 0x03
    2790:	20 e0       	ldi	r18, 0x00	; 0
    2792:	3f ef       	ldi	r19, 0xFF	; 255
    2794:	4f e7       	ldi	r20, 0x7F	; 127
    2796:	57 e4       	ldi	r21, 0x47	; 71
    2798:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    279c:	18 16       	cp	r1, r24
    279e:	0c f0       	brlt	.+2      	; 0x27a2 <main+0x12cc>
    27a0:	43 c0       	rjmp	.+134    	; 0x2828 <main+0x1352>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27a2:	fe 01       	movw	r30, r28
    27a4:	ef 5a       	subi	r30, 0xAF	; 175
    27a6:	ff 4f       	sbci	r31, 0xFF	; 255
    27a8:	60 81       	ld	r22, Z
    27aa:	71 81       	ldd	r23, Z+1	; 0x01
    27ac:	82 81       	ldd	r24, Z+2	; 0x02
    27ae:	93 81       	ldd	r25, Z+3	; 0x03
    27b0:	20 e0       	ldi	r18, 0x00	; 0
    27b2:	30 e0       	ldi	r19, 0x00	; 0
    27b4:	40 e2       	ldi	r20, 0x20	; 32
    27b6:	51 e4       	ldi	r21, 0x41	; 65
    27b8:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    27bc:	dc 01       	movw	r26, r24
    27be:	cb 01       	movw	r24, r22
    27c0:	8e 01       	movw	r16, r28
    27c2:	05 5b       	subi	r16, 0xB5	; 181
    27c4:	1f 4f       	sbci	r17, 0xFF	; 255
    27c6:	bc 01       	movw	r22, r24
    27c8:	cd 01       	movw	r24, r26
    27ca:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    27ce:	dc 01       	movw	r26, r24
    27d0:	cb 01       	movw	r24, r22
    27d2:	f8 01       	movw	r30, r16
    27d4:	91 83       	std	Z+1, r25	; 0x01
    27d6:	80 83       	st	Z, r24
    27d8:	1f c0       	rjmp	.+62     	; 0x2818 <main+0x1342>
    27da:	fe 01       	movw	r30, r28
    27dc:	e7 5b       	subi	r30, 0xB7	; 183
    27de:	ff 4f       	sbci	r31, 0xFF	; 255
    27e0:	80 e9       	ldi	r24, 0x90	; 144
    27e2:	91 e0       	ldi	r25, 0x01	; 1
    27e4:	91 83       	std	Z+1, r25	; 0x01
    27e6:	80 83       	st	Z, r24
    27e8:	fe 01       	movw	r30, r28
    27ea:	e7 5b       	subi	r30, 0xB7	; 183
    27ec:	ff 4f       	sbci	r31, 0xFF	; 255
    27ee:	80 81       	ld	r24, Z
    27f0:	91 81       	ldd	r25, Z+1	; 0x01
    27f2:	01 97       	sbiw	r24, 0x01	; 1
    27f4:	f1 f7       	brne	.-4      	; 0x27f2 <main+0x131c>
    27f6:	fe 01       	movw	r30, r28
    27f8:	e7 5b       	subi	r30, 0xB7	; 183
    27fa:	ff 4f       	sbci	r31, 0xFF	; 255
    27fc:	91 83       	std	Z+1, r25	; 0x01
    27fe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2800:	de 01       	movw	r26, r28
    2802:	a5 5b       	subi	r26, 0xB5	; 181
    2804:	bf 4f       	sbci	r27, 0xFF	; 255
    2806:	fe 01       	movw	r30, r28
    2808:	e5 5b       	subi	r30, 0xB5	; 181
    280a:	ff 4f       	sbci	r31, 0xFF	; 255
    280c:	80 81       	ld	r24, Z
    280e:	91 81       	ldd	r25, Z+1	; 0x01
    2810:	01 97       	sbiw	r24, 0x01	; 1
    2812:	11 96       	adiw	r26, 0x01	; 1
    2814:	9c 93       	st	X, r25
    2816:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2818:	fe 01       	movw	r30, r28
    281a:	e5 5b       	subi	r30, 0xB5	; 181
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	80 81       	ld	r24, Z
    2820:	91 81       	ldd	r25, Z+1	; 0x01
    2822:	00 97       	sbiw	r24, 0x00	; 0
    2824:	d1 f6       	brne	.-76     	; 0x27da <main+0x1304>
    2826:	27 c0       	rjmp	.+78     	; 0x2876 <main+0x13a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2828:	8e 01       	movw	r16, r28
    282a:	05 5b       	subi	r16, 0xB5	; 181
    282c:	1f 4f       	sbci	r17, 0xFF	; 255
    282e:	fe 01       	movw	r30, r28
    2830:	e3 5b       	subi	r30, 0xB3	; 179
    2832:	ff 4f       	sbci	r31, 0xFF	; 255
    2834:	60 81       	ld	r22, Z
    2836:	71 81       	ldd	r23, Z+1	; 0x01
    2838:	82 81       	ldd	r24, Z+2	; 0x02
    283a:	93 81       	ldd	r25, Z+3	; 0x03
    283c:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2840:	dc 01       	movw	r26, r24
    2842:	cb 01       	movw	r24, r22
    2844:	f8 01       	movw	r30, r16
    2846:	91 83       	std	Z+1, r25	; 0x01
    2848:	80 83       	st	Z, r24
    284a:	de 01       	movw	r26, r28
    284c:	a9 5b       	subi	r26, 0xB9	; 185
    284e:	bf 4f       	sbci	r27, 0xFF	; 255
    2850:	fe 01       	movw	r30, r28
    2852:	e5 5b       	subi	r30, 0xB5	; 181
    2854:	ff 4f       	sbci	r31, 0xFF	; 255
    2856:	80 81       	ld	r24, Z
    2858:	91 81       	ldd	r25, Z+1	; 0x01
    285a:	8d 93       	st	X+, r24
    285c:	9c 93       	st	X, r25
    285e:	fe 01       	movw	r30, r28
    2860:	e9 5b       	subi	r30, 0xB9	; 185
    2862:	ff 4f       	sbci	r31, 0xFF	; 255
    2864:	80 81       	ld	r24, Z
    2866:	91 81       	ldd	r25, Z+1	; 0x01
    2868:	01 97       	sbiw	r24, 0x01	; 1
    286a:	f1 f7       	brne	.-4      	; 0x2868 <main+0x1392>
    286c:	fe 01       	movw	r30, r28
    286e:	e9 5b       	subi	r30, 0xB9	; 185
    2870:	ff 4f       	sbci	r31, 0xFF	; 255
    2872:	91 83       	std	Z+1, r25	; 0x01
    2874:	80 83       	st	Z, r24
				_delay_ms(300);
				operation = temp;
    2876:	de 01       	movw	r26, r28
    2878:	ae 58       	subi	r26, 0x8E	; 142
    287a:	bf 4f       	sbci	r27, 0xFF	; 255
    287c:	fe 01       	movw	r30, r28
    287e:	ef 58       	subi	r30, 0x8F	; 143
    2880:	ff 4f       	sbci	r31, 0xFF	; 255
    2882:	80 81       	ld	r24, Z
    2884:	8c 93       	st	X, r24
				counter++;
    2886:	de 01       	movw	r26, r28
    2888:	ad 58       	subi	r26, 0x8D	; 141
    288a:	bf 4f       	sbci	r27, 0xFF	; 255
    288c:	fe 01       	movw	r30, r28
    288e:	ed 58       	subi	r30, 0x8D	; 141
    2890:	ff 4f       	sbci	r31, 0xFF	; 255
    2892:	80 81       	ld	r24, Z
    2894:	8f 5f       	subi	r24, 0xFF	; 255
    2896:	8c 93       	st	X, r24
    2898:	96 c0       	rjmp	.+300    	; 0x29c6 <main+0x14f0>
			} else if (temp == '=') {
    289a:	fe 01       	movw	r30, r28
    289c:	ef 58       	subi	r30, 0x8F	; 143
    289e:	ff 4f       	sbci	r31, 0xFF	; 255
    28a0:	80 81       	ld	r24, Z
    28a2:	8d 33       	cpi	r24, 0x3D	; 61
    28a4:	09 f0       	breq	.+2      	; 0x28a8 <main+0x13d2>
    28a6:	8f c0       	rjmp	.+286    	; 0x29c6 <main+0x14f0>
				LCD_displayCharacter(temp);
    28a8:	fe 01       	movw	r30, r28
    28aa:	ef 58       	subi	r30, 0x8F	; 143
    28ac:	ff 4f       	sbci	r31, 0xFF	; 255
    28ae:	80 81       	ld	r24, Z
    28b0:	0e 94 bc 21 	call	0x4378	; 0x4378 <LCD_displayCharacter>
    28b4:	fe 01       	movw	r30, r28
    28b6:	ed 5b       	subi	r30, 0xBD	; 189
    28b8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ba:	80 e0       	ldi	r24, 0x00	; 0
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	a6 e9       	ldi	r26, 0x96	; 150
    28c0:	b3 e4       	ldi	r27, 0x43	; 67
    28c2:	80 83       	st	Z, r24
    28c4:	91 83       	std	Z+1, r25	; 0x01
    28c6:	a2 83       	std	Z+2, r26	; 0x02
    28c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28ca:	8e 01       	movw	r16, r28
    28cc:	01 5c       	subi	r16, 0xC1	; 193
    28ce:	1f 4f       	sbci	r17, 0xFF	; 255
    28d0:	fe 01       	movw	r30, r28
    28d2:	ed 5b       	subi	r30, 0xBD	; 189
    28d4:	ff 4f       	sbci	r31, 0xFF	; 255
    28d6:	60 81       	ld	r22, Z
    28d8:	71 81       	ldd	r23, Z+1	; 0x01
    28da:	82 81       	ldd	r24, Z+2	; 0x02
    28dc:	93 81       	ldd	r25, Z+3	; 0x03
    28de:	20 e0       	ldi	r18, 0x00	; 0
    28e0:	30 e0       	ldi	r19, 0x00	; 0
    28e2:	4a e7       	ldi	r20, 0x7A	; 122
    28e4:	55 e4       	ldi	r21, 0x45	; 69
    28e6:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    28ea:	dc 01       	movw	r26, r24
    28ec:	cb 01       	movw	r24, r22
    28ee:	f8 01       	movw	r30, r16
    28f0:	80 83       	st	Z, r24
    28f2:	91 83       	std	Z+1, r25	; 0x01
    28f4:	a2 83       	std	Z+2, r26	; 0x02
    28f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28f8:	fe 01       	movw	r30, r28
    28fa:	ff 96       	adiw	r30, 0x3f	; 63
    28fc:	60 81       	ld	r22, Z
    28fe:	71 81       	ldd	r23, Z+1	; 0x01
    2900:	82 81       	ldd	r24, Z+2	; 0x02
    2902:	93 81       	ldd	r25, Z+3	; 0x03
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	30 e0       	ldi	r19, 0x00	; 0
    2908:	40 e8       	ldi	r20, 0x80	; 128
    290a:	5f e3       	ldi	r21, 0x3F	; 63
    290c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    2910:	88 23       	and	r24, r24
    2912:	2c f4       	brge	.+10     	; 0x291e <main+0x1448>
		__ticks = 1;
    2914:	81 e0       	ldi	r24, 0x01	; 1
    2916:	90 e0       	ldi	r25, 0x00	; 0
    2918:	9e af       	std	Y+62, r25	; 0x3e
    291a:	8d af       	std	Y+61, r24	; 0x3d
    291c:	46 c0       	rjmp	.+140    	; 0x29aa <main+0x14d4>
	else if (__tmp > 65535)
    291e:	fe 01       	movw	r30, r28
    2920:	ff 96       	adiw	r30, 0x3f	; 63
    2922:	60 81       	ld	r22, Z
    2924:	71 81       	ldd	r23, Z+1	; 0x01
    2926:	82 81       	ldd	r24, Z+2	; 0x02
    2928:	93 81       	ldd	r25, Z+3	; 0x03
    292a:	20 e0       	ldi	r18, 0x00	; 0
    292c:	3f ef       	ldi	r19, 0xFF	; 255
    292e:	4f e7       	ldi	r20, 0x7F	; 127
    2930:	57 e4       	ldi	r21, 0x47	; 71
    2932:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    2936:	18 16       	cp	r1, r24
    2938:	64 f5       	brge	.+88     	; 0x2992 <main+0x14bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    293a:	fe 01       	movw	r30, r28
    293c:	ed 5b       	subi	r30, 0xBD	; 189
    293e:	ff 4f       	sbci	r31, 0xFF	; 255
    2940:	60 81       	ld	r22, Z
    2942:	71 81       	ldd	r23, Z+1	; 0x01
    2944:	82 81       	ldd	r24, Z+2	; 0x02
    2946:	93 81       	ldd	r25, Z+3	; 0x03
    2948:	20 e0       	ldi	r18, 0x00	; 0
    294a:	30 e0       	ldi	r19, 0x00	; 0
    294c:	40 e2       	ldi	r20, 0x20	; 32
    294e:	51 e4       	ldi	r21, 0x41	; 65
    2950:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2954:	dc 01       	movw	r26, r24
    2956:	cb 01       	movw	r24, r22
    2958:	bc 01       	movw	r22, r24
    295a:	cd 01       	movw	r24, r26
    295c:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2960:	dc 01       	movw	r26, r24
    2962:	cb 01       	movw	r24, r22
    2964:	9e af       	std	Y+62, r25	; 0x3e
    2966:	8d af       	std	Y+61, r24	; 0x3d
    2968:	0f c0       	rjmp	.+30     	; 0x2988 <main+0x14b2>
    296a:	80 e9       	ldi	r24, 0x90	; 144
    296c:	91 e0       	ldi	r25, 0x01	; 1
    296e:	9c af       	std	Y+60, r25	; 0x3c
    2970:	8b af       	std	Y+59, r24	; 0x3b
    2972:	8b ad       	ldd	r24, Y+59	; 0x3b
    2974:	9c ad       	ldd	r25, Y+60	; 0x3c
    2976:	01 97       	sbiw	r24, 0x01	; 1
    2978:	f1 f7       	brne	.-4      	; 0x2976 <main+0x14a0>
    297a:	9c af       	std	Y+60, r25	; 0x3c
    297c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    297e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2980:	9e ad       	ldd	r25, Y+62	; 0x3e
    2982:	01 97       	sbiw	r24, 0x01	; 1
    2984:	9e af       	std	Y+62, r25	; 0x3e
    2986:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2988:	8d ad       	ldd	r24, Y+61	; 0x3d
    298a:	9e ad       	ldd	r25, Y+62	; 0x3e
    298c:	00 97       	sbiw	r24, 0x00	; 0
    298e:	69 f7       	brne	.-38     	; 0x296a <main+0x1494>
    2990:	16 c0       	rjmp	.+44     	; 0x29be <main+0x14e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2992:	fe 01       	movw	r30, r28
    2994:	ff 96       	adiw	r30, 0x3f	; 63
    2996:	60 81       	ld	r22, Z
    2998:	71 81       	ldd	r23, Z+1	; 0x01
    299a:	82 81       	ldd	r24, Z+2	; 0x02
    299c:	93 81       	ldd	r25, Z+3	; 0x03
    299e:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    29a2:	dc 01       	movw	r26, r24
    29a4:	cb 01       	movw	r24, r22
    29a6:	9e af       	std	Y+62, r25	; 0x3e
    29a8:	8d af       	std	Y+61, r24	; 0x3d
    29aa:	8d ad       	ldd	r24, Y+61	; 0x3d
    29ac:	9e ad       	ldd	r25, Y+62	; 0x3e
    29ae:	9a af       	std	Y+58, r25	; 0x3a
    29b0:	89 af       	std	Y+57, r24	; 0x39
    29b2:	89 ad       	ldd	r24, Y+57	; 0x39
    29b4:	9a ad       	ldd	r25, Y+58	; 0x3a
    29b6:	01 97       	sbiw	r24, 0x01	; 1
    29b8:	f1 f7       	brne	.-4      	; 0x29b6 <main+0x14e0>
    29ba:	9a af       	std	Y+58, r25	; 0x3a
    29bc:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(300);
				counter = 0;
    29be:	fe 01       	movw	r30, r28
    29c0:	ed 58       	subi	r30, 0x8D	; 141
    29c2:	ff 4f       	sbci	r31, 0xFF	; 255
    29c4:	10 82       	st	Z, r1
			}
		}
		if (temp == '=') {
    29c6:	fe 01       	movw	r30, r28
    29c8:	ef 58       	subi	r30, 0x8F	; 143
    29ca:	ff 4f       	sbci	r31, 0xFF	; 255
    29cc:	80 81       	ld	r24, Z
    29ce:	8d 33       	cpi	r24, 0x3D	; 61
    29d0:	11 f0       	breq	.+4      	; 0x29d6 <main+0x1500>
    29d2:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
			LCD_moveCursor(1, 0);
    29d6:	81 e0       	ldi	r24, 0x01	; 1
    29d8:	60 e0       	ldi	r22, 0x00	; 0
    29da:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <LCD_moveCursor>
			switch (operation) {
    29de:	fe 01       	movw	r30, r28
    29e0:	ee 58       	subi	r30, 0x8E	; 142
    29e2:	ff 4f       	sbci	r31, 0xFF	; 255
    29e4:	80 81       	ld	r24, Z
    29e6:	08 2f       	mov	r16, r24
    29e8:	10 e0       	ldi	r17, 0x00	; 0
    29ea:	cc 57       	subi	r28, 0x7C	; 124
    29ec:	df 4f       	sbci	r29, 0xFF	; 255
    29ee:	19 83       	std	Y+1, r17	; 0x01
    29f0:	08 83       	st	Y, r16
    29f2:	c4 58       	subi	r28, 0x84	; 132
    29f4:	d0 40       	sbci	r29, 0x00	; 0
    29f6:	cc 57       	subi	r28, 0x7C	; 124
    29f8:	df 4f       	sbci	r29, 0xFF	; 255
    29fa:	28 81       	ld	r18, Y
    29fc:	39 81       	ldd	r19, Y+1	; 0x01
    29fe:	c4 58       	subi	r28, 0x84	; 132
    2a00:	d0 40       	sbci	r29, 0x00	; 0
    2a02:	2a 32       	cpi	r18, 0x2A	; 42
    2a04:	31 05       	cpc	r19, r1
    2a06:	09 f4       	brne	.+2      	; 0x2a0a <main+0x1534>
    2a08:	4e c1       	rjmp	.+668    	; 0x2ca6 <main+0x17d0>
    2a0a:	cc 57       	subi	r28, 0x7C	; 124
    2a0c:	df 4f       	sbci	r29, 0xFF	; 255
    2a0e:	48 81       	ld	r20, Y
    2a10:	59 81       	ldd	r21, Y+1	; 0x01
    2a12:	c4 58       	subi	r28, 0x84	; 132
    2a14:	d0 40       	sbci	r29, 0x00	; 0
    2a16:	4b 32       	cpi	r20, 0x2B	; 43
    2a18:	51 05       	cpc	r21, r1
    2a1a:	64 f4       	brge	.+24     	; 0x2a34 <main+0x155e>
    2a1c:	cc 57       	subi	r28, 0x7C	; 124
    2a1e:	df 4f       	sbci	r29, 0xFF	; 255
    2a20:	68 81       	ld	r22, Y
    2a22:	79 81       	ldd	r23, Y+1	; 0x01
    2a24:	c4 58       	subi	r28, 0x84	; 132
    2a26:	d0 40       	sbci	r29, 0x00	; 0
    2a28:	65 32       	cpi	r22, 0x25	; 37
    2a2a:	71 05       	cpc	r23, r1
    2a2c:	09 f4       	brne	.+2      	; 0x2a30 <main+0x155a>
    2a2e:	f8 c1       	rjmp	.+1008   	; 0x2e20 <main+0x194a>
    2a30:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
    2a34:	cc 57       	subi	r28, 0x7C	; 124
    2a36:	df 4f       	sbci	r29, 0xFF	; 255
    2a38:	88 81       	ld	r24, Y
    2a3a:	99 81       	ldd	r25, Y+1	; 0x01
    2a3c:	c4 58       	subi	r28, 0x84	; 132
    2a3e:	d0 40       	sbci	r29, 0x00	; 0
    2a40:	8b 32       	cpi	r24, 0x2B	; 43
    2a42:	91 05       	cpc	r25, r1
    2a44:	61 f0       	breq	.+24     	; 0x2a5e <main+0x1588>
    2a46:	cc 57       	subi	r28, 0x7C	; 124
    2a48:	df 4f       	sbci	r29, 0xFF	; 255
    2a4a:	e8 81       	ld	r30, Y
    2a4c:	f9 81       	ldd	r31, Y+1	; 0x01
    2a4e:	c4 58       	subi	r28, 0x84	; 132
    2a50:	d0 40       	sbci	r29, 0x00	; 0
    2a52:	ed 32       	cpi	r30, 0x2D	; 45
    2a54:	f1 05       	cpc	r31, r1
    2a56:	09 f4       	brne	.+2      	; 0x2a5a <main+0x1584>
    2a58:	93 c0       	rjmp	.+294    	; 0x2b80 <main+0x16aa>
    2a5a:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
			case '+':
				LCD_intgerToString((num[0] + num[1]));
    2a5e:	fe 01       	movw	r30, r28
    2a60:	ec 58       	subi	r30, 0x8C	; 140
    2a62:	ff 4f       	sbci	r31, 0xFF	; 255
    2a64:	20 81       	ld	r18, Z
    2a66:	31 81       	ldd	r19, Z+1	; 0x01
    2a68:	42 81       	ldd	r20, Z+2	; 0x02
    2a6a:	53 81       	ldd	r21, Z+3	; 0x03
    2a6c:	64 81       	ldd	r22, Z+4	; 0x04
    2a6e:	75 81       	ldd	r23, Z+5	; 0x05
    2a70:	86 81       	ldd	r24, Z+6	; 0x06
    2a72:	97 81       	ldd	r25, Z+7	; 0x07
    2a74:	d9 01       	movw	r26, r18
    2a76:	fe 01       	movw	r30, r28
    2a78:	ec 58       	subi	r30, 0x8C	; 140
    2a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7c:	20 85       	ldd	r18, Z+8	; 0x08
    2a7e:	31 85       	ldd	r19, Z+9	; 0x09
    2a80:	42 85       	ldd	r20, Z+10	; 0x0a
    2a82:	53 85       	ldd	r21, Z+11	; 0x0b
    2a84:	64 85       	ldd	r22, Z+12	; 0x0c
    2a86:	75 85       	ldd	r23, Z+13	; 0x0d
    2a88:	86 85       	ldd	r24, Z+14	; 0x0e
    2a8a:	97 85       	ldd	r25, Z+15	; 0x0f
    2a8c:	c9 01       	movw	r24, r18
    2a8e:	8a 0f       	add	r24, r26
    2a90:	9b 1f       	adc	r25, r27
    2a92:	0e 94 bb 26 	call	0x4d76	; 0x4d76 <LCD_intgerToString>
    2a96:	80 e0       	ldi	r24, 0x00	; 0
    2a98:	90 e0       	ldi	r25, 0x00	; 0
    2a9a:	a6 e9       	ldi	r26, 0x96	; 150
    2a9c:	b3 e4       	ldi	r27, 0x43	; 67
    2a9e:	8d ab       	std	Y+53, r24	; 0x35
    2aa0:	9e ab       	std	Y+54, r25	; 0x36
    2aa2:	af ab       	std	Y+55, r26	; 0x37
    2aa4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2aa6:	6d a9       	ldd	r22, Y+53	; 0x35
    2aa8:	7e a9       	ldd	r23, Y+54	; 0x36
    2aaa:	8f a9       	ldd	r24, Y+55	; 0x37
    2aac:	98 ad       	ldd	r25, Y+56	; 0x38
    2aae:	20 e0       	ldi	r18, 0x00	; 0
    2ab0:	30 e0       	ldi	r19, 0x00	; 0
    2ab2:	4a e7       	ldi	r20, 0x7A	; 122
    2ab4:	55 e4       	ldi	r21, 0x45	; 69
    2ab6:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2aba:	dc 01       	movw	r26, r24
    2abc:	cb 01       	movw	r24, r22
    2abe:	89 ab       	std	Y+49, r24	; 0x31
    2ac0:	9a ab       	std	Y+50, r25	; 0x32
    2ac2:	ab ab       	std	Y+51, r26	; 0x33
    2ac4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2ac6:	69 a9       	ldd	r22, Y+49	; 0x31
    2ac8:	7a a9       	ldd	r23, Y+50	; 0x32
    2aca:	8b a9       	ldd	r24, Y+51	; 0x33
    2acc:	9c a9       	ldd	r25, Y+52	; 0x34
    2ace:	20 e0       	ldi	r18, 0x00	; 0
    2ad0:	30 e0       	ldi	r19, 0x00	; 0
    2ad2:	40 e8       	ldi	r20, 0x80	; 128
    2ad4:	5f e3       	ldi	r21, 0x3F	; 63
    2ad6:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    2ada:	88 23       	and	r24, r24
    2adc:	2c f4       	brge	.+10     	; 0x2ae8 <main+0x1612>
		__ticks = 1;
    2ade:	81 e0       	ldi	r24, 0x01	; 1
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	98 ab       	std	Y+48, r25	; 0x30
    2ae4:	8f a7       	std	Y+47, r24	; 0x2f
    2ae6:	40 c0       	rjmp	.+128    	; 0x2b68 <main+0x1692>
	else if (__tmp > 65535)
    2ae8:	69 a9       	ldd	r22, Y+49	; 0x31
    2aea:	7a a9       	ldd	r23, Y+50	; 0x32
    2aec:	8b a9       	ldd	r24, Y+51	; 0x33
    2aee:	9c a9       	ldd	r25, Y+52	; 0x34
    2af0:	20 e0       	ldi	r18, 0x00	; 0
    2af2:	3f ef       	ldi	r19, 0xFF	; 255
    2af4:	4f e7       	ldi	r20, 0x7F	; 127
    2af6:	57 e4       	ldi	r21, 0x47	; 71
    2af8:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    2afc:	18 16       	cp	r1, r24
    2afe:	54 f5       	brge	.+84     	; 0x2b54 <main+0x167e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b00:	6d a9       	ldd	r22, Y+53	; 0x35
    2b02:	7e a9       	ldd	r23, Y+54	; 0x36
    2b04:	8f a9       	ldd	r24, Y+55	; 0x37
    2b06:	98 ad       	ldd	r25, Y+56	; 0x38
    2b08:	20 e0       	ldi	r18, 0x00	; 0
    2b0a:	30 e0       	ldi	r19, 0x00	; 0
    2b0c:	40 e2       	ldi	r20, 0x20	; 32
    2b0e:	51 e4       	ldi	r21, 0x41	; 65
    2b10:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2b14:	dc 01       	movw	r26, r24
    2b16:	cb 01       	movw	r24, r22
    2b18:	bc 01       	movw	r22, r24
    2b1a:	cd 01       	movw	r24, r26
    2b1c:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2b20:	dc 01       	movw	r26, r24
    2b22:	cb 01       	movw	r24, r22
    2b24:	98 ab       	std	Y+48, r25	; 0x30
    2b26:	8f a7       	std	Y+47, r24	; 0x2f
    2b28:	0f c0       	rjmp	.+30     	; 0x2b48 <main+0x1672>
    2b2a:	80 e9       	ldi	r24, 0x90	; 144
    2b2c:	91 e0       	ldi	r25, 0x01	; 1
    2b2e:	9e a7       	std	Y+46, r25	; 0x2e
    2b30:	8d a7       	std	Y+45, r24	; 0x2d
    2b32:	8d a5       	ldd	r24, Y+45	; 0x2d
    2b34:	9e a5       	ldd	r25, Y+46	; 0x2e
    2b36:	01 97       	sbiw	r24, 0x01	; 1
    2b38:	f1 f7       	brne	.-4      	; 0x2b36 <main+0x1660>
    2b3a:	9e a7       	std	Y+46, r25	; 0x2e
    2b3c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b3e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b40:	98 a9       	ldd	r25, Y+48	; 0x30
    2b42:	01 97       	sbiw	r24, 0x01	; 1
    2b44:	98 ab       	std	Y+48, r25	; 0x30
    2b46:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b48:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b4a:	98 a9       	ldd	r25, Y+48	; 0x30
    2b4c:	00 97       	sbiw	r24, 0x00	; 0
    2b4e:	69 f7       	brne	.-38     	; 0x2b2a <main+0x1654>
    2b50:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b54:	69 a9       	ldd	r22, Y+49	; 0x31
    2b56:	7a a9       	ldd	r23, Y+50	; 0x32
    2b58:	8b a9       	ldd	r24, Y+51	; 0x33
    2b5a:	9c a9       	ldd	r25, Y+52	; 0x34
    2b5c:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2b60:	dc 01       	movw	r26, r24
    2b62:	cb 01       	movw	r24, r22
    2b64:	98 ab       	std	Y+48, r25	; 0x30
    2b66:	8f a7       	std	Y+47, r24	; 0x2f
    2b68:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b6a:	98 a9       	ldd	r25, Y+48	; 0x30
    2b6c:	9c a7       	std	Y+44, r25	; 0x2c
    2b6e:	8b a7       	std	Y+43, r24	; 0x2b
    2b70:	8b a5       	ldd	r24, Y+43	; 0x2b
    2b72:	9c a5       	ldd	r25, Y+44	; 0x2c
    2b74:	01 97       	sbiw	r24, 0x01	; 1
    2b76:	f1 f7       	brne	.-4      	; 0x2b74 <main+0x169e>
    2b78:	9c a7       	std	Y+44, r25	; 0x2c
    2b7a:	8b a7       	std	Y+43, r24	; 0x2b
    2b7c:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
				_delay_ms(300);
				break;
			case '-':
				LCD_intgerToString((num[0] - num[1]));
    2b80:	fe 01       	movw	r30, r28
    2b82:	ec 58       	subi	r30, 0x8C	; 140
    2b84:	ff 4f       	sbci	r31, 0xFF	; 255
    2b86:	20 81       	ld	r18, Z
    2b88:	31 81       	ldd	r19, Z+1	; 0x01
    2b8a:	42 81       	ldd	r20, Z+2	; 0x02
    2b8c:	53 81       	ldd	r21, Z+3	; 0x03
    2b8e:	64 81       	ldd	r22, Z+4	; 0x04
    2b90:	75 81       	ldd	r23, Z+5	; 0x05
    2b92:	86 81       	ldd	r24, Z+6	; 0x06
    2b94:	97 81       	ldd	r25, Z+7	; 0x07
    2b96:	d9 01       	movw	r26, r18
    2b98:	fe 01       	movw	r30, r28
    2b9a:	ec 58       	subi	r30, 0x8C	; 140
    2b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9e:	20 85       	ldd	r18, Z+8	; 0x08
    2ba0:	31 85       	ldd	r19, Z+9	; 0x09
    2ba2:	42 85       	ldd	r20, Z+10	; 0x0a
    2ba4:	53 85       	ldd	r21, Z+11	; 0x0b
    2ba6:	64 85       	ldd	r22, Z+12	; 0x0c
    2ba8:	75 85       	ldd	r23, Z+13	; 0x0d
    2baa:	86 85       	ldd	r24, Z+14	; 0x0e
    2bac:	97 85       	ldd	r25, Z+15	; 0x0f
    2bae:	c9 01       	movw	r24, r18
    2bb0:	8d 01       	movw	r16, r26
    2bb2:	08 1b       	sub	r16, r24
    2bb4:	19 0b       	sbc	r17, r25
    2bb6:	c8 01       	movw	r24, r16
    2bb8:	0e 94 bb 26 	call	0x4d76	; 0x4d76 <LCD_intgerToString>
    2bbc:	80 e0       	ldi	r24, 0x00	; 0
    2bbe:	90 e0       	ldi	r25, 0x00	; 0
    2bc0:	a6 e9       	ldi	r26, 0x96	; 150
    2bc2:	b3 e4       	ldi	r27, 0x43	; 67
    2bc4:	8f a3       	std	Y+39, r24	; 0x27
    2bc6:	98 a7       	std	Y+40, r25	; 0x28
    2bc8:	a9 a7       	std	Y+41, r26	; 0x29
    2bca:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bcc:	6f a1       	ldd	r22, Y+39	; 0x27
    2bce:	78 a5       	ldd	r23, Y+40	; 0x28
    2bd0:	89 a5       	ldd	r24, Y+41	; 0x29
    2bd2:	9a a5       	ldd	r25, Y+42	; 0x2a
    2bd4:	20 e0       	ldi	r18, 0x00	; 0
    2bd6:	30 e0       	ldi	r19, 0x00	; 0
    2bd8:	4a e7       	ldi	r20, 0x7A	; 122
    2bda:	55 e4       	ldi	r21, 0x45	; 69
    2bdc:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2be0:	dc 01       	movw	r26, r24
    2be2:	cb 01       	movw	r24, r22
    2be4:	8b a3       	std	Y+35, r24	; 0x23
    2be6:	9c a3       	std	Y+36, r25	; 0x24
    2be8:	ad a3       	std	Y+37, r26	; 0x25
    2bea:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2bec:	6b a1       	ldd	r22, Y+35	; 0x23
    2bee:	7c a1       	ldd	r23, Y+36	; 0x24
    2bf0:	8d a1       	ldd	r24, Y+37	; 0x25
    2bf2:	9e a1       	ldd	r25, Y+38	; 0x26
    2bf4:	20 e0       	ldi	r18, 0x00	; 0
    2bf6:	30 e0       	ldi	r19, 0x00	; 0
    2bf8:	40 e8       	ldi	r20, 0x80	; 128
    2bfa:	5f e3       	ldi	r21, 0x3F	; 63
    2bfc:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    2c00:	88 23       	and	r24, r24
    2c02:	2c f4       	brge	.+10     	; 0x2c0e <main+0x1738>
		__ticks = 1;
    2c04:	81 e0       	ldi	r24, 0x01	; 1
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	9a a3       	std	Y+34, r25	; 0x22
    2c0a:	89 a3       	std	Y+33, r24	; 0x21
    2c0c:	40 c0       	rjmp	.+128    	; 0x2c8e <main+0x17b8>
	else if (__tmp > 65535)
    2c0e:	6b a1       	ldd	r22, Y+35	; 0x23
    2c10:	7c a1       	ldd	r23, Y+36	; 0x24
    2c12:	8d a1       	ldd	r24, Y+37	; 0x25
    2c14:	9e a1       	ldd	r25, Y+38	; 0x26
    2c16:	20 e0       	ldi	r18, 0x00	; 0
    2c18:	3f ef       	ldi	r19, 0xFF	; 255
    2c1a:	4f e7       	ldi	r20, 0x7F	; 127
    2c1c:	57 e4       	ldi	r21, 0x47	; 71
    2c1e:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    2c22:	18 16       	cp	r1, r24
    2c24:	54 f5       	brge	.+84     	; 0x2c7a <main+0x17a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c26:	6f a1       	ldd	r22, Y+39	; 0x27
    2c28:	78 a5       	ldd	r23, Y+40	; 0x28
    2c2a:	89 a5       	ldd	r24, Y+41	; 0x29
    2c2c:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c2e:	20 e0       	ldi	r18, 0x00	; 0
    2c30:	30 e0       	ldi	r19, 0x00	; 0
    2c32:	40 e2       	ldi	r20, 0x20	; 32
    2c34:	51 e4       	ldi	r21, 0x41	; 65
    2c36:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2c3a:	dc 01       	movw	r26, r24
    2c3c:	cb 01       	movw	r24, r22
    2c3e:	bc 01       	movw	r22, r24
    2c40:	cd 01       	movw	r24, r26
    2c42:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2c46:	dc 01       	movw	r26, r24
    2c48:	cb 01       	movw	r24, r22
    2c4a:	9a a3       	std	Y+34, r25	; 0x22
    2c4c:	89 a3       	std	Y+33, r24	; 0x21
    2c4e:	0f c0       	rjmp	.+30     	; 0x2c6e <main+0x1798>
    2c50:	80 e9       	ldi	r24, 0x90	; 144
    2c52:	91 e0       	ldi	r25, 0x01	; 1
    2c54:	98 a3       	std	Y+32, r25	; 0x20
    2c56:	8f 8f       	std	Y+31, r24	; 0x1f
    2c58:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2c5a:	98 a1       	ldd	r25, Y+32	; 0x20
    2c5c:	01 97       	sbiw	r24, 0x01	; 1
    2c5e:	f1 f7       	brne	.-4      	; 0x2c5c <main+0x1786>
    2c60:	98 a3       	std	Y+32, r25	; 0x20
    2c62:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c64:	89 a1       	ldd	r24, Y+33	; 0x21
    2c66:	9a a1       	ldd	r25, Y+34	; 0x22
    2c68:	01 97       	sbiw	r24, 0x01	; 1
    2c6a:	9a a3       	std	Y+34, r25	; 0x22
    2c6c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c6e:	89 a1       	ldd	r24, Y+33	; 0x21
    2c70:	9a a1       	ldd	r25, Y+34	; 0x22
    2c72:	00 97       	sbiw	r24, 0x00	; 0
    2c74:	69 f7       	brne	.-38     	; 0x2c50 <main+0x177a>
    2c76:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c7a:	6b a1       	ldd	r22, Y+35	; 0x23
    2c7c:	7c a1       	ldd	r23, Y+36	; 0x24
    2c7e:	8d a1       	ldd	r24, Y+37	; 0x25
    2c80:	9e a1       	ldd	r25, Y+38	; 0x26
    2c82:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2c86:	dc 01       	movw	r26, r24
    2c88:	cb 01       	movw	r24, r22
    2c8a:	9a a3       	std	Y+34, r25	; 0x22
    2c8c:	89 a3       	std	Y+33, r24	; 0x21
    2c8e:	89 a1       	ldd	r24, Y+33	; 0x21
    2c90:	9a a1       	ldd	r25, Y+34	; 0x22
    2c92:	9e 8f       	std	Y+30, r25	; 0x1e
    2c94:	8d 8f       	std	Y+29, r24	; 0x1d
    2c96:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2c98:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2c9a:	01 97       	sbiw	r24, 0x01	; 1
    2c9c:	f1 f7       	brne	.-4      	; 0x2c9a <main+0x17c4>
    2c9e:	9e 8f       	std	Y+30, r25	; 0x1e
    2ca0:	8d 8f       	std	Y+29, r24	; 0x1d
    2ca2:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
				_delay_ms(300);
				break;
			case '*':
				LCD_floatToString((num[0] * num[1]));
    2ca6:	fe 01       	movw	r30, r28
    2ca8:	ec 58       	subi	r30, 0x8C	; 140
    2caa:	ff 4f       	sbci	r31, 0xFF	; 255
    2cac:	a0 80       	ld	r10, Z
    2cae:	b1 80       	ldd	r11, Z+1	; 0x01
    2cb0:	c2 80       	ldd	r12, Z+2	; 0x02
    2cb2:	d3 80       	ldd	r13, Z+3	; 0x03
    2cb4:	e4 80       	ldd	r14, Z+4	; 0x04
    2cb6:	f5 80       	ldd	r15, Z+5	; 0x05
    2cb8:	06 81       	ldd	r16, Z+6	; 0x06
    2cba:	17 81       	ldd	r17, Z+7	; 0x07
    2cbc:	fe 01       	movw	r30, r28
    2cbe:	ec 58       	subi	r30, 0x8C	; 140
    2cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc2:	20 84       	ldd	r2, Z+8	; 0x08
    2cc4:	31 84       	ldd	r3, Z+9	; 0x09
    2cc6:	42 84       	ldd	r4, Z+10	; 0x0a
    2cc8:	53 84       	ldd	r5, Z+11	; 0x0b
    2cca:	64 84       	ldd	r6, Z+12	; 0x0c
    2ccc:	75 84       	ldd	r7, Z+13	; 0x0d
    2cce:	86 84       	ldd	r8, Z+14	; 0x0e
    2cd0:	97 84       	ldd	r9, Z+15	; 0x0f
    2cd2:	2a 2d       	mov	r18, r10
    2cd4:	3b 2d       	mov	r19, r11
    2cd6:	4c 2d       	mov	r20, r12
    2cd8:	5d 2d       	mov	r21, r13
    2cda:	6e 2d       	mov	r22, r14
    2cdc:	7f 2d       	mov	r23, r15
    2cde:	80 2f       	mov	r24, r16
    2ce0:	91 2f       	mov	r25, r17
    2ce2:	a2 2c       	mov	r10, r2
    2ce4:	b3 2c       	mov	r11, r3
    2ce6:	c4 2c       	mov	r12, r4
    2ce8:	d5 2c       	mov	r13, r5
    2cea:	e6 2c       	mov	r14, r6
    2cec:	f7 2c       	mov	r15, r7
    2cee:	08 2d       	mov	r16, r8
    2cf0:	19 2d       	mov	r17, r9
    2cf2:	0e 94 be 00 	call	0x17c	; 0x17c <__muldi3>
    2cf6:	22 2e       	mov	r2, r18
    2cf8:	33 2e       	mov	r3, r19
    2cfa:	44 2e       	mov	r4, r20
    2cfc:	55 2e       	mov	r5, r21
    2cfe:	66 2e       	mov	r6, r22
    2d00:	77 2e       	mov	r7, r23
    2d02:	88 2e       	mov	r8, r24
    2d04:	99 2e       	mov	r9, r25
    2d06:	a2 2c       	mov	r10, r2
    2d08:	b3 2c       	mov	r11, r3
    2d0a:	c4 2c       	mov	r12, r4
    2d0c:	d5 2c       	mov	r13, r5
    2d0e:	e6 2c       	mov	r14, r6
    2d10:	f7 2c       	mov	r15, r7
    2d12:	08 2d       	mov	r16, r8
    2d14:	19 2d       	mov	r17, r9
    2d16:	2a 2d       	mov	r18, r10
    2d18:	3b 2d       	mov	r19, r11
    2d1a:	4c 2d       	mov	r20, r12
    2d1c:	5d 2d       	mov	r21, r13
    2d1e:	6e 2d       	mov	r22, r14
    2d20:	7f 2d       	mov	r23, r15
    2d22:	80 2f       	mov	r24, r16
    2d24:	91 2f       	mov	r25, r17
    2d26:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__floatdisf>
    2d2a:	dc 01       	movw	r26, r24
    2d2c:	cb 01       	movw	r24, r22
    2d2e:	bc 01       	movw	r22, r24
    2d30:	cd 01       	movw	r24, r26
    2d32:	0e 94 de 26 	call	0x4dbc	; 0x4dbc <LCD_floatToString>
    2d36:	80 e0       	ldi	r24, 0x00	; 0
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	a6 e9       	ldi	r26, 0x96	; 150
    2d3c:	b3 e4       	ldi	r27, 0x43	; 67
    2d3e:	89 8f       	std	Y+25, r24	; 0x19
    2d40:	9a 8f       	std	Y+26, r25	; 0x1a
    2d42:	ab 8f       	std	Y+27, r26	; 0x1b
    2d44:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d46:	69 8d       	ldd	r22, Y+25	; 0x19
    2d48:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d4a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d4c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d4e:	20 e0       	ldi	r18, 0x00	; 0
    2d50:	30 e0       	ldi	r19, 0x00	; 0
    2d52:	4a e7       	ldi	r20, 0x7A	; 122
    2d54:	55 e4       	ldi	r21, 0x45	; 69
    2d56:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2d5a:	dc 01       	movw	r26, r24
    2d5c:	cb 01       	movw	r24, r22
    2d5e:	8d 8b       	std	Y+21, r24	; 0x15
    2d60:	9e 8b       	std	Y+22, r25	; 0x16
    2d62:	af 8b       	std	Y+23, r26	; 0x17
    2d64:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2d66:	6d 89       	ldd	r22, Y+21	; 0x15
    2d68:	7e 89       	ldd	r23, Y+22	; 0x16
    2d6a:	8f 89       	ldd	r24, Y+23	; 0x17
    2d6c:	98 8d       	ldd	r25, Y+24	; 0x18
    2d6e:	20 e0       	ldi	r18, 0x00	; 0
    2d70:	30 e0       	ldi	r19, 0x00	; 0
    2d72:	40 e8       	ldi	r20, 0x80	; 128
    2d74:	5f e3       	ldi	r21, 0x3F	; 63
    2d76:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    2d7a:	88 23       	and	r24, r24
    2d7c:	2c f4       	brge	.+10     	; 0x2d88 <main+0x18b2>
		__ticks = 1;
    2d7e:	81 e0       	ldi	r24, 0x01	; 1
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	9c 8b       	std	Y+20, r25	; 0x14
    2d84:	8b 8b       	std	Y+19, r24	; 0x13
    2d86:	40 c0       	rjmp	.+128    	; 0x2e08 <main+0x1932>
	else if (__tmp > 65535)
    2d88:	6d 89       	ldd	r22, Y+21	; 0x15
    2d8a:	7e 89       	ldd	r23, Y+22	; 0x16
    2d8c:	8f 89       	ldd	r24, Y+23	; 0x17
    2d8e:	98 8d       	ldd	r25, Y+24	; 0x18
    2d90:	20 e0       	ldi	r18, 0x00	; 0
    2d92:	3f ef       	ldi	r19, 0xFF	; 255
    2d94:	4f e7       	ldi	r20, 0x7F	; 127
    2d96:	57 e4       	ldi	r21, 0x47	; 71
    2d98:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    2d9c:	18 16       	cp	r1, r24
    2d9e:	54 f5       	brge	.+84     	; 0x2df4 <main+0x191e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2da0:	69 8d       	ldd	r22, Y+25	; 0x19
    2da2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2da4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2da6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2da8:	20 e0       	ldi	r18, 0x00	; 0
    2daa:	30 e0       	ldi	r19, 0x00	; 0
    2dac:	40 e2       	ldi	r20, 0x20	; 32
    2dae:	51 e4       	ldi	r21, 0x41	; 65
    2db0:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2db4:	dc 01       	movw	r26, r24
    2db6:	cb 01       	movw	r24, r22
    2db8:	bc 01       	movw	r22, r24
    2dba:	cd 01       	movw	r24, r26
    2dbc:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2dc0:	dc 01       	movw	r26, r24
    2dc2:	cb 01       	movw	r24, r22
    2dc4:	9c 8b       	std	Y+20, r25	; 0x14
    2dc6:	8b 8b       	std	Y+19, r24	; 0x13
    2dc8:	0f c0       	rjmp	.+30     	; 0x2de8 <main+0x1912>
    2dca:	80 e9       	ldi	r24, 0x90	; 144
    2dcc:	91 e0       	ldi	r25, 0x01	; 1
    2dce:	9a 8b       	std	Y+18, r25	; 0x12
    2dd0:	89 8b       	std	Y+17, r24	; 0x11
    2dd2:	89 89       	ldd	r24, Y+17	; 0x11
    2dd4:	9a 89       	ldd	r25, Y+18	; 0x12
    2dd6:	01 97       	sbiw	r24, 0x01	; 1
    2dd8:	f1 f7       	brne	.-4      	; 0x2dd6 <main+0x1900>
    2dda:	9a 8b       	std	Y+18, r25	; 0x12
    2ddc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dde:	8b 89       	ldd	r24, Y+19	; 0x13
    2de0:	9c 89       	ldd	r25, Y+20	; 0x14
    2de2:	01 97       	sbiw	r24, 0x01	; 1
    2de4:	9c 8b       	std	Y+20, r25	; 0x14
    2de6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2de8:	8b 89       	ldd	r24, Y+19	; 0x13
    2dea:	9c 89       	ldd	r25, Y+20	; 0x14
    2dec:	00 97       	sbiw	r24, 0x00	; 0
    2dee:	69 f7       	brne	.-38     	; 0x2dca <main+0x18f4>
    2df0:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2df4:	6d 89       	ldd	r22, Y+21	; 0x15
    2df6:	7e 89       	ldd	r23, Y+22	; 0x16
    2df8:	8f 89       	ldd	r24, Y+23	; 0x17
    2dfa:	98 8d       	ldd	r25, Y+24	; 0x18
    2dfc:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2e00:	dc 01       	movw	r26, r24
    2e02:	cb 01       	movw	r24, r22
    2e04:	9c 8b       	std	Y+20, r25	; 0x14
    2e06:	8b 8b       	std	Y+19, r24	; 0x13
    2e08:	8b 89       	ldd	r24, Y+19	; 0x13
    2e0a:	9c 89       	ldd	r25, Y+20	; 0x14
    2e0c:	98 8b       	std	Y+16, r25	; 0x10
    2e0e:	8f 87       	std	Y+15, r24	; 0x0f
    2e10:	8f 85       	ldd	r24, Y+15	; 0x0f
    2e12:	98 89       	ldd	r25, Y+16	; 0x10
    2e14:	01 97       	sbiw	r24, 0x01	; 1
    2e16:	f1 f7       	brne	.-4      	; 0x2e14 <main+0x193e>
    2e18:	98 8b       	std	Y+16, r25	; 0x10
    2e1a:	8f 87       	std	Y+15, r24	; 0x0f
    2e1c:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
				_delay_ms(300);
				break;
			case '%':
				LCD_floatToString((((float) num[0]) / num[1]));
    2e20:	fe 01       	movw	r30, r28
    2e22:	ec 58       	subi	r30, 0x8C	; 140
    2e24:	ff 4f       	sbci	r31, 0xFF	; 255
    2e26:	a0 80       	ld	r10, Z
    2e28:	b1 80       	ldd	r11, Z+1	; 0x01
    2e2a:	c2 80       	ldd	r12, Z+2	; 0x02
    2e2c:	d3 80       	ldd	r13, Z+3	; 0x03
    2e2e:	e4 80       	ldd	r14, Z+4	; 0x04
    2e30:	f5 80       	ldd	r15, Z+5	; 0x05
    2e32:	06 81       	ldd	r16, Z+6	; 0x06
    2e34:	17 81       	ldd	r17, Z+7	; 0x07
    2e36:	2a 2d       	mov	r18, r10
    2e38:	3b 2d       	mov	r19, r11
    2e3a:	4c 2d       	mov	r20, r12
    2e3c:	5d 2d       	mov	r21, r13
    2e3e:	6e 2d       	mov	r22, r14
    2e40:	7f 2d       	mov	r23, r15
    2e42:	80 2f       	mov	r24, r16
    2e44:	91 2f       	mov	r25, r17
    2e46:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__floatdisf>
    2e4a:	3b 01       	movw	r6, r22
    2e4c:	4c 01       	movw	r8, r24
    2e4e:	fe 01       	movw	r30, r28
    2e50:	ec 58       	subi	r30, 0x8C	; 140
    2e52:	ff 4f       	sbci	r31, 0xFF	; 255
    2e54:	a0 84       	ldd	r10, Z+8	; 0x08
    2e56:	b1 84       	ldd	r11, Z+9	; 0x09
    2e58:	c2 84       	ldd	r12, Z+10	; 0x0a
    2e5a:	d3 84       	ldd	r13, Z+11	; 0x0b
    2e5c:	e4 84       	ldd	r14, Z+12	; 0x0c
    2e5e:	f5 84       	ldd	r15, Z+13	; 0x0d
    2e60:	06 85       	ldd	r16, Z+14	; 0x0e
    2e62:	17 85       	ldd	r17, Z+15	; 0x0f
    2e64:	2a 2d       	mov	r18, r10
    2e66:	3b 2d       	mov	r19, r11
    2e68:	4c 2d       	mov	r20, r12
    2e6a:	5d 2d       	mov	r21, r13
    2e6c:	6e 2d       	mov	r22, r14
    2e6e:	7f 2d       	mov	r23, r15
    2e70:	80 2f       	mov	r24, r16
    2e72:	91 2f       	mov	r25, r17
    2e74:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__floatdisf>
    2e78:	9b 01       	movw	r18, r22
    2e7a:	ac 01       	movw	r20, r24
    2e7c:	c4 01       	movw	r24, r8
    2e7e:	b3 01       	movw	r22, r6
    2e80:	0e 94 03 06 	call	0xc06	; 0xc06 <__divsf3>
    2e84:	dc 01       	movw	r26, r24
    2e86:	cb 01       	movw	r24, r22
    2e88:	bc 01       	movw	r22, r24
    2e8a:	cd 01       	movw	r24, r26
    2e8c:	0e 94 de 26 	call	0x4dbc	; 0x4dbc <LCD_floatToString>
    2e90:	80 e0       	ldi	r24, 0x00	; 0
    2e92:	90 e0       	ldi	r25, 0x00	; 0
    2e94:	a6 e9       	ldi	r26, 0x96	; 150
    2e96:	b3 e4       	ldi	r27, 0x43	; 67
    2e98:	8b 87       	std	Y+11, r24	; 0x0b
    2e9a:	9c 87       	std	Y+12, r25	; 0x0c
    2e9c:	ad 87       	std	Y+13, r26	; 0x0d
    2e9e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ea0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ea2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ea4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ea6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ea8:	20 e0       	ldi	r18, 0x00	; 0
    2eaa:	30 e0       	ldi	r19, 0x00	; 0
    2eac:	4a e7       	ldi	r20, 0x7A	; 122
    2eae:	55 e4       	ldi	r21, 0x45	; 69
    2eb0:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2eb4:	dc 01       	movw	r26, r24
    2eb6:	cb 01       	movw	r24, r22
    2eb8:	8f 83       	std	Y+7, r24	; 0x07
    2eba:	98 87       	std	Y+8, r25	; 0x08
    2ebc:	a9 87       	std	Y+9, r26	; 0x09
    2ebe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ec0:	6f 81       	ldd	r22, Y+7	; 0x07
    2ec2:	78 85       	ldd	r23, Y+8	; 0x08
    2ec4:	89 85       	ldd	r24, Y+9	; 0x09
    2ec6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ec8:	20 e0       	ldi	r18, 0x00	; 0
    2eca:	30 e0       	ldi	r19, 0x00	; 0
    2ecc:	40 e8       	ldi	r20, 0x80	; 128
    2ece:	5f e3       	ldi	r21, 0x3F	; 63
    2ed0:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    2ed4:	88 23       	and	r24, r24
    2ed6:	2c f4       	brge	.+10     	; 0x2ee2 <main+0x1a0c>
		__ticks = 1;
    2ed8:	81 e0       	ldi	r24, 0x01	; 1
    2eda:	90 e0       	ldi	r25, 0x00	; 0
    2edc:	9e 83       	std	Y+6, r25	; 0x06
    2ede:	8d 83       	std	Y+5, r24	; 0x05
    2ee0:	40 c0       	rjmp	.+128    	; 0x2f62 <main+0x1a8c>
	else if (__tmp > 65535)
    2ee2:	6f 81       	ldd	r22, Y+7	; 0x07
    2ee4:	78 85       	ldd	r23, Y+8	; 0x08
    2ee6:	89 85       	ldd	r24, Y+9	; 0x09
    2ee8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2eea:	20 e0       	ldi	r18, 0x00	; 0
    2eec:	3f ef       	ldi	r19, 0xFF	; 255
    2eee:	4f e7       	ldi	r20, 0x7F	; 127
    2ef0:	57 e4       	ldi	r21, 0x47	; 71
    2ef2:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    2ef6:	18 16       	cp	r1, r24
    2ef8:	54 f5       	brge	.+84     	; 0x2f4e <main+0x1a78>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2efa:	6b 85       	ldd	r22, Y+11	; 0x0b
    2efc:	7c 85       	ldd	r23, Y+12	; 0x0c
    2efe:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f00:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f02:	20 e0       	ldi	r18, 0x00	; 0
    2f04:	30 e0       	ldi	r19, 0x00	; 0
    2f06:	40 e2       	ldi	r20, 0x20	; 32
    2f08:	51 e4       	ldi	r21, 0x41	; 65
    2f0a:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    2f0e:	dc 01       	movw	r26, r24
    2f10:	cb 01       	movw	r24, r22
    2f12:	bc 01       	movw	r22, r24
    2f14:	cd 01       	movw	r24, r26
    2f16:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2f1a:	dc 01       	movw	r26, r24
    2f1c:	cb 01       	movw	r24, r22
    2f1e:	9e 83       	std	Y+6, r25	; 0x06
    2f20:	8d 83       	std	Y+5, r24	; 0x05
    2f22:	0f c0       	rjmp	.+30     	; 0x2f42 <main+0x1a6c>
    2f24:	80 e9       	ldi	r24, 0x90	; 144
    2f26:	91 e0       	ldi	r25, 0x01	; 1
    2f28:	9c 83       	std	Y+4, r25	; 0x04
    2f2a:	8b 83       	std	Y+3, r24	; 0x03
    2f2c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f2e:	9c 81       	ldd	r25, Y+4	; 0x04
    2f30:	01 97       	sbiw	r24, 0x01	; 1
    2f32:	f1 f7       	brne	.-4      	; 0x2f30 <main+0x1a5a>
    2f34:	9c 83       	std	Y+4, r25	; 0x04
    2f36:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f38:	8d 81       	ldd	r24, Y+5	; 0x05
    2f3a:	9e 81       	ldd	r25, Y+6	; 0x06
    2f3c:	01 97       	sbiw	r24, 0x01	; 1
    2f3e:	9e 83       	std	Y+6, r25	; 0x06
    2f40:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f42:	8d 81       	ldd	r24, Y+5	; 0x05
    2f44:	9e 81       	ldd	r25, Y+6	; 0x06
    2f46:	00 97       	sbiw	r24, 0x00	; 0
    2f48:	69 f7       	brne	.-38     	; 0x2f24 <main+0x1a4e>
    2f4a:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f4e:	6f 81       	ldd	r22, Y+7	; 0x07
    2f50:	78 85       	ldd	r23, Y+8	; 0x08
    2f52:	89 85       	ldd	r24, Y+9	; 0x09
    2f54:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f56:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    2f5a:	dc 01       	movw	r26, r24
    2f5c:	cb 01       	movw	r24, r22
    2f5e:	9e 83       	std	Y+6, r25	; 0x06
    2f60:	8d 83       	std	Y+5, r24	; 0x05
    2f62:	8d 81       	ldd	r24, Y+5	; 0x05
    2f64:	9e 81       	ldd	r25, Y+6	; 0x06
    2f66:	9a 83       	std	Y+2, r25	; 0x02
    2f68:	89 83       	std	Y+1, r24	; 0x01
    2f6a:	89 81       	ldd	r24, Y+1	; 0x01
    2f6c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f6e:	01 97       	sbiw	r24, 0x01	; 1
    2f70:	f1 f7       	brne	.-4      	; 0x2f6e <main+0x1a98>
    2f72:	9a 83       	std	Y+2, r25	; 0x02
    2f74:	89 83       	std	Y+1, r24	; 0x01
    2f76:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <main+0x26e>

00002f7a <GPIO_setupPinDirection>:
 * Description :
 * Setup the direction of the required pin input/output.
 * If the input port number or pin number are not correct, The function will not handle the request.
 */
void GPIO_setupPinDirection(uint8 port_num, uint8 pin_num, GPIO_PinDirectionType direction)
{
    2f7a:	df 93       	push	r29
    2f7c:	cf 93       	push	r28
    2f7e:	00 d0       	rcall	.+0      	; 0x2f80 <GPIO_setupPinDirection+0x6>
    2f80:	00 d0       	rcall	.+0      	; 0x2f82 <GPIO_setupPinDirection+0x8>
    2f82:	0f 92       	push	r0
    2f84:	cd b7       	in	r28, 0x3d	; 61
    2f86:	de b7       	in	r29, 0x3e	; 62
    2f88:	89 83       	std	Y+1, r24	; 0x01
    2f8a:	6a 83       	std	Y+2, r22	; 0x02
    2f8c:	4b 83       	std	Y+3, r20	; 0x03
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    2f8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2f90:	88 30       	cpi	r24, 0x08	; 8
    2f92:	08 f0       	brcs	.+2      	; 0x2f96 <GPIO_setupPinDirection+0x1c>
    2f94:	d5 c0       	rjmp	.+426    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
    2f96:	89 81       	ldd	r24, Y+1	; 0x01
    2f98:	84 30       	cpi	r24, 0x04	; 4
    2f9a:	08 f0       	brcs	.+2      	; 0x2f9e <GPIO_setupPinDirection+0x24>
    2f9c:	d1 c0       	rjmp	.+418    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
		/* Do Nothing */
	}
	else
	{
		/* Setup the pin direction as required */
		switch(port_num)
    2f9e:	89 81       	ldd	r24, Y+1	; 0x01
    2fa0:	28 2f       	mov	r18, r24
    2fa2:	30 e0       	ldi	r19, 0x00	; 0
    2fa4:	3d 83       	std	Y+5, r19	; 0x05
    2fa6:	2c 83       	std	Y+4, r18	; 0x04
    2fa8:	8c 81       	ldd	r24, Y+4	; 0x04
    2faa:	9d 81       	ldd	r25, Y+5	; 0x05
    2fac:	81 30       	cpi	r24, 0x01	; 1
    2fae:	91 05       	cpc	r25, r1
    2fb0:	09 f4       	brne	.+2      	; 0x2fb4 <GPIO_setupPinDirection+0x3a>
    2fb2:	43 c0       	rjmp	.+134    	; 0x303a <GPIO_setupPinDirection+0xc0>
    2fb4:	2c 81       	ldd	r18, Y+4	; 0x04
    2fb6:	3d 81       	ldd	r19, Y+5	; 0x05
    2fb8:	22 30       	cpi	r18, 0x02	; 2
    2fba:	31 05       	cpc	r19, r1
    2fbc:	2c f4       	brge	.+10     	; 0x2fc8 <GPIO_setupPinDirection+0x4e>
    2fbe:	8c 81       	ldd	r24, Y+4	; 0x04
    2fc0:	9d 81       	ldd	r25, Y+5	; 0x05
    2fc2:	00 97       	sbiw	r24, 0x00	; 0
    2fc4:	71 f0       	breq	.+28     	; 0x2fe2 <GPIO_setupPinDirection+0x68>
    2fc6:	bc c0       	rjmp	.+376    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
    2fc8:	2c 81       	ldd	r18, Y+4	; 0x04
    2fca:	3d 81       	ldd	r19, Y+5	; 0x05
    2fcc:	22 30       	cpi	r18, 0x02	; 2
    2fce:	31 05       	cpc	r19, r1
    2fd0:	09 f4       	brne	.+2      	; 0x2fd4 <GPIO_setupPinDirection+0x5a>
    2fd2:	5f c0       	rjmp	.+190    	; 0x3092 <GPIO_setupPinDirection+0x118>
    2fd4:	8c 81       	ldd	r24, Y+4	; 0x04
    2fd6:	9d 81       	ldd	r25, Y+5	; 0x05
    2fd8:	83 30       	cpi	r24, 0x03	; 3
    2fda:	91 05       	cpc	r25, r1
    2fdc:	09 f4       	brne	.+2      	; 0x2fe0 <GPIO_setupPinDirection+0x66>
    2fde:	85 c0       	rjmp	.+266    	; 0x30ea <GPIO_setupPinDirection+0x170>
    2fe0:	af c0       	rjmp	.+350    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
		{
		case PORTA_ID:
			if(direction == PIN_OUTPUT)
    2fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe4:	81 30       	cpi	r24, 0x01	; 1
    2fe6:	a1 f4       	brne	.+40     	; 0x3010 <GPIO_setupPinDirection+0x96>
			{
				SET_BIT(DDRA,pin_num);
    2fe8:	aa e3       	ldi	r26, 0x3A	; 58
    2fea:	b0 e0       	ldi	r27, 0x00	; 0
    2fec:	ea e3       	ldi	r30, 0x3A	; 58
    2fee:	f0 e0       	ldi	r31, 0x00	; 0
    2ff0:	80 81       	ld	r24, Z
    2ff2:	48 2f       	mov	r20, r24
    2ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ff6:	28 2f       	mov	r18, r24
    2ff8:	30 e0       	ldi	r19, 0x00	; 0
    2ffa:	81 e0       	ldi	r24, 0x01	; 1
    2ffc:	90 e0       	ldi	r25, 0x00	; 0
    2ffe:	02 2e       	mov	r0, r18
    3000:	02 c0       	rjmp	.+4      	; 0x3006 <GPIO_setupPinDirection+0x8c>
    3002:	88 0f       	add	r24, r24
    3004:	99 1f       	adc	r25, r25
    3006:	0a 94       	dec	r0
    3008:	e2 f7       	brpl	.-8      	; 0x3002 <GPIO_setupPinDirection+0x88>
    300a:	84 2b       	or	r24, r20
    300c:	8c 93       	st	X, r24
    300e:	98 c0       	rjmp	.+304    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRA,pin_num);
    3010:	aa e3       	ldi	r26, 0x3A	; 58
    3012:	b0 e0       	ldi	r27, 0x00	; 0
    3014:	ea e3       	ldi	r30, 0x3A	; 58
    3016:	f0 e0       	ldi	r31, 0x00	; 0
    3018:	80 81       	ld	r24, Z
    301a:	48 2f       	mov	r20, r24
    301c:	8a 81       	ldd	r24, Y+2	; 0x02
    301e:	28 2f       	mov	r18, r24
    3020:	30 e0       	ldi	r19, 0x00	; 0
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	90 e0       	ldi	r25, 0x00	; 0
    3026:	02 2e       	mov	r0, r18
    3028:	02 c0       	rjmp	.+4      	; 0x302e <GPIO_setupPinDirection+0xb4>
    302a:	88 0f       	add	r24, r24
    302c:	99 1f       	adc	r25, r25
    302e:	0a 94       	dec	r0
    3030:	e2 f7       	brpl	.-8      	; 0x302a <GPIO_setupPinDirection+0xb0>
    3032:	80 95       	com	r24
    3034:	84 23       	and	r24, r20
    3036:	8c 93       	st	X, r24
    3038:	83 c0       	rjmp	.+262    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTB_ID:
			if(direction == PIN_OUTPUT)
    303a:	8b 81       	ldd	r24, Y+3	; 0x03
    303c:	81 30       	cpi	r24, 0x01	; 1
    303e:	a1 f4       	brne	.+40     	; 0x3068 <GPIO_setupPinDirection+0xee>
			{
				SET_BIT(DDRB,pin_num);
    3040:	a7 e3       	ldi	r26, 0x37	; 55
    3042:	b0 e0       	ldi	r27, 0x00	; 0
    3044:	e7 e3       	ldi	r30, 0x37	; 55
    3046:	f0 e0       	ldi	r31, 0x00	; 0
    3048:	80 81       	ld	r24, Z
    304a:	48 2f       	mov	r20, r24
    304c:	8a 81       	ldd	r24, Y+2	; 0x02
    304e:	28 2f       	mov	r18, r24
    3050:	30 e0       	ldi	r19, 0x00	; 0
    3052:	81 e0       	ldi	r24, 0x01	; 1
    3054:	90 e0       	ldi	r25, 0x00	; 0
    3056:	02 2e       	mov	r0, r18
    3058:	02 c0       	rjmp	.+4      	; 0x305e <GPIO_setupPinDirection+0xe4>
    305a:	88 0f       	add	r24, r24
    305c:	99 1f       	adc	r25, r25
    305e:	0a 94       	dec	r0
    3060:	e2 f7       	brpl	.-8      	; 0x305a <GPIO_setupPinDirection+0xe0>
    3062:	84 2b       	or	r24, r20
    3064:	8c 93       	st	X, r24
    3066:	6c c0       	rjmp	.+216    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRB,pin_num);
    3068:	a7 e3       	ldi	r26, 0x37	; 55
    306a:	b0 e0       	ldi	r27, 0x00	; 0
    306c:	e7 e3       	ldi	r30, 0x37	; 55
    306e:	f0 e0       	ldi	r31, 0x00	; 0
    3070:	80 81       	ld	r24, Z
    3072:	48 2f       	mov	r20, r24
    3074:	8a 81       	ldd	r24, Y+2	; 0x02
    3076:	28 2f       	mov	r18, r24
    3078:	30 e0       	ldi	r19, 0x00	; 0
    307a:	81 e0       	ldi	r24, 0x01	; 1
    307c:	90 e0       	ldi	r25, 0x00	; 0
    307e:	02 2e       	mov	r0, r18
    3080:	02 c0       	rjmp	.+4      	; 0x3086 <GPIO_setupPinDirection+0x10c>
    3082:	88 0f       	add	r24, r24
    3084:	99 1f       	adc	r25, r25
    3086:	0a 94       	dec	r0
    3088:	e2 f7       	brpl	.-8      	; 0x3082 <GPIO_setupPinDirection+0x108>
    308a:	80 95       	com	r24
    308c:	84 23       	and	r24, r20
    308e:	8c 93       	st	X, r24
    3090:	57 c0       	rjmp	.+174    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTC_ID:
			if(direction == PIN_OUTPUT)
    3092:	8b 81       	ldd	r24, Y+3	; 0x03
    3094:	81 30       	cpi	r24, 0x01	; 1
    3096:	a1 f4       	brne	.+40     	; 0x30c0 <GPIO_setupPinDirection+0x146>
			{
				SET_BIT(DDRC,pin_num);
    3098:	a4 e3       	ldi	r26, 0x34	; 52
    309a:	b0 e0       	ldi	r27, 0x00	; 0
    309c:	e4 e3       	ldi	r30, 0x34	; 52
    309e:	f0 e0       	ldi	r31, 0x00	; 0
    30a0:	80 81       	ld	r24, Z
    30a2:	48 2f       	mov	r20, r24
    30a4:	8a 81       	ldd	r24, Y+2	; 0x02
    30a6:	28 2f       	mov	r18, r24
    30a8:	30 e0       	ldi	r19, 0x00	; 0
    30aa:	81 e0       	ldi	r24, 0x01	; 1
    30ac:	90 e0       	ldi	r25, 0x00	; 0
    30ae:	02 2e       	mov	r0, r18
    30b0:	02 c0       	rjmp	.+4      	; 0x30b6 <GPIO_setupPinDirection+0x13c>
    30b2:	88 0f       	add	r24, r24
    30b4:	99 1f       	adc	r25, r25
    30b6:	0a 94       	dec	r0
    30b8:	e2 f7       	brpl	.-8      	; 0x30b2 <GPIO_setupPinDirection+0x138>
    30ba:	84 2b       	or	r24, r20
    30bc:	8c 93       	st	X, r24
    30be:	40 c0       	rjmp	.+128    	; 0x3140 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRC,pin_num);
    30c0:	a4 e3       	ldi	r26, 0x34	; 52
    30c2:	b0 e0       	ldi	r27, 0x00	; 0
    30c4:	e4 e3       	ldi	r30, 0x34	; 52
    30c6:	f0 e0       	ldi	r31, 0x00	; 0
    30c8:	80 81       	ld	r24, Z
    30ca:	48 2f       	mov	r20, r24
    30cc:	8a 81       	ldd	r24, Y+2	; 0x02
    30ce:	28 2f       	mov	r18, r24
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	81 e0       	ldi	r24, 0x01	; 1
    30d4:	90 e0       	ldi	r25, 0x00	; 0
    30d6:	02 2e       	mov	r0, r18
    30d8:	02 c0       	rjmp	.+4      	; 0x30de <GPIO_setupPinDirection+0x164>
    30da:	88 0f       	add	r24, r24
    30dc:	99 1f       	adc	r25, r25
    30de:	0a 94       	dec	r0
    30e0:	e2 f7       	brpl	.-8      	; 0x30da <GPIO_setupPinDirection+0x160>
    30e2:	80 95       	com	r24
    30e4:	84 23       	and	r24, r20
    30e6:	8c 93       	st	X, r24
    30e8:	2b c0       	rjmp	.+86     	; 0x3140 <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTD_ID:
			if(direction == PIN_OUTPUT)
    30ea:	8b 81       	ldd	r24, Y+3	; 0x03
    30ec:	81 30       	cpi	r24, 0x01	; 1
    30ee:	a1 f4       	brne	.+40     	; 0x3118 <GPIO_setupPinDirection+0x19e>
			{
				SET_BIT(DDRD,pin_num);
    30f0:	a1 e3       	ldi	r26, 0x31	; 49
    30f2:	b0 e0       	ldi	r27, 0x00	; 0
    30f4:	e1 e3       	ldi	r30, 0x31	; 49
    30f6:	f0 e0       	ldi	r31, 0x00	; 0
    30f8:	80 81       	ld	r24, Z
    30fa:	48 2f       	mov	r20, r24
    30fc:	8a 81       	ldd	r24, Y+2	; 0x02
    30fe:	28 2f       	mov	r18, r24
    3100:	30 e0       	ldi	r19, 0x00	; 0
    3102:	81 e0       	ldi	r24, 0x01	; 1
    3104:	90 e0       	ldi	r25, 0x00	; 0
    3106:	02 2e       	mov	r0, r18
    3108:	02 c0       	rjmp	.+4      	; 0x310e <GPIO_setupPinDirection+0x194>
    310a:	88 0f       	add	r24, r24
    310c:	99 1f       	adc	r25, r25
    310e:	0a 94       	dec	r0
    3110:	e2 f7       	brpl	.-8      	; 0x310a <GPIO_setupPinDirection+0x190>
    3112:	84 2b       	or	r24, r20
    3114:	8c 93       	st	X, r24
    3116:	14 c0       	rjmp	.+40     	; 0x3140 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRD,pin_num);
    3118:	a1 e3       	ldi	r26, 0x31	; 49
    311a:	b0 e0       	ldi	r27, 0x00	; 0
    311c:	e1 e3       	ldi	r30, 0x31	; 49
    311e:	f0 e0       	ldi	r31, 0x00	; 0
    3120:	80 81       	ld	r24, Z
    3122:	48 2f       	mov	r20, r24
    3124:	8a 81       	ldd	r24, Y+2	; 0x02
    3126:	28 2f       	mov	r18, r24
    3128:	30 e0       	ldi	r19, 0x00	; 0
    312a:	81 e0       	ldi	r24, 0x01	; 1
    312c:	90 e0       	ldi	r25, 0x00	; 0
    312e:	02 2e       	mov	r0, r18
    3130:	02 c0       	rjmp	.+4      	; 0x3136 <GPIO_setupPinDirection+0x1bc>
    3132:	88 0f       	add	r24, r24
    3134:	99 1f       	adc	r25, r25
    3136:	0a 94       	dec	r0
    3138:	e2 f7       	brpl	.-8      	; 0x3132 <GPIO_setupPinDirection+0x1b8>
    313a:	80 95       	com	r24
    313c:	84 23       	and	r24, r20
    313e:	8c 93       	st	X, r24
			}
			break;
		}
	}
}
    3140:	0f 90       	pop	r0
    3142:	0f 90       	pop	r0
    3144:	0f 90       	pop	r0
    3146:	0f 90       	pop	r0
    3148:	0f 90       	pop	r0
    314a:	cf 91       	pop	r28
    314c:	df 91       	pop	r29
    314e:	08 95       	ret

00003150 <GPIO_writePin>:
 * Write the value Logic High or Logic Low on the required pin.
 * If the input port number or pin number are not correct, The function will not handle the request.
 * If the pin is input, this function will enable/disable the internal pull-up resistor.
 */
void GPIO_writePin(uint8 port_num, uint8 pin_num, uint8 value)
{
    3150:	df 93       	push	r29
    3152:	cf 93       	push	r28
    3154:	00 d0       	rcall	.+0      	; 0x3156 <GPIO_writePin+0x6>
    3156:	00 d0       	rcall	.+0      	; 0x3158 <GPIO_writePin+0x8>
    3158:	0f 92       	push	r0
    315a:	cd b7       	in	r28, 0x3d	; 61
    315c:	de b7       	in	r29, 0x3e	; 62
    315e:	89 83       	std	Y+1, r24	; 0x01
    3160:	6a 83       	std	Y+2, r22	; 0x02
    3162:	4b 83       	std	Y+3, r20	; 0x03
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    3164:	8a 81       	ldd	r24, Y+2	; 0x02
    3166:	88 30       	cpi	r24, 0x08	; 8
    3168:	08 f0       	brcs	.+2      	; 0x316c <GPIO_writePin+0x1c>
    316a:	d5 c0       	rjmp	.+426    	; 0x3316 <GPIO_writePin+0x1c6>
    316c:	89 81       	ldd	r24, Y+1	; 0x01
    316e:	84 30       	cpi	r24, 0x04	; 4
    3170:	08 f0       	brcs	.+2      	; 0x3174 <GPIO_writePin+0x24>
    3172:	d1 c0       	rjmp	.+418    	; 0x3316 <GPIO_writePin+0x1c6>
		/* Do Nothing */
	}
	else
	{
		/* Write the pin value as required */
		switch(port_num)
    3174:	89 81       	ldd	r24, Y+1	; 0x01
    3176:	28 2f       	mov	r18, r24
    3178:	30 e0       	ldi	r19, 0x00	; 0
    317a:	3d 83       	std	Y+5, r19	; 0x05
    317c:	2c 83       	std	Y+4, r18	; 0x04
    317e:	8c 81       	ldd	r24, Y+4	; 0x04
    3180:	9d 81       	ldd	r25, Y+5	; 0x05
    3182:	81 30       	cpi	r24, 0x01	; 1
    3184:	91 05       	cpc	r25, r1
    3186:	09 f4       	brne	.+2      	; 0x318a <GPIO_writePin+0x3a>
    3188:	43 c0       	rjmp	.+134    	; 0x3210 <GPIO_writePin+0xc0>
    318a:	2c 81       	ldd	r18, Y+4	; 0x04
    318c:	3d 81       	ldd	r19, Y+5	; 0x05
    318e:	22 30       	cpi	r18, 0x02	; 2
    3190:	31 05       	cpc	r19, r1
    3192:	2c f4       	brge	.+10     	; 0x319e <GPIO_writePin+0x4e>
    3194:	8c 81       	ldd	r24, Y+4	; 0x04
    3196:	9d 81       	ldd	r25, Y+5	; 0x05
    3198:	00 97       	sbiw	r24, 0x00	; 0
    319a:	71 f0       	breq	.+28     	; 0x31b8 <GPIO_writePin+0x68>
    319c:	bc c0       	rjmp	.+376    	; 0x3316 <GPIO_writePin+0x1c6>
    319e:	2c 81       	ldd	r18, Y+4	; 0x04
    31a0:	3d 81       	ldd	r19, Y+5	; 0x05
    31a2:	22 30       	cpi	r18, 0x02	; 2
    31a4:	31 05       	cpc	r19, r1
    31a6:	09 f4       	brne	.+2      	; 0x31aa <GPIO_writePin+0x5a>
    31a8:	5f c0       	rjmp	.+190    	; 0x3268 <GPIO_writePin+0x118>
    31aa:	8c 81       	ldd	r24, Y+4	; 0x04
    31ac:	9d 81       	ldd	r25, Y+5	; 0x05
    31ae:	83 30       	cpi	r24, 0x03	; 3
    31b0:	91 05       	cpc	r25, r1
    31b2:	09 f4       	brne	.+2      	; 0x31b6 <GPIO_writePin+0x66>
    31b4:	85 c0       	rjmp	.+266    	; 0x32c0 <GPIO_writePin+0x170>
    31b6:	af c0       	rjmp	.+350    	; 0x3316 <GPIO_writePin+0x1c6>
		{
		case PORTA_ID:
			if(value == LOGIC_HIGH)
    31b8:	8b 81       	ldd	r24, Y+3	; 0x03
    31ba:	81 30       	cpi	r24, 0x01	; 1
    31bc:	a1 f4       	brne	.+40     	; 0x31e6 <GPIO_writePin+0x96>
			{
				SET_BIT(PORTA,pin_num);
    31be:	ab e3       	ldi	r26, 0x3B	; 59
    31c0:	b0 e0       	ldi	r27, 0x00	; 0
    31c2:	eb e3       	ldi	r30, 0x3B	; 59
    31c4:	f0 e0       	ldi	r31, 0x00	; 0
    31c6:	80 81       	ld	r24, Z
    31c8:	48 2f       	mov	r20, r24
    31ca:	8a 81       	ldd	r24, Y+2	; 0x02
    31cc:	28 2f       	mov	r18, r24
    31ce:	30 e0       	ldi	r19, 0x00	; 0
    31d0:	81 e0       	ldi	r24, 0x01	; 1
    31d2:	90 e0       	ldi	r25, 0x00	; 0
    31d4:	02 2e       	mov	r0, r18
    31d6:	02 c0       	rjmp	.+4      	; 0x31dc <GPIO_writePin+0x8c>
    31d8:	88 0f       	add	r24, r24
    31da:	99 1f       	adc	r25, r25
    31dc:	0a 94       	dec	r0
    31de:	e2 f7       	brpl	.-8      	; 0x31d8 <GPIO_writePin+0x88>
    31e0:	84 2b       	or	r24, r20
    31e2:	8c 93       	st	X, r24
    31e4:	98 c0       	rjmp	.+304    	; 0x3316 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTA,pin_num);
    31e6:	ab e3       	ldi	r26, 0x3B	; 59
    31e8:	b0 e0       	ldi	r27, 0x00	; 0
    31ea:	eb e3       	ldi	r30, 0x3B	; 59
    31ec:	f0 e0       	ldi	r31, 0x00	; 0
    31ee:	80 81       	ld	r24, Z
    31f0:	48 2f       	mov	r20, r24
    31f2:	8a 81       	ldd	r24, Y+2	; 0x02
    31f4:	28 2f       	mov	r18, r24
    31f6:	30 e0       	ldi	r19, 0x00	; 0
    31f8:	81 e0       	ldi	r24, 0x01	; 1
    31fa:	90 e0       	ldi	r25, 0x00	; 0
    31fc:	02 2e       	mov	r0, r18
    31fe:	02 c0       	rjmp	.+4      	; 0x3204 <GPIO_writePin+0xb4>
    3200:	88 0f       	add	r24, r24
    3202:	99 1f       	adc	r25, r25
    3204:	0a 94       	dec	r0
    3206:	e2 f7       	brpl	.-8      	; 0x3200 <GPIO_writePin+0xb0>
    3208:	80 95       	com	r24
    320a:	84 23       	and	r24, r20
    320c:	8c 93       	st	X, r24
    320e:	83 c0       	rjmp	.+262    	; 0x3316 <GPIO_writePin+0x1c6>
			}
			break;
		case PORTB_ID:
			if(value == LOGIC_HIGH)
    3210:	8b 81       	ldd	r24, Y+3	; 0x03
    3212:	81 30       	cpi	r24, 0x01	; 1
    3214:	a1 f4       	brne	.+40     	; 0x323e <GPIO_writePin+0xee>
			{
				SET_BIT(PORTB,pin_num);
    3216:	a8 e3       	ldi	r26, 0x38	; 56
    3218:	b0 e0       	ldi	r27, 0x00	; 0
    321a:	e8 e3       	ldi	r30, 0x38	; 56
    321c:	f0 e0       	ldi	r31, 0x00	; 0
    321e:	80 81       	ld	r24, Z
    3220:	48 2f       	mov	r20, r24
    3222:	8a 81       	ldd	r24, Y+2	; 0x02
    3224:	28 2f       	mov	r18, r24
    3226:	30 e0       	ldi	r19, 0x00	; 0
    3228:	81 e0       	ldi	r24, 0x01	; 1
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	02 2e       	mov	r0, r18
    322e:	02 c0       	rjmp	.+4      	; 0x3234 <GPIO_writePin+0xe4>
    3230:	88 0f       	add	r24, r24
    3232:	99 1f       	adc	r25, r25
    3234:	0a 94       	dec	r0
    3236:	e2 f7       	brpl	.-8      	; 0x3230 <GPIO_writePin+0xe0>
    3238:	84 2b       	or	r24, r20
    323a:	8c 93       	st	X, r24
    323c:	6c c0       	rjmp	.+216    	; 0x3316 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTB,pin_num);
    323e:	a8 e3       	ldi	r26, 0x38	; 56
    3240:	b0 e0       	ldi	r27, 0x00	; 0
    3242:	e8 e3       	ldi	r30, 0x38	; 56
    3244:	f0 e0       	ldi	r31, 0x00	; 0
    3246:	80 81       	ld	r24, Z
    3248:	48 2f       	mov	r20, r24
    324a:	8a 81       	ldd	r24, Y+2	; 0x02
    324c:	28 2f       	mov	r18, r24
    324e:	30 e0       	ldi	r19, 0x00	; 0
    3250:	81 e0       	ldi	r24, 0x01	; 1
    3252:	90 e0       	ldi	r25, 0x00	; 0
    3254:	02 2e       	mov	r0, r18
    3256:	02 c0       	rjmp	.+4      	; 0x325c <GPIO_writePin+0x10c>
    3258:	88 0f       	add	r24, r24
    325a:	99 1f       	adc	r25, r25
    325c:	0a 94       	dec	r0
    325e:	e2 f7       	brpl	.-8      	; 0x3258 <GPIO_writePin+0x108>
    3260:	80 95       	com	r24
    3262:	84 23       	and	r24, r20
    3264:	8c 93       	st	X, r24
    3266:	57 c0       	rjmp	.+174    	; 0x3316 <GPIO_writePin+0x1c6>
			}
			break;
		case PORTC_ID:
			if(value == LOGIC_HIGH)
    3268:	8b 81       	ldd	r24, Y+3	; 0x03
    326a:	81 30       	cpi	r24, 0x01	; 1
    326c:	a1 f4       	brne	.+40     	; 0x3296 <GPIO_writePin+0x146>
			{
				SET_BIT(PORTC,pin_num);
    326e:	a5 e3       	ldi	r26, 0x35	; 53
    3270:	b0 e0       	ldi	r27, 0x00	; 0
    3272:	e5 e3       	ldi	r30, 0x35	; 53
    3274:	f0 e0       	ldi	r31, 0x00	; 0
    3276:	80 81       	ld	r24, Z
    3278:	48 2f       	mov	r20, r24
    327a:	8a 81       	ldd	r24, Y+2	; 0x02
    327c:	28 2f       	mov	r18, r24
    327e:	30 e0       	ldi	r19, 0x00	; 0
    3280:	81 e0       	ldi	r24, 0x01	; 1
    3282:	90 e0       	ldi	r25, 0x00	; 0
    3284:	02 2e       	mov	r0, r18
    3286:	02 c0       	rjmp	.+4      	; 0x328c <GPIO_writePin+0x13c>
    3288:	88 0f       	add	r24, r24
    328a:	99 1f       	adc	r25, r25
    328c:	0a 94       	dec	r0
    328e:	e2 f7       	brpl	.-8      	; 0x3288 <GPIO_writePin+0x138>
    3290:	84 2b       	or	r24, r20
    3292:	8c 93       	st	X, r24
    3294:	40 c0       	rjmp	.+128    	; 0x3316 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTC,pin_num);
    3296:	a5 e3       	ldi	r26, 0x35	; 53
    3298:	b0 e0       	ldi	r27, 0x00	; 0
    329a:	e5 e3       	ldi	r30, 0x35	; 53
    329c:	f0 e0       	ldi	r31, 0x00	; 0
    329e:	80 81       	ld	r24, Z
    32a0:	48 2f       	mov	r20, r24
    32a2:	8a 81       	ldd	r24, Y+2	; 0x02
    32a4:	28 2f       	mov	r18, r24
    32a6:	30 e0       	ldi	r19, 0x00	; 0
    32a8:	81 e0       	ldi	r24, 0x01	; 1
    32aa:	90 e0       	ldi	r25, 0x00	; 0
    32ac:	02 2e       	mov	r0, r18
    32ae:	02 c0       	rjmp	.+4      	; 0x32b4 <GPIO_writePin+0x164>
    32b0:	88 0f       	add	r24, r24
    32b2:	99 1f       	adc	r25, r25
    32b4:	0a 94       	dec	r0
    32b6:	e2 f7       	brpl	.-8      	; 0x32b0 <GPIO_writePin+0x160>
    32b8:	80 95       	com	r24
    32ba:	84 23       	and	r24, r20
    32bc:	8c 93       	st	X, r24
    32be:	2b c0       	rjmp	.+86     	; 0x3316 <GPIO_writePin+0x1c6>
			}
			break;
		case PORTD_ID:
			if(value == LOGIC_HIGH)
    32c0:	8b 81       	ldd	r24, Y+3	; 0x03
    32c2:	81 30       	cpi	r24, 0x01	; 1
    32c4:	a1 f4       	brne	.+40     	; 0x32ee <GPIO_writePin+0x19e>
			{
				SET_BIT(PORTD,pin_num);
    32c6:	a2 e3       	ldi	r26, 0x32	; 50
    32c8:	b0 e0       	ldi	r27, 0x00	; 0
    32ca:	e2 e3       	ldi	r30, 0x32	; 50
    32cc:	f0 e0       	ldi	r31, 0x00	; 0
    32ce:	80 81       	ld	r24, Z
    32d0:	48 2f       	mov	r20, r24
    32d2:	8a 81       	ldd	r24, Y+2	; 0x02
    32d4:	28 2f       	mov	r18, r24
    32d6:	30 e0       	ldi	r19, 0x00	; 0
    32d8:	81 e0       	ldi	r24, 0x01	; 1
    32da:	90 e0       	ldi	r25, 0x00	; 0
    32dc:	02 2e       	mov	r0, r18
    32de:	02 c0       	rjmp	.+4      	; 0x32e4 <GPIO_writePin+0x194>
    32e0:	88 0f       	add	r24, r24
    32e2:	99 1f       	adc	r25, r25
    32e4:	0a 94       	dec	r0
    32e6:	e2 f7       	brpl	.-8      	; 0x32e0 <GPIO_writePin+0x190>
    32e8:	84 2b       	or	r24, r20
    32ea:	8c 93       	st	X, r24
    32ec:	14 c0       	rjmp	.+40     	; 0x3316 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTD,pin_num);
    32ee:	a2 e3       	ldi	r26, 0x32	; 50
    32f0:	b0 e0       	ldi	r27, 0x00	; 0
    32f2:	e2 e3       	ldi	r30, 0x32	; 50
    32f4:	f0 e0       	ldi	r31, 0x00	; 0
    32f6:	80 81       	ld	r24, Z
    32f8:	48 2f       	mov	r20, r24
    32fa:	8a 81       	ldd	r24, Y+2	; 0x02
    32fc:	28 2f       	mov	r18, r24
    32fe:	30 e0       	ldi	r19, 0x00	; 0
    3300:	81 e0       	ldi	r24, 0x01	; 1
    3302:	90 e0       	ldi	r25, 0x00	; 0
    3304:	02 2e       	mov	r0, r18
    3306:	02 c0       	rjmp	.+4      	; 0x330c <GPIO_writePin+0x1bc>
    3308:	88 0f       	add	r24, r24
    330a:	99 1f       	adc	r25, r25
    330c:	0a 94       	dec	r0
    330e:	e2 f7       	brpl	.-8      	; 0x3308 <GPIO_writePin+0x1b8>
    3310:	80 95       	com	r24
    3312:	84 23       	and	r24, r20
    3314:	8c 93       	st	X, r24
			}
			break;
		}
	}
}
    3316:	0f 90       	pop	r0
    3318:	0f 90       	pop	r0
    331a:	0f 90       	pop	r0
    331c:	0f 90       	pop	r0
    331e:	0f 90       	pop	r0
    3320:	cf 91       	pop	r28
    3322:	df 91       	pop	r29
    3324:	08 95       	ret

00003326 <GPIO_readPin>:
 * Description :
 * Read and return the value for the required pin, it should be Logic High or Logic Low.
 * If the input port number or pin number are not correct, The function will return Logic Low.
 */
uint8 GPIO_readPin(uint8 port_num, uint8 pin_num)
{
    3326:	df 93       	push	r29
    3328:	cf 93       	push	r28
    332a:	00 d0       	rcall	.+0      	; 0x332c <GPIO_readPin+0x6>
    332c:	00 d0       	rcall	.+0      	; 0x332e <GPIO_readPin+0x8>
    332e:	0f 92       	push	r0
    3330:	cd b7       	in	r28, 0x3d	; 61
    3332:	de b7       	in	r29, 0x3e	; 62
    3334:	8a 83       	std	Y+2, r24	; 0x02
    3336:	6b 83       	std	Y+3, r22	; 0x03
	uint8 pin_value = LOGIC_LOW;
    3338:	19 82       	std	Y+1, r1	; 0x01
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    333a:	8b 81       	ldd	r24, Y+3	; 0x03
    333c:	88 30       	cpi	r24, 0x08	; 8
    333e:	08 f0       	brcs	.+2      	; 0x3342 <GPIO_readPin+0x1c>
    3340:	84 c0       	rjmp	.+264    	; 0x344a <GPIO_readPin+0x124>
    3342:	8a 81       	ldd	r24, Y+2	; 0x02
    3344:	84 30       	cpi	r24, 0x04	; 4
    3346:	08 f0       	brcs	.+2      	; 0x334a <GPIO_readPin+0x24>
    3348:	80 c0       	rjmp	.+256    	; 0x344a <GPIO_readPin+0x124>
		/* Do Nothing */
	}
	else
	{
		/* Read the pin value as required */
		switch(port_num)
    334a:	8a 81       	ldd	r24, Y+2	; 0x02
    334c:	28 2f       	mov	r18, r24
    334e:	30 e0       	ldi	r19, 0x00	; 0
    3350:	3d 83       	std	Y+5, r19	; 0x05
    3352:	2c 83       	std	Y+4, r18	; 0x04
    3354:	4c 81       	ldd	r20, Y+4	; 0x04
    3356:	5d 81       	ldd	r21, Y+5	; 0x05
    3358:	41 30       	cpi	r20, 0x01	; 1
    335a:	51 05       	cpc	r21, r1
    335c:	79 f1       	breq	.+94     	; 0x33bc <GPIO_readPin+0x96>
    335e:	8c 81       	ldd	r24, Y+4	; 0x04
    3360:	9d 81       	ldd	r25, Y+5	; 0x05
    3362:	82 30       	cpi	r24, 0x02	; 2
    3364:	91 05       	cpc	r25, r1
    3366:	34 f4       	brge	.+12     	; 0x3374 <GPIO_readPin+0x4e>
    3368:	2c 81       	ldd	r18, Y+4	; 0x04
    336a:	3d 81       	ldd	r19, Y+5	; 0x05
    336c:	21 15       	cp	r18, r1
    336e:	31 05       	cpc	r19, r1
    3370:	69 f0       	breq	.+26     	; 0x338c <GPIO_readPin+0x66>
    3372:	6b c0       	rjmp	.+214    	; 0x344a <GPIO_readPin+0x124>
    3374:	4c 81       	ldd	r20, Y+4	; 0x04
    3376:	5d 81       	ldd	r21, Y+5	; 0x05
    3378:	42 30       	cpi	r20, 0x02	; 2
    337a:	51 05       	cpc	r21, r1
    337c:	b9 f1       	breq	.+110    	; 0x33ec <GPIO_readPin+0xc6>
    337e:	8c 81       	ldd	r24, Y+4	; 0x04
    3380:	9d 81       	ldd	r25, Y+5	; 0x05
    3382:	83 30       	cpi	r24, 0x03	; 3
    3384:	91 05       	cpc	r25, r1
    3386:	09 f4       	brne	.+2      	; 0x338a <GPIO_readPin+0x64>
    3388:	49 c0       	rjmp	.+146    	; 0x341c <GPIO_readPin+0xf6>
    338a:	5f c0       	rjmp	.+190    	; 0x344a <GPIO_readPin+0x124>
		{
		case PORTA_ID:
			if(BIT_IS_SET(PINA,pin_num))
    338c:	e9 e3       	ldi	r30, 0x39	; 57
    338e:	f0 e0       	ldi	r31, 0x00	; 0
    3390:	80 81       	ld	r24, Z
    3392:	28 2f       	mov	r18, r24
    3394:	30 e0       	ldi	r19, 0x00	; 0
    3396:	8b 81       	ldd	r24, Y+3	; 0x03
    3398:	88 2f       	mov	r24, r24
    339a:	90 e0       	ldi	r25, 0x00	; 0
    339c:	a9 01       	movw	r20, r18
    339e:	02 c0       	rjmp	.+4      	; 0x33a4 <GPIO_readPin+0x7e>
    33a0:	55 95       	asr	r21
    33a2:	47 95       	ror	r20
    33a4:	8a 95       	dec	r24
    33a6:	e2 f7       	brpl	.-8      	; 0x33a0 <GPIO_readPin+0x7a>
    33a8:	ca 01       	movw	r24, r20
    33aa:	81 70       	andi	r24, 0x01	; 1
    33ac:	90 70       	andi	r25, 0x00	; 0
    33ae:	88 23       	and	r24, r24
    33b0:	19 f0       	breq	.+6      	; 0x33b8 <GPIO_readPin+0x92>
			{
				pin_value = LOGIC_HIGH;
    33b2:	81 e0       	ldi	r24, 0x01	; 1
    33b4:	89 83       	std	Y+1, r24	; 0x01
    33b6:	49 c0       	rjmp	.+146    	; 0x344a <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    33b8:	19 82       	std	Y+1, r1	; 0x01
    33ba:	47 c0       	rjmp	.+142    	; 0x344a <GPIO_readPin+0x124>
			}
			break;
		case PORTB_ID:
			if(BIT_IS_SET(PINB,pin_num))
    33bc:	e6 e3       	ldi	r30, 0x36	; 54
    33be:	f0 e0       	ldi	r31, 0x00	; 0
    33c0:	80 81       	ld	r24, Z
    33c2:	28 2f       	mov	r18, r24
    33c4:	30 e0       	ldi	r19, 0x00	; 0
    33c6:	8b 81       	ldd	r24, Y+3	; 0x03
    33c8:	88 2f       	mov	r24, r24
    33ca:	90 e0       	ldi	r25, 0x00	; 0
    33cc:	a9 01       	movw	r20, r18
    33ce:	02 c0       	rjmp	.+4      	; 0x33d4 <GPIO_readPin+0xae>
    33d0:	55 95       	asr	r21
    33d2:	47 95       	ror	r20
    33d4:	8a 95       	dec	r24
    33d6:	e2 f7       	brpl	.-8      	; 0x33d0 <GPIO_readPin+0xaa>
    33d8:	ca 01       	movw	r24, r20
    33da:	81 70       	andi	r24, 0x01	; 1
    33dc:	90 70       	andi	r25, 0x00	; 0
    33de:	88 23       	and	r24, r24
    33e0:	19 f0       	breq	.+6      	; 0x33e8 <GPIO_readPin+0xc2>
			{
				pin_value = LOGIC_HIGH;
    33e2:	81 e0       	ldi	r24, 0x01	; 1
    33e4:	89 83       	std	Y+1, r24	; 0x01
    33e6:	31 c0       	rjmp	.+98     	; 0x344a <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    33e8:	19 82       	std	Y+1, r1	; 0x01
    33ea:	2f c0       	rjmp	.+94     	; 0x344a <GPIO_readPin+0x124>
			}
			break;
		case PORTC_ID:
			if(BIT_IS_SET(PINC,pin_num))
    33ec:	e3 e3       	ldi	r30, 0x33	; 51
    33ee:	f0 e0       	ldi	r31, 0x00	; 0
    33f0:	80 81       	ld	r24, Z
    33f2:	28 2f       	mov	r18, r24
    33f4:	30 e0       	ldi	r19, 0x00	; 0
    33f6:	8b 81       	ldd	r24, Y+3	; 0x03
    33f8:	88 2f       	mov	r24, r24
    33fa:	90 e0       	ldi	r25, 0x00	; 0
    33fc:	a9 01       	movw	r20, r18
    33fe:	02 c0       	rjmp	.+4      	; 0x3404 <GPIO_readPin+0xde>
    3400:	55 95       	asr	r21
    3402:	47 95       	ror	r20
    3404:	8a 95       	dec	r24
    3406:	e2 f7       	brpl	.-8      	; 0x3400 <GPIO_readPin+0xda>
    3408:	ca 01       	movw	r24, r20
    340a:	81 70       	andi	r24, 0x01	; 1
    340c:	90 70       	andi	r25, 0x00	; 0
    340e:	88 23       	and	r24, r24
    3410:	19 f0       	breq	.+6      	; 0x3418 <GPIO_readPin+0xf2>
			{
				pin_value = LOGIC_HIGH;
    3412:	81 e0       	ldi	r24, 0x01	; 1
    3414:	89 83       	std	Y+1, r24	; 0x01
    3416:	19 c0       	rjmp	.+50     	; 0x344a <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    3418:	19 82       	std	Y+1, r1	; 0x01
    341a:	17 c0       	rjmp	.+46     	; 0x344a <GPIO_readPin+0x124>
			}
			break;
		case PORTD_ID:
			if(BIT_IS_SET(PIND,pin_num))
    341c:	e0 e3       	ldi	r30, 0x30	; 48
    341e:	f0 e0       	ldi	r31, 0x00	; 0
    3420:	80 81       	ld	r24, Z
    3422:	28 2f       	mov	r18, r24
    3424:	30 e0       	ldi	r19, 0x00	; 0
    3426:	8b 81       	ldd	r24, Y+3	; 0x03
    3428:	88 2f       	mov	r24, r24
    342a:	90 e0       	ldi	r25, 0x00	; 0
    342c:	a9 01       	movw	r20, r18
    342e:	02 c0       	rjmp	.+4      	; 0x3434 <GPIO_readPin+0x10e>
    3430:	55 95       	asr	r21
    3432:	47 95       	ror	r20
    3434:	8a 95       	dec	r24
    3436:	e2 f7       	brpl	.-8      	; 0x3430 <GPIO_readPin+0x10a>
    3438:	ca 01       	movw	r24, r20
    343a:	81 70       	andi	r24, 0x01	; 1
    343c:	90 70       	andi	r25, 0x00	; 0
    343e:	88 23       	and	r24, r24
    3440:	19 f0       	breq	.+6      	; 0x3448 <GPIO_readPin+0x122>
			{
				pin_value = LOGIC_HIGH;
    3442:	81 e0       	ldi	r24, 0x01	; 1
    3444:	89 83       	std	Y+1, r24	; 0x01
    3446:	01 c0       	rjmp	.+2      	; 0x344a <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    3448:	19 82       	std	Y+1, r1	; 0x01
			}
			break;
		}
	}

	return pin_value;
    344a:	89 81       	ldd	r24, Y+1	; 0x01
}
    344c:	0f 90       	pop	r0
    344e:	0f 90       	pop	r0
    3450:	0f 90       	pop	r0
    3452:	0f 90       	pop	r0
    3454:	0f 90       	pop	r0
    3456:	cf 91       	pop	r28
    3458:	df 91       	pop	r29
    345a:	08 95       	ret

0000345c <GPIO_setupPortDirection>:
 * If the direction value is PORT_INPUT all pins in this port should be input pins.
 * If the direction value is PORT_OUTPUT all pins in this port should be output pins.
 * If the input port number is not correct, The function will not handle the request.
 */
void GPIO_setupPortDirection(uint8 port_num, GPIO_PortDirectionType direction)
{
    345c:	df 93       	push	r29
    345e:	cf 93       	push	r28
    3460:	00 d0       	rcall	.+0      	; 0x3462 <GPIO_setupPortDirection+0x6>
    3462:	00 d0       	rcall	.+0      	; 0x3464 <GPIO_setupPortDirection+0x8>
    3464:	cd b7       	in	r28, 0x3d	; 61
    3466:	de b7       	in	r29, 0x3e	; 62
    3468:	89 83       	std	Y+1, r24	; 0x01
    346a:	6a 83       	std	Y+2, r22	; 0x02
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    346c:	89 81       	ldd	r24, Y+1	; 0x01
    346e:	84 30       	cpi	r24, 0x04	; 4
    3470:	90 f5       	brcc	.+100    	; 0x34d6 <GPIO_setupPortDirection+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Setup the port direction as required */
		switch(port_num)
    3472:	89 81       	ldd	r24, Y+1	; 0x01
    3474:	28 2f       	mov	r18, r24
    3476:	30 e0       	ldi	r19, 0x00	; 0
    3478:	3c 83       	std	Y+4, r19	; 0x04
    347a:	2b 83       	std	Y+3, r18	; 0x03
    347c:	8b 81       	ldd	r24, Y+3	; 0x03
    347e:	9c 81       	ldd	r25, Y+4	; 0x04
    3480:	81 30       	cpi	r24, 0x01	; 1
    3482:	91 05       	cpc	r25, r1
    3484:	d1 f0       	breq	.+52     	; 0x34ba <GPIO_setupPortDirection+0x5e>
    3486:	2b 81       	ldd	r18, Y+3	; 0x03
    3488:	3c 81       	ldd	r19, Y+4	; 0x04
    348a:	22 30       	cpi	r18, 0x02	; 2
    348c:	31 05       	cpc	r19, r1
    348e:	2c f4       	brge	.+10     	; 0x349a <GPIO_setupPortDirection+0x3e>
    3490:	8b 81       	ldd	r24, Y+3	; 0x03
    3492:	9c 81       	ldd	r25, Y+4	; 0x04
    3494:	00 97       	sbiw	r24, 0x00	; 0
    3496:	61 f0       	breq	.+24     	; 0x34b0 <GPIO_setupPortDirection+0x54>
    3498:	1e c0       	rjmp	.+60     	; 0x34d6 <GPIO_setupPortDirection+0x7a>
    349a:	2b 81       	ldd	r18, Y+3	; 0x03
    349c:	3c 81       	ldd	r19, Y+4	; 0x04
    349e:	22 30       	cpi	r18, 0x02	; 2
    34a0:	31 05       	cpc	r19, r1
    34a2:	81 f0       	breq	.+32     	; 0x34c4 <GPIO_setupPortDirection+0x68>
    34a4:	8b 81       	ldd	r24, Y+3	; 0x03
    34a6:	9c 81       	ldd	r25, Y+4	; 0x04
    34a8:	83 30       	cpi	r24, 0x03	; 3
    34aa:	91 05       	cpc	r25, r1
    34ac:	81 f0       	breq	.+32     	; 0x34ce <GPIO_setupPortDirection+0x72>
    34ae:	13 c0       	rjmp	.+38     	; 0x34d6 <GPIO_setupPortDirection+0x7a>
		{
		case PORTA_ID:
			DDRA = direction;
    34b0:	ea e3       	ldi	r30, 0x3A	; 58
    34b2:	f0 e0       	ldi	r31, 0x00	; 0
    34b4:	8a 81       	ldd	r24, Y+2	; 0x02
    34b6:	80 83       	st	Z, r24
    34b8:	0e c0       	rjmp	.+28     	; 0x34d6 <GPIO_setupPortDirection+0x7a>
			break;
		case PORTB_ID:
			DDRB = direction;
    34ba:	e7 e3       	ldi	r30, 0x37	; 55
    34bc:	f0 e0       	ldi	r31, 0x00	; 0
    34be:	8a 81       	ldd	r24, Y+2	; 0x02
    34c0:	80 83       	st	Z, r24
    34c2:	09 c0       	rjmp	.+18     	; 0x34d6 <GPIO_setupPortDirection+0x7a>
			break;
		case PORTC_ID:
			DDRC = direction;
    34c4:	e4 e3       	ldi	r30, 0x34	; 52
    34c6:	f0 e0       	ldi	r31, 0x00	; 0
    34c8:	8a 81       	ldd	r24, Y+2	; 0x02
    34ca:	80 83       	st	Z, r24
    34cc:	04 c0       	rjmp	.+8      	; 0x34d6 <GPIO_setupPortDirection+0x7a>
			break;
		case PORTD_ID:
			DDRD = direction;
    34ce:	e1 e3       	ldi	r30, 0x31	; 49
    34d0:	f0 e0       	ldi	r31, 0x00	; 0
    34d2:	8a 81       	ldd	r24, Y+2	; 0x02
    34d4:	80 83       	st	Z, r24
			break;
		}
	}
}
    34d6:	0f 90       	pop	r0
    34d8:	0f 90       	pop	r0
    34da:	0f 90       	pop	r0
    34dc:	0f 90       	pop	r0
    34de:	cf 91       	pop	r28
    34e0:	df 91       	pop	r29
    34e2:	08 95       	ret

000034e4 <GPIO_writePort>:
 * If any pin in the port is output pin the value will be written.
 * If any pin in the port is input pin this will activate/deactivate the internal pull-up resistor.
 * If the input port number is not correct, The function will not handle the request.
 */
void GPIO_writePort(uint8 port_num, uint8 value)
{
    34e4:	df 93       	push	r29
    34e6:	cf 93       	push	r28
    34e8:	00 d0       	rcall	.+0      	; 0x34ea <GPIO_writePort+0x6>
    34ea:	00 d0       	rcall	.+0      	; 0x34ec <GPIO_writePort+0x8>
    34ec:	cd b7       	in	r28, 0x3d	; 61
    34ee:	de b7       	in	r29, 0x3e	; 62
    34f0:	89 83       	std	Y+1, r24	; 0x01
    34f2:	6a 83       	std	Y+2, r22	; 0x02
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    34f4:	89 81       	ldd	r24, Y+1	; 0x01
    34f6:	84 30       	cpi	r24, 0x04	; 4
    34f8:	90 f5       	brcc	.+100    	; 0x355e <GPIO_writePort+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Write the port value as required */
		switch(port_num)
    34fa:	89 81       	ldd	r24, Y+1	; 0x01
    34fc:	28 2f       	mov	r18, r24
    34fe:	30 e0       	ldi	r19, 0x00	; 0
    3500:	3c 83       	std	Y+4, r19	; 0x04
    3502:	2b 83       	std	Y+3, r18	; 0x03
    3504:	8b 81       	ldd	r24, Y+3	; 0x03
    3506:	9c 81       	ldd	r25, Y+4	; 0x04
    3508:	81 30       	cpi	r24, 0x01	; 1
    350a:	91 05       	cpc	r25, r1
    350c:	d1 f0       	breq	.+52     	; 0x3542 <GPIO_writePort+0x5e>
    350e:	2b 81       	ldd	r18, Y+3	; 0x03
    3510:	3c 81       	ldd	r19, Y+4	; 0x04
    3512:	22 30       	cpi	r18, 0x02	; 2
    3514:	31 05       	cpc	r19, r1
    3516:	2c f4       	brge	.+10     	; 0x3522 <GPIO_writePort+0x3e>
    3518:	8b 81       	ldd	r24, Y+3	; 0x03
    351a:	9c 81       	ldd	r25, Y+4	; 0x04
    351c:	00 97       	sbiw	r24, 0x00	; 0
    351e:	61 f0       	breq	.+24     	; 0x3538 <GPIO_writePort+0x54>
    3520:	1e c0       	rjmp	.+60     	; 0x355e <GPIO_writePort+0x7a>
    3522:	2b 81       	ldd	r18, Y+3	; 0x03
    3524:	3c 81       	ldd	r19, Y+4	; 0x04
    3526:	22 30       	cpi	r18, 0x02	; 2
    3528:	31 05       	cpc	r19, r1
    352a:	81 f0       	breq	.+32     	; 0x354c <GPIO_writePort+0x68>
    352c:	8b 81       	ldd	r24, Y+3	; 0x03
    352e:	9c 81       	ldd	r25, Y+4	; 0x04
    3530:	83 30       	cpi	r24, 0x03	; 3
    3532:	91 05       	cpc	r25, r1
    3534:	81 f0       	breq	.+32     	; 0x3556 <GPIO_writePort+0x72>
    3536:	13 c0       	rjmp	.+38     	; 0x355e <GPIO_writePort+0x7a>
		{
		case PORTA_ID:
			PORTA = value;
    3538:	eb e3       	ldi	r30, 0x3B	; 59
    353a:	f0 e0       	ldi	r31, 0x00	; 0
    353c:	8a 81       	ldd	r24, Y+2	; 0x02
    353e:	80 83       	st	Z, r24
    3540:	0e c0       	rjmp	.+28     	; 0x355e <GPIO_writePort+0x7a>
			break;
		case PORTB_ID:
			PORTB = value;
    3542:	e8 e3       	ldi	r30, 0x38	; 56
    3544:	f0 e0       	ldi	r31, 0x00	; 0
    3546:	8a 81       	ldd	r24, Y+2	; 0x02
    3548:	80 83       	st	Z, r24
    354a:	09 c0       	rjmp	.+18     	; 0x355e <GPIO_writePort+0x7a>
			break;
		case PORTC_ID:
			PORTC = value;
    354c:	e5 e3       	ldi	r30, 0x35	; 53
    354e:	f0 e0       	ldi	r31, 0x00	; 0
    3550:	8a 81       	ldd	r24, Y+2	; 0x02
    3552:	80 83       	st	Z, r24
    3554:	04 c0       	rjmp	.+8      	; 0x355e <GPIO_writePort+0x7a>
			break;
		case PORTD_ID:
			PORTD = value;
    3556:	e2 e3       	ldi	r30, 0x32	; 50
    3558:	f0 e0       	ldi	r31, 0x00	; 0
    355a:	8a 81       	ldd	r24, Y+2	; 0x02
    355c:	80 83       	st	Z, r24
			break;
		}
	}
}
    355e:	0f 90       	pop	r0
    3560:	0f 90       	pop	r0
    3562:	0f 90       	pop	r0
    3564:	0f 90       	pop	r0
    3566:	cf 91       	pop	r28
    3568:	df 91       	pop	r29
    356a:	08 95       	ret

0000356c <GPIO_readPort>:
 * Description :
 * Read and return the value of the required port.
 * If the input port number is not correct, The function will return ZERO value.
 */
uint8 GPIO_readPort(uint8 port_num)
{
    356c:	df 93       	push	r29
    356e:	cf 93       	push	r28
    3570:	00 d0       	rcall	.+0      	; 0x3572 <GPIO_readPort+0x6>
    3572:	00 d0       	rcall	.+0      	; 0x3574 <GPIO_readPort+0x8>
    3574:	cd b7       	in	r28, 0x3d	; 61
    3576:	de b7       	in	r29, 0x3e	; 62
    3578:	8a 83       	std	Y+2, r24	; 0x02
	uint8 value = LOGIC_LOW;
    357a:	19 82       	std	Y+1, r1	; 0x01

	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    357c:	8a 81       	ldd	r24, Y+2	; 0x02
    357e:	84 30       	cpi	r24, 0x04	; 4
    3580:	90 f5       	brcc	.+100    	; 0x35e6 <GPIO_readPort+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Read the port value as required */
		switch(port_num)
    3582:	8a 81       	ldd	r24, Y+2	; 0x02
    3584:	28 2f       	mov	r18, r24
    3586:	30 e0       	ldi	r19, 0x00	; 0
    3588:	3c 83       	std	Y+4, r19	; 0x04
    358a:	2b 83       	std	Y+3, r18	; 0x03
    358c:	8b 81       	ldd	r24, Y+3	; 0x03
    358e:	9c 81       	ldd	r25, Y+4	; 0x04
    3590:	81 30       	cpi	r24, 0x01	; 1
    3592:	91 05       	cpc	r25, r1
    3594:	d1 f0       	breq	.+52     	; 0x35ca <GPIO_readPort+0x5e>
    3596:	2b 81       	ldd	r18, Y+3	; 0x03
    3598:	3c 81       	ldd	r19, Y+4	; 0x04
    359a:	22 30       	cpi	r18, 0x02	; 2
    359c:	31 05       	cpc	r19, r1
    359e:	2c f4       	brge	.+10     	; 0x35aa <GPIO_readPort+0x3e>
    35a0:	8b 81       	ldd	r24, Y+3	; 0x03
    35a2:	9c 81       	ldd	r25, Y+4	; 0x04
    35a4:	00 97       	sbiw	r24, 0x00	; 0
    35a6:	61 f0       	breq	.+24     	; 0x35c0 <GPIO_readPort+0x54>
    35a8:	1e c0       	rjmp	.+60     	; 0x35e6 <GPIO_readPort+0x7a>
    35aa:	2b 81       	ldd	r18, Y+3	; 0x03
    35ac:	3c 81       	ldd	r19, Y+4	; 0x04
    35ae:	22 30       	cpi	r18, 0x02	; 2
    35b0:	31 05       	cpc	r19, r1
    35b2:	81 f0       	breq	.+32     	; 0x35d4 <GPIO_readPort+0x68>
    35b4:	8b 81       	ldd	r24, Y+3	; 0x03
    35b6:	9c 81       	ldd	r25, Y+4	; 0x04
    35b8:	83 30       	cpi	r24, 0x03	; 3
    35ba:	91 05       	cpc	r25, r1
    35bc:	81 f0       	breq	.+32     	; 0x35de <GPIO_readPort+0x72>
    35be:	13 c0       	rjmp	.+38     	; 0x35e6 <GPIO_readPort+0x7a>
		{
		case PORTA_ID:
			value = PINA;
    35c0:	e9 e3       	ldi	r30, 0x39	; 57
    35c2:	f0 e0       	ldi	r31, 0x00	; 0
    35c4:	80 81       	ld	r24, Z
    35c6:	89 83       	std	Y+1, r24	; 0x01
    35c8:	0e c0       	rjmp	.+28     	; 0x35e6 <GPIO_readPort+0x7a>
			break;
		case PORTB_ID:
			value = PINB;
    35ca:	e6 e3       	ldi	r30, 0x36	; 54
    35cc:	f0 e0       	ldi	r31, 0x00	; 0
    35ce:	80 81       	ld	r24, Z
    35d0:	89 83       	std	Y+1, r24	; 0x01
    35d2:	09 c0       	rjmp	.+18     	; 0x35e6 <GPIO_readPort+0x7a>
			break;
		case PORTC_ID:
			value = PINC;
    35d4:	e3 e3       	ldi	r30, 0x33	; 51
    35d6:	f0 e0       	ldi	r31, 0x00	; 0
    35d8:	80 81       	ld	r24, Z
    35da:	89 83       	std	Y+1, r24	; 0x01
    35dc:	04 c0       	rjmp	.+8      	; 0x35e6 <GPIO_readPort+0x7a>
			break;
		case PORTD_ID:
			value = PIND;
    35de:	e0 e3       	ldi	r30, 0x30	; 48
    35e0:	f0 e0       	ldi	r31, 0x00	; 0
    35e2:	80 81       	ld	r24, Z
    35e4:	89 83       	std	Y+1, r24	; 0x01
			break;
		}
	}

	return value;
    35e6:	89 81       	ldd	r24, Y+1	; 0x01
}
    35e8:	0f 90       	pop	r0
    35ea:	0f 90       	pop	r0
    35ec:	0f 90       	pop	r0
    35ee:	0f 90       	pop	r0
    35f0:	cf 91       	pop	r28
    35f2:	df 91       	pop	r29
    35f4:	08 95       	ret

000035f6 <KEYPAD_getPressedKey>:

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/

uint8 KEYPAD_getPressedKey(void) {
    35f6:	df 93       	push	r29
    35f8:	cf 93       	push	r28
    35fa:	cd b7       	in	r28, 0x3d	; 61
    35fc:	de b7       	in	r29, 0x3e	; 62
    35fe:	60 97       	sbiw	r28, 0x10	; 16
    3600:	0f b6       	in	r0, 0x3f	; 63
    3602:	f8 94       	cli
    3604:	de bf       	out	0x3e, r29	; 62
    3606:	0f be       	out	0x3f, r0	; 63
    3608:	cd bf       	out	0x3d, r28	; 61
	uint8 col, row;
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID,
    360a:	81 e0       	ldi	r24, 0x01	; 1
    360c:	64 e0       	ldi	r22, 0x04	; 4
    360e:	40 e0       	ldi	r20, 0x00	; 0
    3610:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID + 1,
    3614:	81 e0       	ldi	r24, 0x01	; 1
    3616:	65 e0       	ldi	r22, 0x05	; 5
    3618:	40 e0       	ldi	r20, 0x00	; 0
    361a:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID + 2,
    361e:	81 e0       	ldi	r24, 0x01	; 1
    3620:	66 e0       	ldi	r22, 0x06	; 6
    3622:	40 e0       	ldi	r20, 0x00	; 0
    3624:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID + 3,
    3628:	81 e0       	ldi	r24, 0x01	; 1
    362a:	67 e0       	ldi	r22, 0x07	; 7
    362c:	40 e0       	ldi	r20, 0x00	; 0
    362e:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);

	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID,
    3632:	83 e0       	ldi	r24, 0x03	; 3
    3634:	62 e0       	ldi	r22, 0x02	; 2
    3636:	40 e0       	ldi	r20, 0x00	; 0
    3638:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID + 1,
    363c:	83 e0       	ldi	r24, 0x03	; 3
    363e:	63 e0       	ldi	r22, 0x03	; 3
    3640:	40 e0       	ldi	r20, 0x00	; 0
    3642:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID + 2,
    3646:	83 e0       	ldi	r24, 0x03	; 3
    3648:	64 e0       	ldi	r22, 0x04	; 4
    364a:	40 e0       	ldi	r20, 0x00	; 0
    364c:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);
#if(KEYPAD_NUM_COLS == 4)
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID + 3,
    3650:	83 e0       	ldi	r24, 0x03	; 3
    3652:	65 e0       	ldi	r22, 0x05	; 5
    3654:	40 e0       	ldi	r20, 0x00	; 0
    3656:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			PIN_INPUT);
#endif
	while (1) {
		for (row = 0; row < KEYPAD_NUM_ROWS; row++) /* loop for rows */
    365a:	1f 86       	std	Y+15, r1	; 0x0f
    365c:	b4 c0       	rjmp	.+360    	; 0x37c6 <KEYPAD_getPressedKey+0x1d0>
		{
			/*
			 * Each time setup the direction for all keypad port as input pins,
			 * except this row will be output pin
			 */
			GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID,
    365e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3660:	98 2f       	mov	r25, r24
    3662:	9c 5f       	subi	r25, 0xFC	; 252
    3664:	81 e0       	ldi	r24, 0x01	; 1
    3666:	69 2f       	mov	r22, r25
    3668:	41 e0       	ldi	r20, 0x01	; 1
    366a:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
			KEYPAD_FIRST_ROW_PIN_ID + row, PIN_OUTPUT);

			/* Set/Clear the row output pin */
			GPIO_writePin(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID + row,
    366e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3670:	98 2f       	mov	r25, r24
    3672:	9c 5f       	subi	r25, 0xFC	; 252
    3674:	81 e0       	ldi	r24, 0x01	; 1
    3676:	69 2f       	mov	r22, r25
    3678:	40 e0       	ldi	r20, 0x00	; 0
    367a:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
			KEYPAD_BUTTON_PRESSED);

			for (col = 0; col < KEYPAD_NUM_COLS; col++) /* loop for columns */
    367e:	18 8a       	std	Y+16, r1	; 0x10
    3680:	22 c0       	rjmp	.+68     	; 0x36c6 <KEYPAD_getPressedKey+0xd0>
			{
				/* Check if the switch is pressed in this column */
				if (GPIO_readPin(KEYPAD_COL_PORT_ID,
    3682:	88 89       	ldd	r24, Y+16	; 0x10
    3684:	98 2f       	mov	r25, r24
    3686:	9e 5f       	subi	r25, 0xFE	; 254
    3688:	83 e0       	ldi	r24, 0x03	; 3
    368a:	69 2f       	mov	r22, r25
    368c:	0e 94 93 19 	call	0x3326	; 0x3326 <GPIO_readPin>
    3690:	88 23       	and	r24, r24
    3692:	b1 f4       	brne	.+44     	; 0x36c0 <KEYPAD_getPressedKey+0xca>
						#endif
					#elif (KEYPAD_NUM_COLS == 4)
#ifdef STANDARD_KEYPAD
							return ((row*KEYPAD_NUM_COLS)+col+1);
						#else
					return KEYPAD_4x4_adjustKeyNumber(
    3694:	8f 85       	ldd	r24, Y+15	; 0x0f
    3696:	88 2f       	mov	r24, r24
    3698:	90 e0       	ldi	r25, 0x00	; 0
    369a:	88 0f       	add	r24, r24
    369c:	99 1f       	adc	r25, r25
    369e:	88 0f       	add	r24, r24
    36a0:	99 1f       	adc	r25, r25
    36a2:	98 2f       	mov	r25, r24
    36a4:	88 89       	ldd	r24, Y+16	; 0x10
    36a6:	89 0f       	add	r24, r25
    36a8:	8f 5f       	subi	r24, 0xFF	; 255
    36aa:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <KEYPAD_4x4_adjustKeyNumber>
			GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID,
			KEYPAD_FIRST_ROW_PIN_ID + row, PIN_INPUT);
			_delay_ms(5); /* Add small delay to fix CPU load issue in proteus */
		}
	}
}
    36ae:	60 96       	adiw	r28, 0x10	; 16
    36b0:	0f b6       	in	r0, 0x3f	; 63
    36b2:	f8 94       	cli
    36b4:	de bf       	out	0x3e, r29	; 62
    36b6:	0f be       	out	0x3f, r0	; 63
    36b8:	cd bf       	out	0x3d, r28	; 61
    36ba:	cf 91       	pop	r28
    36bc:	df 91       	pop	r29
    36be:	08 95       	ret

			/* Set/Clear the row output pin */
			GPIO_writePin(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID + row,
			KEYPAD_BUTTON_PRESSED);

			for (col = 0; col < KEYPAD_NUM_COLS; col++) /* loop for columns */
    36c0:	88 89       	ldd	r24, Y+16	; 0x10
    36c2:	8f 5f       	subi	r24, 0xFF	; 255
    36c4:	88 8b       	std	Y+16, r24	; 0x10
    36c6:	88 89       	ldd	r24, Y+16	; 0x10
    36c8:	84 30       	cpi	r24, 0x04	; 4
    36ca:	d8 f2       	brcs	.-74     	; 0x3682 <KEYPAD_getPressedKey+0x8c>
							(row * KEYPAD_NUM_COLS) + col + 1);
#endif
#endif
				}
			}
			GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID,
    36cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    36ce:	98 2f       	mov	r25, r24
    36d0:	9c 5f       	subi	r25, 0xFC	; 252
    36d2:	81 e0       	ldi	r24, 0x01	; 1
    36d4:	69 2f       	mov	r22, r25
    36d6:	40 e0       	ldi	r20, 0x00	; 0
    36d8:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
    36dc:	80 e0       	ldi	r24, 0x00	; 0
    36de:	90 e0       	ldi	r25, 0x00	; 0
    36e0:	a0 ea       	ldi	r26, 0xA0	; 160
    36e2:	b0 e4       	ldi	r27, 0x40	; 64
    36e4:	8b 87       	std	Y+11, r24	; 0x0b
    36e6:	9c 87       	std	Y+12, r25	; 0x0c
    36e8:	ad 87       	std	Y+13, r26	; 0x0d
    36ea:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    36ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    36f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    36f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    36f4:	20 e0       	ldi	r18, 0x00	; 0
    36f6:	30 e0       	ldi	r19, 0x00	; 0
    36f8:	4a e7       	ldi	r20, 0x7A	; 122
    36fa:	55 e4       	ldi	r21, 0x45	; 69
    36fc:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3700:	dc 01       	movw	r26, r24
    3702:	cb 01       	movw	r24, r22
    3704:	8f 83       	std	Y+7, r24	; 0x07
    3706:	98 87       	std	Y+8, r25	; 0x08
    3708:	a9 87       	std	Y+9, r26	; 0x09
    370a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    370c:	6f 81       	ldd	r22, Y+7	; 0x07
    370e:	78 85       	ldd	r23, Y+8	; 0x08
    3710:	89 85       	ldd	r24, Y+9	; 0x09
    3712:	9a 85       	ldd	r25, Y+10	; 0x0a
    3714:	20 e0       	ldi	r18, 0x00	; 0
    3716:	30 e0       	ldi	r19, 0x00	; 0
    3718:	40 e8       	ldi	r20, 0x80	; 128
    371a:	5f e3       	ldi	r21, 0x3F	; 63
    371c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    3720:	88 23       	and	r24, r24
    3722:	2c f4       	brge	.+10     	; 0x372e <KEYPAD_getPressedKey+0x138>
		__ticks = 1;
    3724:	81 e0       	ldi	r24, 0x01	; 1
    3726:	90 e0       	ldi	r25, 0x00	; 0
    3728:	9e 83       	std	Y+6, r25	; 0x06
    372a:	8d 83       	std	Y+5, r24	; 0x05
    372c:	3f c0       	rjmp	.+126    	; 0x37ac <KEYPAD_getPressedKey+0x1b6>
	else if (__tmp > 65535)
    372e:	6f 81       	ldd	r22, Y+7	; 0x07
    3730:	78 85       	ldd	r23, Y+8	; 0x08
    3732:	89 85       	ldd	r24, Y+9	; 0x09
    3734:	9a 85       	ldd	r25, Y+10	; 0x0a
    3736:	20 e0       	ldi	r18, 0x00	; 0
    3738:	3f ef       	ldi	r19, 0xFF	; 255
    373a:	4f e7       	ldi	r20, 0x7F	; 127
    373c:	57 e4       	ldi	r21, 0x47	; 71
    373e:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    3742:	18 16       	cp	r1, r24
    3744:	4c f5       	brge	.+82     	; 0x3798 <KEYPAD_getPressedKey+0x1a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3746:	6b 85       	ldd	r22, Y+11	; 0x0b
    3748:	7c 85       	ldd	r23, Y+12	; 0x0c
    374a:	8d 85       	ldd	r24, Y+13	; 0x0d
    374c:	9e 85       	ldd	r25, Y+14	; 0x0e
    374e:	20 e0       	ldi	r18, 0x00	; 0
    3750:	30 e0       	ldi	r19, 0x00	; 0
    3752:	40 e2       	ldi	r20, 0x20	; 32
    3754:	51 e4       	ldi	r21, 0x41	; 65
    3756:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    375a:	dc 01       	movw	r26, r24
    375c:	cb 01       	movw	r24, r22
    375e:	bc 01       	movw	r22, r24
    3760:	cd 01       	movw	r24, r26
    3762:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3766:	dc 01       	movw	r26, r24
    3768:	cb 01       	movw	r24, r22
    376a:	9e 83       	std	Y+6, r25	; 0x06
    376c:	8d 83       	std	Y+5, r24	; 0x05
    376e:	0f c0       	rjmp	.+30     	; 0x378e <KEYPAD_getPressedKey+0x198>
    3770:	80 e9       	ldi	r24, 0x90	; 144
    3772:	91 e0       	ldi	r25, 0x01	; 1
    3774:	9c 83       	std	Y+4, r25	; 0x04
    3776:	8b 83       	std	Y+3, r24	; 0x03
    3778:	8b 81       	ldd	r24, Y+3	; 0x03
    377a:	9c 81       	ldd	r25, Y+4	; 0x04
    377c:	01 97       	sbiw	r24, 0x01	; 1
    377e:	f1 f7       	brne	.-4      	; 0x377c <KEYPAD_getPressedKey+0x186>
    3780:	9c 83       	std	Y+4, r25	; 0x04
    3782:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3784:	8d 81       	ldd	r24, Y+5	; 0x05
    3786:	9e 81       	ldd	r25, Y+6	; 0x06
    3788:	01 97       	sbiw	r24, 0x01	; 1
    378a:	9e 83       	std	Y+6, r25	; 0x06
    378c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    378e:	8d 81       	ldd	r24, Y+5	; 0x05
    3790:	9e 81       	ldd	r25, Y+6	; 0x06
    3792:	00 97       	sbiw	r24, 0x00	; 0
    3794:	69 f7       	brne	.-38     	; 0x3770 <KEYPAD_getPressedKey+0x17a>
    3796:	14 c0       	rjmp	.+40     	; 0x37c0 <KEYPAD_getPressedKey+0x1ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3798:	6f 81       	ldd	r22, Y+7	; 0x07
    379a:	78 85       	ldd	r23, Y+8	; 0x08
    379c:	89 85       	ldd	r24, Y+9	; 0x09
    379e:	9a 85       	ldd	r25, Y+10	; 0x0a
    37a0:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    37a4:	dc 01       	movw	r26, r24
    37a6:	cb 01       	movw	r24, r22
    37a8:	9e 83       	std	Y+6, r25	; 0x06
    37aa:	8d 83       	std	Y+5, r24	; 0x05
    37ac:	8d 81       	ldd	r24, Y+5	; 0x05
    37ae:	9e 81       	ldd	r25, Y+6	; 0x06
    37b0:	9a 83       	std	Y+2, r25	; 0x02
    37b2:	89 83       	std	Y+1, r24	; 0x01
    37b4:	89 81       	ldd	r24, Y+1	; 0x01
    37b6:	9a 81       	ldd	r25, Y+2	; 0x02
    37b8:	01 97       	sbiw	r24, 0x01	; 1
    37ba:	f1 f7       	brne	.-4      	; 0x37b8 <KEYPAD_getPressedKey+0x1c2>
    37bc:	9a 83       	std	Y+2, r25	; 0x02
    37be:	89 83       	std	Y+1, r24	; 0x01
#if(KEYPAD_NUM_COLS == 4)
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID + 3,
			PIN_INPUT);
#endif
	while (1) {
		for (row = 0; row < KEYPAD_NUM_ROWS; row++) /* loop for rows */
    37c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    37c2:	8f 5f       	subi	r24, 0xFF	; 255
    37c4:	8f 87       	std	Y+15, r24	; 0x0f
    37c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    37c8:	84 30       	cpi	r24, 0x04	; 4
    37ca:	08 f4       	brcc	.+2      	; 0x37ce <KEYPAD_getPressedKey+0x1d8>
    37cc:	48 cf       	rjmp	.-368    	; 0x365e <KEYPAD_getPressedKey+0x68>
    37ce:	45 cf       	rjmp	.-374    	; 0x365a <KEYPAD_getPressedKey+0x64>

000037d0 <KEYPAD_4x4_adjustKeyNumber>:

/*
 * Description :
 * Update the keypad pressed button value with the correct one in keypad 4x4 shape
 */
static uint8 KEYPAD_4x4_adjustKeyNumber(uint8 button_number) {
    37d0:	df 93       	push	r29
    37d2:	cf 93       	push	r28
    37d4:	00 d0       	rcall	.+0      	; 0x37d6 <KEYPAD_4x4_adjustKeyNumber+0x6>
    37d6:	00 d0       	rcall	.+0      	; 0x37d8 <KEYPAD_4x4_adjustKeyNumber+0x8>
    37d8:	cd b7       	in	r28, 0x3d	; 61
    37da:	de b7       	in	r29, 0x3e	; 62
    37dc:	8a 83       	std	Y+2, r24	; 0x02
	uint8 keypad_button = 0;
    37de:	19 82       	std	Y+1, r1	; 0x01
	switch (button_number) {
    37e0:	8a 81       	ldd	r24, Y+2	; 0x02
    37e2:	28 2f       	mov	r18, r24
    37e4:	30 e0       	ldi	r19, 0x00	; 0
    37e6:	3c 83       	std	Y+4, r19	; 0x04
    37e8:	2b 83       	std	Y+3, r18	; 0x03
    37ea:	8b 81       	ldd	r24, Y+3	; 0x03
    37ec:	9c 81       	ldd	r25, Y+4	; 0x04
    37ee:	88 30       	cpi	r24, 0x08	; 8
    37f0:	91 05       	cpc	r25, r1
    37f2:	09 f4       	brne	.+2      	; 0x37f6 <KEYPAD_4x4_adjustKeyNumber+0x26>
    37f4:	70 c0       	rjmp	.+224    	; 0x38d6 <KEYPAD_4x4_adjustKeyNumber+0x106>
    37f6:	2b 81       	ldd	r18, Y+3	; 0x03
    37f8:	3c 81       	ldd	r19, Y+4	; 0x04
    37fa:	29 30       	cpi	r18, 0x09	; 9
    37fc:	31 05       	cpc	r19, r1
    37fe:	5c f5       	brge	.+86     	; 0x3856 <KEYPAD_4x4_adjustKeyNumber+0x86>
    3800:	8b 81       	ldd	r24, Y+3	; 0x03
    3802:	9c 81       	ldd	r25, Y+4	; 0x04
    3804:	84 30       	cpi	r24, 0x04	; 4
    3806:	91 05       	cpc	r25, r1
    3808:	09 f4       	brne	.+2      	; 0x380c <KEYPAD_4x4_adjustKeyNumber+0x3c>
    380a:	59 c0       	rjmp	.+178    	; 0x38be <KEYPAD_4x4_adjustKeyNumber+0xee>
    380c:	2b 81       	ldd	r18, Y+3	; 0x03
    380e:	3c 81       	ldd	r19, Y+4	; 0x04
    3810:	25 30       	cpi	r18, 0x05	; 5
    3812:	31 05       	cpc	r19, r1
    3814:	9c f4       	brge	.+38     	; 0x383c <KEYPAD_4x4_adjustKeyNumber+0x6c>
    3816:	8b 81       	ldd	r24, Y+3	; 0x03
    3818:	9c 81       	ldd	r25, Y+4	; 0x04
    381a:	82 30       	cpi	r24, 0x02	; 2
    381c:	91 05       	cpc	r25, r1
    381e:	09 f4       	brne	.+2      	; 0x3822 <KEYPAD_4x4_adjustKeyNumber+0x52>
    3820:	48 c0       	rjmp	.+144    	; 0x38b2 <KEYPAD_4x4_adjustKeyNumber+0xe2>
    3822:	2b 81       	ldd	r18, Y+3	; 0x03
    3824:	3c 81       	ldd	r19, Y+4	; 0x04
    3826:	23 30       	cpi	r18, 0x03	; 3
    3828:	31 05       	cpc	r19, r1
    382a:	0c f0       	brlt	.+2      	; 0x382e <KEYPAD_4x4_adjustKeyNumber+0x5e>
    382c:	45 c0       	rjmp	.+138    	; 0x38b8 <KEYPAD_4x4_adjustKeyNumber+0xe8>
    382e:	8b 81       	ldd	r24, Y+3	; 0x03
    3830:	9c 81       	ldd	r25, Y+4	; 0x04
    3832:	81 30       	cpi	r24, 0x01	; 1
    3834:	91 05       	cpc	r25, r1
    3836:	09 f4       	brne	.+2      	; 0x383a <KEYPAD_4x4_adjustKeyNumber+0x6a>
    3838:	39 c0       	rjmp	.+114    	; 0x38ac <KEYPAD_4x4_adjustKeyNumber+0xdc>
    383a:	67 c0       	rjmp	.+206    	; 0x390a <KEYPAD_4x4_adjustKeyNumber+0x13a>
    383c:	2b 81       	ldd	r18, Y+3	; 0x03
    383e:	3c 81       	ldd	r19, Y+4	; 0x04
    3840:	26 30       	cpi	r18, 0x06	; 6
    3842:	31 05       	cpc	r19, r1
    3844:	09 f4       	brne	.+2      	; 0x3848 <KEYPAD_4x4_adjustKeyNumber+0x78>
    3846:	41 c0       	rjmp	.+130    	; 0x38ca <KEYPAD_4x4_adjustKeyNumber+0xfa>
    3848:	8b 81       	ldd	r24, Y+3	; 0x03
    384a:	9c 81       	ldd	r25, Y+4	; 0x04
    384c:	87 30       	cpi	r24, 0x07	; 7
    384e:	91 05       	cpc	r25, r1
    3850:	0c f0       	brlt	.+2      	; 0x3854 <KEYPAD_4x4_adjustKeyNumber+0x84>
    3852:	3e c0       	rjmp	.+124    	; 0x38d0 <KEYPAD_4x4_adjustKeyNumber+0x100>
    3854:	37 c0       	rjmp	.+110    	; 0x38c4 <KEYPAD_4x4_adjustKeyNumber+0xf4>
    3856:	2b 81       	ldd	r18, Y+3	; 0x03
    3858:	3c 81       	ldd	r19, Y+4	; 0x04
    385a:	2c 30       	cpi	r18, 0x0C	; 12
    385c:	31 05       	cpc	r19, r1
    385e:	09 f4       	brne	.+2      	; 0x3862 <KEYPAD_4x4_adjustKeyNumber+0x92>
    3860:	46 c0       	rjmp	.+140    	; 0x38ee <KEYPAD_4x4_adjustKeyNumber+0x11e>
    3862:	8b 81       	ldd	r24, Y+3	; 0x03
    3864:	9c 81       	ldd	r25, Y+4	; 0x04
    3866:	8d 30       	cpi	r24, 0x0D	; 13
    3868:	91 05       	cpc	r25, r1
    386a:	5c f4       	brge	.+22     	; 0x3882 <KEYPAD_4x4_adjustKeyNumber+0xb2>
    386c:	2b 81       	ldd	r18, Y+3	; 0x03
    386e:	3c 81       	ldd	r19, Y+4	; 0x04
    3870:	2a 30       	cpi	r18, 0x0A	; 10
    3872:	31 05       	cpc	r19, r1
    3874:	b1 f1       	breq	.+108    	; 0x38e2 <KEYPAD_4x4_adjustKeyNumber+0x112>
    3876:	8b 81       	ldd	r24, Y+3	; 0x03
    3878:	9c 81       	ldd	r25, Y+4	; 0x04
    387a:	8b 30       	cpi	r24, 0x0B	; 11
    387c:	91 05       	cpc	r25, r1
    387e:	a4 f5       	brge	.+104    	; 0x38e8 <KEYPAD_4x4_adjustKeyNumber+0x118>
    3880:	2d c0       	rjmp	.+90     	; 0x38dc <KEYPAD_4x4_adjustKeyNumber+0x10c>
    3882:	2b 81       	ldd	r18, Y+3	; 0x03
    3884:	3c 81       	ldd	r19, Y+4	; 0x04
    3886:	2e 30       	cpi	r18, 0x0E	; 14
    3888:	31 05       	cpc	r19, r1
    388a:	b9 f1       	breq	.+110    	; 0x38fa <KEYPAD_4x4_adjustKeyNumber+0x12a>
    388c:	8b 81       	ldd	r24, Y+3	; 0x03
    388e:	9c 81       	ldd	r25, Y+4	; 0x04
    3890:	8e 30       	cpi	r24, 0x0E	; 14
    3892:	91 05       	cpc	r25, r1
    3894:	7c f1       	brlt	.+94     	; 0x38f4 <KEYPAD_4x4_adjustKeyNumber+0x124>
    3896:	2b 81       	ldd	r18, Y+3	; 0x03
    3898:	3c 81       	ldd	r19, Y+4	; 0x04
    389a:	2f 30       	cpi	r18, 0x0F	; 15
    389c:	31 05       	cpc	r19, r1
    389e:	79 f1       	breq	.+94     	; 0x38fe <KEYPAD_4x4_adjustKeyNumber+0x12e>
    38a0:	8b 81       	ldd	r24, Y+3	; 0x03
    38a2:	9c 81       	ldd	r25, Y+4	; 0x04
    38a4:	80 31       	cpi	r24, 0x10	; 16
    38a6:	91 05       	cpc	r25, r1
    38a8:	69 f1       	breq	.+90     	; 0x3904 <KEYPAD_4x4_adjustKeyNumber+0x134>
    38aa:	2f c0       	rjmp	.+94     	; 0x390a <KEYPAD_4x4_adjustKeyNumber+0x13a>
	case 1:
		keypad_button = 7;
    38ac:	87 e0       	ldi	r24, 0x07	; 7
    38ae:	89 83       	std	Y+1, r24	; 0x01
    38b0:	2e c0       	rjmp	.+92     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 2:
		keypad_button = 8;
    38b2:	88 e0       	ldi	r24, 0x08	; 8
    38b4:	89 83       	std	Y+1, r24	; 0x01
    38b6:	2b c0       	rjmp	.+86     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 3:
		keypad_button = 9;
    38b8:	89 e0       	ldi	r24, 0x09	; 9
    38ba:	89 83       	std	Y+1, r24	; 0x01
    38bc:	28 c0       	rjmp	.+80     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 4:
		keypad_button = '%'; // ASCII Code of %
    38be:	85 e2       	ldi	r24, 0x25	; 37
    38c0:	89 83       	std	Y+1, r24	; 0x01
    38c2:	25 c0       	rjmp	.+74     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 5:
		keypad_button = 4;
    38c4:	84 e0       	ldi	r24, 0x04	; 4
    38c6:	89 83       	std	Y+1, r24	; 0x01
    38c8:	22 c0       	rjmp	.+68     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 6:
		keypad_button = 5;
    38ca:	85 e0       	ldi	r24, 0x05	; 5
    38cc:	89 83       	std	Y+1, r24	; 0x01
    38ce:	1f c0       	rjmp	.+62     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 7:
		keypad_button = 6;
    38d0:	86 e0       	ldi	r24, 0x06	; 6
    38d2:	89 83       	std	Y+1, r24	; 0x01
    38d4:	1c c0       	rjmp	.+56     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 8:
		keypad_button = '*'; /* ASCII Code of '*' */
    38d6:	8a e2       	ldi	r24, 0x2A	; 42
    38d8:	89 83       	std	Y+1, r24	; 0x01
    38da:	19 c0       	rjmp	.+50     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 9:
		keypad_button = 1;
    38dc:	81 e0       	ldi	r24, 0x01	; 1
    38de:	89 83       	std	Y+1, r24	; 0x01
    38e0:	16 c0       	rjmp	.+44     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 10:
		keypad_button = 2;
    38e2:	82 e0       	ldi	r24, 0x02	; 2
    38e4:	89 83       	std	Y+1, r24	; 0x01
    38e6:	13 c0       	rjmp	.+38     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 11:
		keypad_button = 3;
    38e8:	83 e0       	ldi	r24, 0x03	; 3
    38ea:	89 83       	std	Y+1, r24	; 0x01
    38ec:	10 c0       	rjmp	.+32     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 12:
		keypad_button = '-'; /* ASCII Code of '-' */
    38ee:	8d e2       	ldi	r24, 0x2D	; 45
    38f0:	89 83       	std	Y+1, r24	; 0x01
    38f2:	0d c0       	rjmp	.+26     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 13:
		keypad_button = 'C'; /* ASCII of Enter */
    38f4:	83 e4       	ldi	r24, 0x43	; 67
    38f6:	89 83       	std	Y+1, r24	; 0x01
    38f8:	0a c0       	rjmp	.+20     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 14:
		keypad_button = 0;
    38fa:	19 82       	std	Y+1, r1	; 0x01
    38fc:	08 c0       	rjmp	.+16     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 15:
		keypad_button = '='; /* ASCII Code of '=' */
    38fe:	8d e3       	ldi	r24, 0x3D	; 61
    3900:	89 83       	std	Y+1, r24	; 0x01
    3902:	05 c0       	rjmp	.+10     	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	case 16:
		keypad_button = '+'; /* ASCII Code of '+' */
    3904:	8b e2       	ldi	r24, 0x2B	; 43
    3906:	89 83       	std	Y+1, r24	; 0x01
    3908:	02 c0       	rjmp	.+4      	; 0x390e <KEYPAD_4x4_adjustKeyNumber+0x13e>
		break;
	default:
		keypad_button = button_number;
    390a:	8a 81       	ldd	r24, Y+2	; 0x02
    390c:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	return keypad_button;
    390e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3910:	0f 90       	pop	r0
    3912:	0f 90       	pop	r0
    3914:	0f 90       	pop	r0
    3916:	0f 90       	pop	r0
    3918:	cf 91       	pop	r28
    391a:	df 91       	pop	r29
    391c:	08 95       	ret

0000391e <LCD_init>:
 * Description :
 * Initialize the LCD:
 * 1. Setup the LCD pins directions by use the GPIO driver.
 * 2. Setup the LCD Data Mode 4-bits or 8-bits.
 */
void LCD_init(void) {
    391e:	df 93       	push	r29
    3920:	cf 93       	push	r28
    3922:	cd b7       	in	r28, 0x3d	; 61
    3924:	de b7       	in	r29, 0x3e	; 62
    3926:	2e 97       	sbiw	r28, 0x0e	; 14
    3928:	0f b6       	in	r0, 0x3f	; 63
    392a:	f8 94       	cli
    392c:	de bf       	out	0x3e, r29	; 62
    392e:	0f be       	out	0x3f, r0	; 63
    3930:	cd bf       	out	0x3d, r28	; 61
	/* Configure the direction for RS and E pins as output pins */
	GPIO_setupPinDirection(LCD_RS_PORT_ID, LCD_RS_PIN_ID, PIN_OUTPUT);
    3932:	80 e0       	ldi	r24, 0x00	; 0
    3934:	61 e0       	ldi	r22, 0x01	; 1
    3936:	41 e0       	ldi	r20, 0x01	; 1
    3938:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_E_PORT_ID, LCD_E_PIN_ID, PIN_OUTPUT);
    393c:	80 e0       	ldi	r24, 0x00	; 0
    393e:	62 e0       	ldi	r22, 0x02	; 2
    3940:	41 e0       	ldi	r20, 0x01	; 1
    3942:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
    3946:	80 e0       	ldi	r24, 0x00	; 0
    3948:	90 e0       	ldi	r25, 0x00	; 0
    394a:	a0 ea       	ldi	r26, 0xA0	; 160
    394c:	b1 e4       	ldi	r27, 0x41	; 65
    394e:	8b 87       	std	Y+11, r24	; 0x0b
    3950:	9c 87       	std	Y+12, r25	; 0x0c
    3952:	ad 87       	std	Y+13, r26	; 0x0d
    3954:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3956:	6b 85       	ldd	r22, Y+11	; 0x0b
    3958:	7c 85       	ldd	r23, Y+12	; 0x0c
    395a:	8d 85       	ldd	r24, Y+13	; 0x0d
    395c:	9e 85       	ldd	r25, Y+14	; 0x0e
    395e:	20 e0       	ldi	r18, 0x00	; 0
    3960:	30 e0       	ldi	r19, 0x00	; 0
    3962:	4a e7       	ldi	r20, 0x7A	; 122
    3964:	55 e4       	ldi	r21, 0x45	; 69
    3966:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    396a:	dc 01       	movw	r26, r24
    396c:	cb 01       	movw	r24, r22
    396e:	8f 83       	std	Y+7, r24	; 0x07
    3970:	98 87       	std	Y+8, r25	; 0x08
    3972:	a9 87       	std	Y+9, r26	; 0x09
    3974:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3976:	6f 81       	ldd	r22, Y+7	; 0x07
    3978:	78 85       	ldd	r23, Y+8	; 0x08
    397a:	89 85       	ldd	r24, Y+9	; 0x09
    397c:	9a 85       	ldd	r25, Y+10	; 0x0a
    397e:	20 e0       	ldi	r18, 0x00	; 0
    3980:	30 e0       	ldi	r19, 0x00	; 0
    3982:	40 e8       	ldi	r20, 0x80	; 128
    3984:	5f e3       	ldi	r21, 0x3F	; 63
    3986:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    398a:	88 23       	and	r24, r24
    398c:	2c f4       	brge	.+10     	; 0x3998 <LCD_init+0x7a>
		__ticks = 1;
    398e:	81 e0       	ldi	r24, 0x01	; 1
    3990:	90 e0       	ldi	r25, 0x00	; 0
    3992:	9e 83       	std	Y+6, r25	; 0x06
    3994:	8d 83       	std	Y+5, r24	; 0x05
    3996:	3f c0       	rjmp	.+126    	; 0x3a16 <LCD_init+0xf8>
	else if (__tmp > 65535)
    3998:	6f 81       	ldd	r22, Y+7	; 0x07
    399a:	78 85       	ldd	r23, Y+8	; 0x08
    399c:	89 85       	ldd	r24, Y+9	; 0x09
    399e:	9a 85       	ldd	r25, Y+10	; 0x0a
    39a0:	20 e0       	ldi	r18, 0x00	; 0
    39a2:	3f ef       	ldi	r19, 0xFF	; 255
    39a4:	4f e7       	ldi	r20, 0x7F	; 127
    39a6:	57 e4       	ldi	r21, 0x47	; 71
    39a8:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    39ac:	18 16       	cp	r1, r24
    39ae:	4c f5       	brge	.+82     	; 0x3a02 <LCD_init+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39b0:	6b 85       	ldd	r22, Y+11	; 0x0b
    39b2:	7c 85       	ldd	r23, Y+12	; 0x0c
    39b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    39b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    39b8:	20 e0       	ldi	r18, 0x00	; 0
    39ba:	30 e0       	ldi	r19, 0x00	; 0
    39bc:	40 e2       	ldi	r20, 0x20	; 32
    39be:	51 e4       	ldi	r21, 0x41	; 65
    39c0:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    39c4:	dc 01       	movw	r26, r24
    39c6:	cb 01       	movw	r24, r22
    39c8:	bc 01       	movw	r22, r24
    39ca:	cd 01       	movw	r24, r26
    39cc:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    39d0:	dc 01       	movw	r26, r24
    39d2:	cb 01       	movw	r24, r22
    39d4:	9e 83       	std	Y+6, r25	; 0x06
    39d6:	8d 83       	std	Y+5, r24	; 0x05
    39d8:	0f c0       	rjmp	.+30     	; 0x39f8 <LCD_init+0xda>
    39da:	80 e9       	ldi	r24, 0x90	; 144
    39dc:	91 e0       	ldi	r25, 0x01	; 1
    39de:	9c 83       	std	Y+4, r25	; 0x04
    39e0:	8b 83       	std	Y+3, r24	; 0x03
    39e2:	8b 81       	ldd	r24, Y+3	; 0x03
    39e4:	9c 81       	ldd	r25, Y+4	; 0x04
    39e6:	01 97       	sbiw	r24, 0x01	; 1
    39e8:	f1 f7       	brne	.-4      	; 0x39e6 <LCD_init+0xc8>
    39ea:	9c 83       	std	Y+4, r25	; 0x04
    39ec:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39ee:	8d 81       	ldd	r24, Y+5	; 0x05
    39f0:	9e 81       	ldd	r25, Y+6	; 0x06
    39f2:	01 97       	sbiw	r24, 0x01	; 1
    39f4:	9e 83       	std	Y+6, r25	; 0x06
    39f6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39f8:	8d 81       	ldd	r24, Y+5	; 0x05
    39fa:	9e 81       	ldd	r25, Y+6	; 0x06
    39fc:	00 97       	sbiw	r24, 0x00	; 0
    39fe:	69 f7       	brne	.-38     	; 0x39da <LCD_init+0xbc>
    3a00:	14 c0       	rjmp	.+40     	; 0x3a2a <LCD_init+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a02:	6f 81       	ldd	r22, Y+7	; 0x07
    3a04:	78 85       	ldd	r23, Y+8	; 0x08
    3a06:	89 85       	ldd	r24, Y+9	; 0x09
    3a08:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a0a:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3a0e:	dc 01       	movw	r26, r24
    3a10:	cb 01       	movw	r24, r22
    3a12:	9e 83       	std	Y+6, r25	; 0x06
    3a14:	8d 83       	std	Y+5, r24	; 0x05
    3a16:	8d 81       	ldd	r24, Y+5	; 0x05
    3a18:	9e 81       	ldd	r25, Y+6	; 0x06
    3a1a:	9a 83       	std	Y+2, r25	; 0x02
    3a1c:	89 83       	std	Y+1, r24	; 0x01
    3a1e:	89 81       	ldd	r24, Y+1	; 0x01
    3a20:	9a 81       	ldd	r25, Y+2	; 0x02
    3a22:	01 97       	sbiw	r24, 0x01	; 1
    3a24:	f1 f7       	brne	.-4      	; 0x3a22 <LCD_init+0x104>
    3a26:	9a 83       	std	Y+2, r25	; 0x02
    3a28:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(20); /* LCD Power ON delay always > 15ms */

#if(LCD_DATA_BITS_MODE == 4)
	/* Configure 4 pins in the data port as output pins */
	GPIO_setupPinDirection(LCD_DATA_PORT_ID, LCD_DB4_PIN_ID, PIN_OUTPUT);
    3a2a:	80 e0       	ldi	r24, 0x00	; 0
    3a2c:	63 e0       	ldi	r22, 0x03	; 3
    3a2e:	41 e0       	ldi	r20, 0x01	; 1
    3a30:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_DATA_PORT_ID, LCD_DB5_PIN_ID, PIN_OUTPUT);
    3a34:	80 e0       	ldi	r24, 0x00	; 0
    3a36:	64 e0       	ldi	r22, 0x04	; 4
    3a38:	41 e0       	ldi	r20, 0x01	; 1
    3a3a:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_DATA_PORT_ID, LCD_DB6_PIN_ID, PIN_OUTPUT);
    3a3e:	80 e0       	ldi	r24, 0x00	; 0
    3a40:	65 e0       	ldi	r22, 0x05	; 5
    3a42:	41 e0       	ldi	r20, 0x01	; 1
    3a44:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_DATA_PORT_ID, LCD_DB7_PIN_ID, PIN_OUTPUT);
    3a48:	80 e0       	ldi	r24, 0x00	; 0
    3a4a:	66 e0       	ldi	r22, 0x06	; 6
    3a4c:	41 e0       	ldi	r20, 0x01	; 1
    3a4e:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <GPIO_setupPinDirection>

	/* Send for 4 bit initialization of LCD  */
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE_INIT1);
    3a52:	83 e3       	ldi	r24, 0x33	; 51
    3a54:	0e 94 41 1d 	call	0x3a82	; 0x3a82 <LCD_sendCommand>
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE_INIT2);
    3a58:	82 e3       	ldi	r24, 0x32	; 50
    3a5a:	0e 94 41 1d 	call	0x3a82	; 0x3a82 <LCD_sendCommand>

	/* use 2-lines LCD + 4-bits Data Mode + 5*7 dot display Mode */
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE);
    3a5e:	88 e2       	ldi	r24, 0x28	; 40
    3a60:	0e 94 41 1d 	call	0x3a82	; 0x3a82 <LCD_sendCommand>
	/* use 2-lines LCD + 8-bits Data Mode + 5*7 dot display Mode */
	LCD_sendCommand(LCD_TWO_LINES_EIGHT_BITS_MODE);

#endif

	LCD_sendCommand(LCD_CURSOR_OFF); /* cursor off */
    3a64:	8c e0       	ldi	r24, 0x0C	; 12
    3a66:	0e 94 41 1d 	call	0x3a82	; 0x3a82 <LCD_sendCommand>
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* clear LCD at the beginning */
    3a6a:	81 e0       	ldi	r24, 0x01	; 1
    3a6c:	0e 94 41 1d 	call	0x3a82	; 0x3a82 <LCD_sendCommand>
}
    3a70:	2e 96       	adiw	r28, 0x0e	; 14
    3a72:	0f b6       	in	r0, 0x3f	; 63
    3a74:	f8 94       	cli
    3a76:	de bf       	out	0x3e, r29	; 62
    3a78:	0f be       	out	0x3f, r0	; 63
    3a7a:	cd bf       	out	0x3d, r28	; 61
    3a7c:	cf 91       	pop	r28
    3a7e:	df 91       	pop	r29
    3a80:	08 95       	ret

00003a82 <LCD_sendCommand>:

/*
 * Description :
 * Send the required command to the screen
 */
void LCD_sendCommand(uint8 command) {
    3a82:	0f 93       	push	r16
    3a84:	1f 93       	push	r17
    3a86:	df 93       	push	r29
    3a88:	cf 93       	push	r28
    3a8a:	cd b7       	in	r28, 0x3d	; 61
    3a8c:	de b7       	in	r29, 0x3e	; 62
    3a8e:	c3 56       	subi	r28, 0x63	; 99
    3a90:	d0 40       	sbci	r29, 0x00	; 0
    3a92:	0f b6       	in	r0, 0x3f	; 63
    3a94:	f8 94       	cli
    3a96:	de bf       	out	0x3e, r29	; 62
    3a98:	0f be       	out	0x3f, r0	; 63
    3a9a:	cd bf       	out	0x3d, r28	; 61
    3a9c:	fe 01       	movw	r30, r28
    3a9e:	ed 59       	subi	r30, 0x9D	; 157
    3aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    3aa2:	80 83       	st	Z, r24
	GPIO_writePin(LCD_RS_PORT_ID, LCD_RS_PIN_ID, LOGIC_LOW); /* Instruction Mode RS=0 */
    3aa4:	80 e0       	ldi	r24, 0x00	; 0
    3aa6:	61 e0       	ldi	r22, 0x01	; 1
    3aa8:	40 e0       	ldi	r20, 0x00	; 0
    3aaa:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    3aae:	fe 01       	movw	r30, r28
    3ab0:	e1 5a       	subi	r30, 0xA1	; 161
    3ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab4:	80 e0       	ldi	r24, 0x00	; 0
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	a0 e8       	ldi	r26, 0x80	; 128
    3aba:	bf e3       	ldi	r27, 0x3F	; 63
    3abc:	80 83       	st	Z, r24
    3abe:	91 83       	std	Z+1, r25	; 0x01
    3ac0:	a2 83       	std	Z+2, r26	; 0x02
    3ac2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ac4:	8e 01       	movw	r16, r28
    3ac6:	05 5a       	subi	r16, 0xA5	; 165
    3ac8:	1f 4f       	sbci	r17, 0xFF	; 255
    3aca:	fe 01       	movw	r30, r28
    3acc:	e1 5a       	subi	r30, 0xA1	; 161
    3ace:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad0:	60 81       	ld	r22, Z
    3ad2:	71 81       	ldd	r23, Z+1	; 0x01
    3ad4:	82 81       	ldd	r24, Z+2	; 0x02
    3ad6:	93 81       	ldd	r25, Z+3	; 0x03
    3ad8:	20 e0       	ldi	r18, 0x00	; 0
    3ada:	30 e0       	ldi	r19, 0x00	; 0
    3adc:	4a e7       	ldi	r20, 0x7A	; 122
    3ade:	55 e4       	ldi	r21, 0x45	; 69
    3ae0:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3ae4:	dc 01       	movw	r26, r24
    3ae6:	cb 01       	movw	r24, r22
    3ae8:	f8 01       	movw	r30, r16
    3aea:	80 83       	st	Z, r24
    3aec:	91 83       	std	Z+1, r25	; 0x01
    3aee:	a2 83       	std	Z+2, r26	; 0x02
    3af0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3af2:	fe 01       	movw	r30, r28
    3af4:	e5 5a       	subi	r30, 0xA5	; 165
    3af6:	ff 4f       	sbci	r31, 0xFF	; 255
    3af8:	60 81       	ld	r22, Z
    3afa:	71 81       	ldd	r23, Z+1	; 0x01
    3afc:	82 81       	ldd	r24, Z+2	; 0x02
    3afe:	93 81       	ldd	r25, Z+3	; 0x03
    3b00:	20 e0       	ldi	r18, 0x00	; 0
    3b02:	30 e0       	ldi	r19, 0x00	; 0
    3b04:	40 e8       	ldi	r20, 0x80	; 128
    3b06:	5f e3       	ldi	r21, 0x3F	; 63
    3b08:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    3b0c:	88 23       	and	r24, r24
    3b0e:	44 f4       	brge	.+16     	; 0x3b20 <LCD_sendCommand+0x9e>
		__ticks = 1;
    3b10:	fe 01       	movw	r30, r28
    3b12:	e7 5a       	subi	r30, 0xA7	; 167
    3b14:	ff 4f       	sbci	r31, 0xFF	; 255
    3b16:	81 e0       	ldi	r24, 0x01	; 1
    3b18:	90 e0       	ldi	r25, 0x00	; 0
    3b1a:	91 83       	std	Z+1, r25	; 0x01
    3b1c:	80 83       	st	Z, r24
    3b1e:	64 c0       	rjmp	.+200    	; 0x3be8 <LCD_sendCommand+0x166>
	else if (__tmp > 65535)
    3b20:	fe 01       	movw	r30, r28
    3b22:	e5 5a       	subi	r30, 0xA5	; 165
    3b24:	ff 4f       	sbci	r31, 0xFF	; 255
    3b26:	60 81       	ld	r22, Z
    3b28:	71 81       	ldd	r23, Z+1	; 0x01
    3b2a:	82 81       	ldd	r24, Z+2	; 0x02
    3b2c:	93 81       	ldd	r25, Z+3	; 0x03
    3b2e:	20 e0       	ldi	r18, 0x00	; 0
    3b30:	3f ef       	ldi	r19, 0xFF	; 255
    3b32:	4f e7       	ldi	r20, 0x7F	; 127
    3b34:	57 e4       	ldi	r21, 0x47	; 71
    3b36:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    3b3a:	18 16       	cp	r1, r24
    3b3c:	0c f0       	brlt	.+2      	; 0x3b40 <LCD_sendCommand+0xbe>
    3b3e:	43 c0       	rjmp	.+134    	; 0x3bc6 <LCD_sendCommand+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b40:	fe 01       	movw	r30, r28
    3b42:	e1 5a       	subi	r30, 0xA1	; 161
    3b44:	ff 4f       	sbci	r31, 0xFF	; 255
    3b46:	60 81       	ld	r22, Z
    3b48:	71 81       	ldd	r23, Z+1	; 0x01
    3b4a:	82 81       	ldd	r24, Z+2	; 0x02
    3b4c:	93 81       	ldd	r25, Z+3	; 0x03
    3b4e:	20 e0       	ldi	r18, 0x00	; 0
    3b50:	30 e0       	ldi	r19, 0x00	; 0
    3b52:	40 e2       	ldi	r20, 0x20	; 32
    3b54:	51 e4       	ldi	r21, 0x41	; 65
    3b56:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3b5a:	dc 01       	movw	r26, r24
    3b5c:	cb 01       	movw	r24, r22
    3b5e:	8e 01       	movw	r16, r28
    3b60:	07 5a       	subi	r16, 0xA7	; 167
    3b62:	1f 4f       	sbci	r17, 0xFF	; 255
    3b64:	bc 01       	movw	r22, r24
    3b66:	cd 01       	movw	r24, r26
    3b68:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3b6c:	dc 01       	movw	r26, r24
    3b6e:	cb 01       	movw	r24, r22
    3b70:	f8 01       	movw	r30, r16
    3b72:	91 83       	std	Z+1, r25	; 0x01
    3b74:	80 83       	st	Z, r24
    3b76:	1f c0       	rjmp	.+62     	; 0x3bb6 <LCD_sendCommand+0x134>
    3b78:	fe 01       	movw	r30, r28
    3b7a:	e9 5a       	subi	r30, 0xA9	; 169
    3b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b7e:	80 e9       	ldi	r24, 0x90	; 144
    3b80:	91 e0       	ldi	r25, 0x01	; 1
    3b82:	91 83       	std	Z+1, r25	; 0x01
    3b84:	80 83       	st	Z, r24
    3b86:	fe 01       	movw	r30, r28
    3b88:	e9 5a       	subi	r30, 0xA9	; 169
    3b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b8c:	80 81       	ld	r24, Z
    3b8e:	91 81       	ldd	r25, Z+1	; 0x01
    3b90:	01 97       	sbiw	r24, 0x01	; 1
    3b92:	f1 f7       	brne	.-4      	; 0x3b90 <LCD_sendCommand+0x10e>
    3b94:	fe 01       	movw	r30, r28
    3b96:	e9 5a       	subi	r30, 0xA9	; 169
    3b98:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9a:	91 83       	std	Z+1, r25	; 0x01
    3b9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b9e:	de 01       	movw	r26, r28
    3ba0:	a7 5a       	subi	r26, 0xA7	; 167
    3ba2:	bf 4f       	sbci	r27, 0xFF	; 255
    3ba4:	fe 01       	movw	r30, r28
    3ba6:	e7 5a       	subi	r30, 0xA7	; 167
    3ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    3baa:	80 81       	ld	r24, Z
    3bac:	91 81       	ldd	r25, Z+1	; 0x01
    3bae:	01 97       	sbiw	r24, 0x01	; 1
    3bb0:	11 96       	adiw	r26, 0x01	; 1
    3bb2:	9c 93       	st	X, r25
    3bb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bb6:	fe 01       	movw	r30, r28
    3bb8:	e7 5a       	subi	r30, 0xA7	; 167
    3bba:	ff 4f       	sbci	r31, 0xFF	; 255
    3bbc:	80 81       	ld	r24, Z
    3bbe:	91 81       	ldd	r25, Z+1	; 0x01
    3bc0:	00 97       	sbiw	r24, 0x00	; 0
    3bc2:	d1 f6       	brne	.-76     	; 0x3b78 <LCD_sendCommand+0xf6>
    3bc4:	27 c0       	rjmp	.+78     	; 0x3c14 <LCD_sendCommand+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bc6:	8e 01       	movw	r16, r28
    3bc8:	07 5a       	subi	r16, 0xA7	; 167
    3bca:	1f 4f       	sbci	r17, 0xFF	; 255
    3bcc:	fe 01       	movw	r30, r28
    3bce:	e5 5a       	subi	r30, 0xA5	; 165
    3bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd2:	60 81       	ld	r22, Z
    3bd4:	71 81       	ldd	r23, Z+1	; 0x01
    3bd6:	82 81       	ldd	r24, Z+2	; 0x02
    3bd8:	93 81       	ldd	r25, Z+3	; 0x03
    3bda:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3bde:	dc 01       	movw	r26, r24
    3be0:	cb 01       	movw	r24, r22
    3be2:	f8 01       	movw	r30, r16
    3be4:	91 83       	std	Z+1, r25	; 0x01
    3be6:	80 83       	st	Z, r24
    3be8:	de 01       	movw	r26, r28
    3bea:	ab 5a       	subi	r26, 0xAB	; 171
    3bec:	bf 4f       	sbci	r27, 0xFF	; 255
    3bee:	fe 01       	movw	r30, r28
    3bf0:	e7 5a       	subi	r30, 0xA7	; 167
    3bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    3bf4:	80 81       	ld	r24, Z
    3bf6:	91 81       	ldd	r25, Z+1	; 0x01
    3bf8:	8d 93       	st	X+, r24
    3bfa:	9c 93       	st	X, r25
    3bfc:	fe 01       	movw	r30, r28
    3bfe:	eb 5a       	subi	r30, 0xAB	; 171
    3c00:	ff 4f       	sbci	r31, 0xFF	; 255
    3c02:	80 81       	ld	r24, Z
    3c04:	91 81       	ldd	r25, Z+1	; 0x01
    3c06:	01 97       	sbiw	r24, 0x01	; 1
    3c08:	f1 f7       	brne	.-4      	; 0x3c06 <LCD_sendCommand+0x184>
    3c0a:	fe 01       	movw	r30, r28
    3c0c:	eb 5a       	subi	r30, 0xAB	; 171
    3c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c10:	91 83       	std	Z+1, r25	; 0x01
    3c12:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_HIGH); /* Enable LCD E=1 */
    3c14:	80 e0       	ldi	r24, 0x00	; 0
    3c16:	62 e0       	ldi	r22, 0x02	; 2
    3c18:	41 e0       	ldi	r20, 0x01	; 1
    3c1a:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    3c1e:	fe 01       	movw	r30, r28
    3c20:	ef 5a       	subi	r30, 0xAF	; 175
    3c22:	ff 4f       	sbci	r31, 0xFF	; 255
    3c24:	80 e0       	ldi	r24, 0x00	; 0
    3c26:	90 e0       	ldi	r25, 0x00	; 0
    3c28:	a0 e8       	ldi	r26, 0x80	; 128
    3c2a:	bf e3       	ldi	r27, 0x3F	; 63
    3c2c:	80 83       	st	Z, r24
    3c2e:	91 83       	std	Z+1, r25	; 0x01
    3c30:	a2 83       	std	Z+2, r26	; 0x02
    3c32:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c34:	8e 01       	movw	r16, r28
    3c36:	03 5b       	subi	r16, 0xB3	; 179
    3c38:	1f 4f       	sbci	r17, 0xFF	; 255
    3c3a:	fe 01       	movw	r30, r28
    3c3c:	ef 5a       	subi	r30, 0xAF	; 175
    3c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c40:	60 81       	ld	r22, Z
    3c42:	71 81       	ldd	r23, Z+1	; 0x01
    3c44:	82 81       	ldd	r24, Z+2	; 0x02
    3c46:	93 81       	ldd	r25, Z+3	; 0x03
    3c48:	20 e0       	ldi	r18, 0x00	; 0
    3c4a:	30 e0       	ldi	r19, 0x00	; 0
    3c4c:	4a e7       	ldi	r20, 0x7A	; 122
    3c4e:	55 e4       	ldi	r21, 0x45	; 69
    3c50:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3c54:	dc 01       	movw	r26, r24
    3c56:	cb 01       	movw	r24, r22
    3c58:	f8 01       	movw	r30, r16
    3c5a:	80 83       	st	Z, r24
    3c5c:	91 83       	std	Z+1, r25	; 0x01
    3c5e:	a2 83       	std	Z+2, r26	; 0x02
    3c60:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c62:	fe 01       	movw	r30, r28
    3c64:	e3 5b       	subi	r30, 0xB3	; 179
    3c66:	ff 4f       	sbci	r31, 0xFF	; 255
    3c68:	60 81       	ld	r22, Z
    3c6a:	71 81       	ldd	r23, Z+1	; 0x01
    3c6c:	82 81       	ldd	r24, Z+2	; 0x02
    3c6e:	93 81       	ldd	r25, Z+3	; 0x03
    3c70:	20 e0       	ldi	r18, 0x00	; 0
    3c72:	30 e0       	ldi	r19, 0x00	; 0
    3c74:	40 e8       	ldi	r20, 0x80	; 128
    3c76:	5f e3       	ldi	r21, 0x3F	; 63
    3c78:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    3c7c:	88 23       	and	r24, r24
    3c7e:	44 f4       	brge	.+16     	; 0x3c90 <LCD_sendCommand+0x20e>
		__ticks = 1;
    3c80:	fe 01       	movw	r30, r28
    3c82:	e5 5b       	subi	r30, 0xB5	; 181
    3c84:	ff 4f       	sbci	r31, 0xFF	; 255
    3c86:	81 e0       	ldi	r24, 0x01	; 1
    3c88:	90 e0       	ldi	r25, 0x00	; 0
    3c8a:	91 83       	std	Z+1, r25	; 0x01
    3c8c:	80 83       	st	Z, r24
    3c8e:	64 c0       	rjmp	.+200    	; 0x3d58 <LCD_sendCommand+0x2d6>
	else if (__tmp > 65535)
    3c90:	fe 01       	movw	r30, r28
    3c92:	e3 5b       	subi	r30, 0xB3	; 179
    3c94:	ff 4f       	sbci	r31, 0xFF	; 255
    3c96:	60 81       	ld	r22, Z
    3c98:	71 81       	ldd	r23, Z+1	; 0x01
    3c9a:	82 81       	ldd	r24, Z+2	; 0x02
    3c9c:	93 81       	ldd	r25, Z+3	; 0x03
    3c9e:	20 e0       	ldi	r18, 0x00	; 0
    3ca0:	3f ef       	ldi	r19, 0xFF	; 255
    3ca2:	4f e7       	ldi	r20, 0x7F	; 127
    3ca4:	57 e4       	ldi	r21, 0x47	; 71
    3ca6:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    3caa:	18 16       	cp	r1, r24
    3cac:	0c f0       	brlt	.+2      	; 0x3cb0 <LCD_sendCommand+0x22e>
    3cae:	43 c0       	rjmp	.+134    	; 0x3d36 <LCD_sendCommand+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cb0:	fe 01       	movw	r30, r28
    3cb2:	ef 5a       	subi	r30, 0xAF	; 175
    3cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb6:	60 81       	ld	r22, Z
    3cb8:	71 81       	ldd	r23, Z+1	; 0x01
    3cba:	82 81       	ldd	r24, Z+2	; 0x02
    3cbc:	93 81       	ldd	r25, Z+3	; 0x03
    3cbe:	20 e0       	ldi	r18, 0x00	; 0
    3cc0:	30 e0       	ldi	r19, 0x00	; 0
    3cc2:	40 e2       	ldi	r20, 0x20	; 32
    3cc4:	51 e4       	ldi	r21, 0x41	; 65
    3cc6:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3cca:	dc 01       	movw	r26, r24
    3ccc:	cb 01       	movw	r24, r22
    3cce:	8e 01       	movw	r16, r28
    3cd0:	05 5b       	subi	r16, 0xB5	; 181
    3cd2:	1f 4f       	sbci	r17, 0xFF	; 255
    3cd4:	bc 01       	movw	r22, r24
    3cd6:	cd 01       	movw	r24, r26
    3cd8:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3cdc:	dc 01       	movw	r26, r24
    3cde:	cb 01       	movw	r24, r22
    3ce0:	f8 01       	movw	r30, r16
    3ce2:	91 83       	std	Z+1, r25	; 0x01
    3ce4:	80 83       	st	Z, r24
    3ce6:	1f c0       	rjmp	.+62     	; 0x3d26 <LCD_sendCommand+0x2a4>
    3ce8:	fe 01       	movw	r30, r28
    3cea:	e7 5b       	subi	r30, 0xB7	; 183
    3cec:	ff 4f       	sbci	r31, 0xFF	; 255
    3cee:	80 e9       	ldi	r24, 0x90	; 144
    3cf0:	91 e0       	ldi	r25, 0x01	; 1
    3cf2:	91 83       	std	Z+1, r25	; 0x01
    3cf4:	80 83       	st	Z, r24
    3cf6:	fe 01       	movw	r30, r28
    3cf8:	e7 5b       	subi	r30, 0xB7	; 183
    3cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    3cfc:	80 81       	ld	r24, Z
    3cfe:	91 81       	ldd	r25, Z+1	; 0x01
    3d00:	01 97       	sbiw	r24, 0x01	; 1
    3d02:	f1 f7       	brne	.-4      	; 0x3d00 <LCD_sendCommand+0x27e>
    3d04:	fe 01       	movw	r30, r28
    3d06:	e7 5b       	subi	r30, 0xB7	; 183
    3d08:	ff 4f       	sbci	r31, 0xFF	; 255
    3d0a:	91 83       	std	Z+1, r25	; 0x01
    3d0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d0e:	de 01       	movw	r26, r28
    3d10:	a5 5b       	subi	r26, 0xB5	; 181
    3d12:	bf 4f       	sbci	r27, 0xFF	; 255
    3d14:	fe 01       	movw	r30, r28
    3d16:	e5 5b       	subi	r30, 0xB5	; 181
    3d18:	ff 4f       	sbci	r31, 0xFF	; 255
    3d1a:	80 81       	ld	r24, Z
    3d1c:	91 81       	ldd	r25, Z+1	; 0x01
    3d1e:	01 97       	sbiw	r24, 0x01	; 1
    3d20:	11 96       	adiw	r26, 0x01	; 1
    3d22:	9c 93       	st	X, r25
    3d24:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d26:	fe 01       	movw	r30, r28
    3d28:	e5 5b       	subi	r30, 0xB5	; 181
    3d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d2c:	80 81       	ld	r24, Z
    3d2e:	91 81       	ldd	r25, Z+1	; 0x01
    3d30:	00 97       	sbiw	r24, 0x00	; 0
    3d32:	d1 f6       	brne	.-76     	; 0x3ce8 <LCD_sendCommand+0x266>
    3d34:	27 c0       	rjmp	.+78     	; 0x3d84 <LCD_sendCommand+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d36:	8e 01       	movw	r16, r28
    3d38:	05 5b       	subi	r16, 0xB5	; 181
    3d3a:	1f 4f       	sbci	r17, 0xFF	; 255
    3d3c:	fe 01       	movw	r30, r28
    3d3e:	e3 5b       	subi	r30, 0xB3	; 179
    3d40:	ff 4f       	sbci	r31, 0xFF	; 255
    3d42:	60 81       	ld	r22, Z
    3d44:	71 81       	ldd	r23, Z+1	; 0x01
    3d46:	82 81       	ldd	r24, Z+2	; 0x02
    3d48:	93 81       	ldd	r25, Z+3	; 0x03
    3d4a:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3d4e:	dc 01       	movw	r26, r24
    3d50:	cb 01       	movw	r24, r22
    3d52:	f8 01       	movw	r30, r16
    3d54:	91 83       	std	Z+1, r25	; 0x01
    3d56:	80 83       	st	Z, r24
    3d58:	de 01       	movw	r26, r28
    3d5a:	a9 5b       	subi	r26, 0xB9	; 185
    3d5c:	bf 4f       	sbci	r27, 0xFF	; 255
    3d5e:	fe 01       	movw	r30, r28
    3d60:	e5 5b       	subi	r30, 0xB5	; 181
    3d62:	ff 4f       	sbci	r31, 0xFF	; 255
    3d64:	80 81       	ld	r24, Z
    3d66:	91 81       	ldd	r25, Z+1	; 0x01
    3d68:	8d 93       	st	X+, r24
    3d6a:	9c 93       	st	X, r25
    3d6c:	fe 01       	movw	r30, r28
    3d6e:	e9 5b       	subi	r30, 0xB9	; 185
    3d70:	ff 4f       	sbci	r31, 0xFF	; 255
    3d72:	80 81       	ld	r24, Z
    3d74:	91 81       	ldd	r25, Z+1	; 0x01
    3d76:	01 97       	sbiw	r24, 0x01	; 1
    3d78:	f1 f7       	brne	.-4      	; 0x3d76 <LCD_sendCommand+0x2f4>
    3d7a:	fe 01       	movw	r30, r28
    3d7c:	e9 5b       	subi	r30, 0xB9	; 185
    3d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d80:	91 83       	std	Z+1, r25	; 0x01
    3d82:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

#if(LCD_DATA_BITS_MODE == 4)
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB4_PIN_ID, GET_BIT(command, 4));
    3d84:	fe 01       	movw	r30, r28
    3d86:	ed 59       	subi	r30, 0x9D	; 157
    3d88:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8a:	80 81       	ld	r24, Z
    3d8c:	88 2f       	mov	r24, r24
    3d8e:	90 e0       	ldi	r25, 0x00	; 0
    3d90:	80 71       	andi	r24, 0x10	; 16
    3d92:	90 70       	andi	r25, 0x00	; 0
    3d94:	95 95       	asr	r25
    3d96:	87 95       	ror	r24
    3d98:	95 95       	asr	r25
    3d9a:	87 95       	ror	r24
    3d9c:	95 95       	asr	r25
    3d9e:	87 95       	ror	r24
    3da0:	95 95       	asr	r25
    3da2:	87 95       	ror	r24
    3da4:	98 2f       	mov	r25, r24
    3da6:	80 e0       	ldi	r24, 0x00	; 0
    3da8:	63 e0       	ldi	r22, 0x03	; 3
    3daa:	49 2f       	mov	r20, r25
    3dac:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB5_PIN_ID, GET_BIT(command, 5));
    3db0:	fe 01       	movw	r30, r28
    3db2:	ed 59       	subi	r30, 0x9D	; 157
    3db4:	ff 4f       	sbci	r31, 0xFF	; 255
    3db6:	80 81       	ld	r24, Z
    3db8:	88 2f       	mov	r24, r24
    3dba:	90 e0       	ldi	r25, 0x00	; 0
    3dbc:	80 72       	andi	r24, 0x20	; 32
    3dbe:	90 70       	andi	r25, 0x00	; 0
    3dc0:	95 95       	asr	r25
    3dc2:	87 95       	ror	r24
    3dc4:	95 95       	asr	r25
    3dc6:	87 95       	ror	r24
    3dc8:	95 95       	asr	r25
    3dca:	87 95       	ror	r24
    3dcc:	95 95       	asr	r25
    3dce:	87 95       	ror	r24
    3dd0:	95 95       	asr	r25
    3dd2:	87 95       	ror	r24
    3dd4:	98 2f       	mov	r25, r24
    3dd6:	80 e0       	ldi	r24, 0x00	; 0
    3dd8:	64 e0       	ldi	r22, 0x04	; 4
    3dda:	49 2f       	mov	r20, r25
    3ddc:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB6_PIN_ID, GET_BIT(command, 6));
    3de0:	fe 01       	movw	r30, r28
    3de2:	ed 59       	subi	r30, 0x9D	; 157
    3de4:	ff 4f       	sbci	r31, 0xFF	; 255
    3de6:	80 81       	ld	r24, Z
    3de8:	88 2f       	mov	r24, r24
    3dea:	90 e0       	ldi	r25, 0x00	; 0
    3dec:	80 74       	andi	r24, 0x40	; 64
    3dee:	90 70       	andi	r25, 0x00	; 0
    3df0:	08 2e       	mov	r0, r24
    3df2:	89 2f       	mov	r24, r25
    3df4:	00 0c       	add	r0, r0
    3df6:	88 1f       	adc	r24, r24
    3df8:	99 0b       	sbc	r25, r25
    3dfa:	00 0c       	add	r0, r0
    3dfc:	88 1f       	adc	r24, r24
    3dfe:	99 1f       	adc	r25, r25
    3e00:	98 2f       	mov	r25, r24
    3e02:	80 e0       	ldi	r24, 0x00	; 0
    3e04:	65 e0       	ldi	r22, 0x05	; 5
    3e06:	49 2f       	mov	r20, r25
    3e08:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB7_PIN_ID, GET_BIT(command, 7));
    3e0c:	fe 01       	movw	r30, r28
    3e0e:	ed 59       	subi	r30, 0x9D	; 157
    3e10:	ff 4f       	sbci	r31, 0xFF	; 255
    3e12:	80 81       	ld	r24, Z
    3e14:	98 2f       	mov	r25, r24
    3e16:	99 1f       	adc	r25, r25
    3e18:	99 27       	eor	r25, r25
    3e1a:	99 1f       	adc	r25, r25
    3e1c:	80 e0       	ldi	r24, 0x00	; 0
    3e1e:	66 e0       	ldi	r22, 0x06	; 6
    3e20:	49 2f       	mov	r20, r25
    3e22:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    3e26:	fe 01       	movw	r30, r28
    3e28:	ed 5b       	subi	r30, 0xBD	; 189
    3e2a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e2c:	80 e0       	ldi	r24, 0x00	; 0
    3e2e:	90 e0       	ldi	r25, 0x00	; 0
    3e30:	a0 e8       	ldi	r26, 0x80	; 128
    3e32:	bf e3       	ldi	r27, 0x3F	; 63
    3e34:	80 83       	st	Z, r24
    3e36:	91 83       	std	Z+1, r25	; 0x01
    3e38:	a2 83       	std	Z+2, r26	; 0x02
    3e3a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e3c:	8e 01       	movw	r16, r28
    3e3e:	01 5c       	subi	r16, 0xC1	; 193
    3e40:	1f 4f       	sbci	r17, 0xFF	; 255
    3e42:	fe 01       	movw	r30, r28
    3e44:	ed 5b       	subi	r30, 0xBD	; 189
    3e46:	ff 4f       	sbci	r31, 0xFF	; 255
    3e48:	60 81       	ld	r22, Z
    3e4a:	71 81       	ldd	r23, Z+1	; 0x01
    3e4c:	82 81       	ldd	r24, Z+2	; 0x02
    3e4e:	93 81       	ldd	r25, Z+3	; 0x03
    3e50:	20 e0       	ldi	r18, 0x00	; 0
    3e52:	30 e0       	ldi	r19, 0x00	; 0
    3e54:	4a e7       	ldi	r20, 0x7A	; 122
    3e56:	55 e4       	ldi	r21, 0x45	; 69
    3e58:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3e5c:	dc 01       	movw	r26, r24
    3e5e:	cb 01       	movw	r24, r22
    3e60:	f8 01       	movw	r30, r16
    3e62:	80 83       	st	Z, r24
    3e64:	91 83       	std	Z+1, r25	; 0x01
    3e66:	a2 83       	std	Z+2, r26	; 0x02
    3e68:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e6a:	fe 01       	movw	r30, r28
    3e6c:	ff 96       	adiw	r30, 0x3f	; 63
    3e6e:	60 81       	ld	r22, Z
    3e70:	71 81       	ldd	r23, Z+1	; 0x01
    3e72:	82 81       	ldd	r24, Z+2	; 0x02
    3e74:	93 81       	ldd	r25, Z+3	; 0x03
    3e76:	20 e0       	ldi	r18, 0x00	; 0
    3e78:	30 e0       	ldi	r19, 0x00	; 0
    3e7a:	40 e8       	ldi	r20, 0x80	; 128
    3e7c:	5f e3       	ldi	r21, 0x3F	; 63
    3e7e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    3e82:	88 23       	and	r24, r24
    3e84:	2c f4       	brge	.+10     	; 0x3e90 <LCD_sendCommand+0x40e>
		__ticks = 1;
    3e86:	81 e0       	ldi	r24, 0x01	; 1
    3e88:	90 e0       	ldi	r25, 0x00	; 0
    3e8a:	9e af       	std	Y+62, r25	; 0x3e
    3e8c:	8d af       	std	Y+61, r24	; 0x3d
    3e8e:	46 c0       	rjmp	.+140    	; 0x3f1c <LCD_sendCommand+0x49a>
	else if (__tmp > 65535)
    3e90:	fe 01       	movw	r30, r28
    3e92:	ff 96       	adiw	r30, 0x3f	; 63
    3e94:	60 81       	ld	r22, Z
    3e96:	71 81       	ldd	r23, Z+1	; 0x01
    3e98:	82 81       	ldd	r24, Z+2	; 0x02
    3e9a:	93 81       	ldd	r25, Z+3	; 0x03
    3e9c:	20 e0       	ldi	r18, 0x00	; 0
    3e9e:	3f ef       	ldi	r19, 0xFF	; 255
    3ea0:	4f e7       	ldi	r20, 0x7F	; 127
    3ea2:	57 e4       	ldi	r21, 0x47	; 71
    3ea4:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    3ea8:	18 16       	cp	r1, r24
    3eaa:	64 f5       	brge	.+88     	; 0x3f04 <LCD_sendCommand+0x482>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3eac:	fe 01       	movw	r30, r28
    3eae:	ed 5b       	subi	r30, 0xBD	; 189
    3eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb2:	60 81       	ld	r22, Z
    3eb4:	71 81       	ldd	r23, Z+1	; 0x01
    3eb6:	82 81       	ldd	r24, Z+2	; 0x02
    3eb8:	93 81       	ldd	r25, Z+3	; 0x03
    3eba:	20 e0       	ldi	r18, 0x00	; 0
    3ebc:	30 e0       	ldi	r19, 0x00	; 0
    3ebe:	40 e2       	ldi	r20, 0x20	; 32
    3ec0:	51 e4       	ldi	r21, 0x41	; 65
    3ec2:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3ec6:	dc 01       	movw	r26, r24
    3ec8:	cb 01       	movw	r24, r22
    3eca:	bc 01       	movw	r22, r24
    3ecc:	cd 01       	movw	r24, r26
    3ece:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3ed2:	dc 01       	movw	r26, r24
    3ed4:	cb 01       	movw	r24, r22
    3ed6:	9e af       	std	Y+62, r25	; 0x3e
    3ed8:	8d af       	std	Y+61, r24	; 0x3d
    3eda:	0f c0       	rjmp	.+30     	; 0x3efa <LCD_sendCommand+0x478>
    3edc:	80 e9       	ldi	r24, 0x90	; 144
    3ede:	91 e0       	ldi	r25, 0x01	; 1
    3ee0:	9c af       	std	Y+60, r25	; 0x3c
    3ee2:	8b af       	std	Y+59, r24	; 0x3b
    3ee4:	8b ad       	ldd	r24, Y+59	; 0x3b
    3ee6:	9c ad       	ldd	r25, Y+60	; 0x3c
    3ee8:	01 97       	sbiw	r24, 0x01	; 1
    3eea:	f1 f7       	brne	.-4      	; 0x3ee8 <LCD_sendCommand+0x466>
    3eec:	9c af       	std	Y+60, r25	; 0x3c
    3eee:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ef0:	8d ad       	ldd	r24, Y+61	; 0x3d
    3ef2:	9e ad       	ldd	r25, Y+62	; 0x3e
    3ef4:	01 97       	sbiw	r24, 0x01	; 1
    3ef6:	9e af       	std	Y+62, r25	; 0x3e
    3ef8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3efa:	8d ad       	ldd	r24, Y+61	; 0x3d
    3efc:	9e ad       	ldd	r25, Y+62	; 0x3e
    3efe:	00 97       	sbiw	r24, 0x00	; 0
    3f00:	69 f7       	brne	.-38     	; 0x3edc <LCD_sendCommand+0x45a>
    3f02:	16 c0       	rjmp	.+44     	; 0x3f30 <LCD_sendCommand+0x4ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f04:	fe 01       	movw	r30, r28
    3f06:	ff 96       	adiw	r30, 0x3f	; 63
    3f08:	60 81       	ld	r22, Z
    3f0a:	71 81       	ldd	r23, Z+1	; 0x01
    3f0c:	82 81       	ldd	r24, Z+2	; 0x02
    3f0e:	93 81       	ldd	r25, Z+3	; 0x03
    3f10:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3f14:	dc 01       	movw	r26, r24
    3f16:	cb 01       	movw	r24, r22
    3f18:	9e af       	std	Y+62, r25	; 0x3e
    3f1a:	8d af       	std	Y+61, r24	; 0x3d
    3f1c:	8d ad       	ldd	r24, Y+61	; 0x3d
    3f1e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3f20:	9a af       	std	Y+58, r25	; 0x3a
    3f22:	89 af       	std	Y+57, r24	; 0x39
    3f24:	89 ad       	ldd	r24, Y+57	; 0x39
    3f26:	9a ad       	ldd	r25, Y+58	; 0x3a
    3f28:	01 97       	sbiw	r24, 0x01	; 1
    3f2a:	f1 f7       	brne	.-4      	; 0x3f28 <LCD_sendCommand+0x4a6>
    3f2c:	9a af       	std	Y+58, r25	; 0x3a
    3f2e:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_LOW); /* Disable LCD E=0 */
    3f30:	80 e0       	ldi	r24, 0x00	; 0
    3f32:	62 e0       	ldi	r22, 0x02	; 2
    3f34:	40 e0       	ldi	r20, 0x00	; 0
    3f36:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    3f3a:	80 e0       	ldi	r24, 0x00	; 0
    3f3c:	90 e0       	ldi	r25, 0x00	; 0
    3f3e:	a0 e8       	ldi	r26, 0x80	; 128
    3f40:	bf e3       	ldi	r27, 0x3F	; 63
    3f42:	8d ab       	std	Y+53, r24	; 0x35
    3f44:	9e ab       	std	Y+54, r25	; 0x36
    3f46:	af ab       	std	Y+55, r26	; 0x37
    3f48:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f4a:	6d a9       	ldd	r22, Y+53	; 0x35
    3f4c:	7e a9       	ldd	r23, Y+54	; 0x36
    3f4e:	8f a9       	ldd	r24, Y+55	; 0x37
    3f50:	98 ad       	ldd	r25, Y+56	; 0x38
    3f52:	20 e0       	ldi	r18, 0x00	; 0
    3f54:	30 e0       	ldi	r19, 0x00	; 0
    3f56:	4a e7       	ldi	r20, 0x7A	; 122
    3f58:	55 e4       	ldi	r21, 0x45	; 69
    3f5a:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3f5e:	dc 01       	movw	r26, r24
    3f60:	cb 01       	movw	r24, r22
    3f62:	89 ab       	std	Y+49, r24	; 0x31
    3f64:	9a ab       	std	Y+50, r25	; 0x32
    3f66:	ab ab       	std	Y+51, r26	; 0x33
    3f68:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3f6a:	69 a9       	ldd	r22, Y+49	; 0x31
    3f6c:	7a a9       	ldd	r23, Y+50	; 0x32
    3f6e:	8b a9       	ldd	r24, Y+51	; 0x33
    3f70:	9c a9       	ldd	r25, Y+52	; 0x34
    3f72:	20 e0       	ldi	r18, 0x00	; 0
    3f74:	30 e0       	ldi	r19, 0x00	; 0
    3f76:	40 e8       	ldi	r20, 0x80	; 128
    3f78:	5f e3       	ldi	r21, 0x3F	; 63
    3f7a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    3f7e:	88 23       	and	r24, r24
    3f80:	2c f4       	brge	.+10     	; 0x3f8c <LCD_sendCommand+0x50a>
		__ticks = 1;
    3f82:	81 e0       	ldi	r24, 0x01	; 1
    3f84:	90 e0       	ldi	r25, 0x00	; 0
    3f86:	98 ab       	std	Y+48, r25	; 0x30
    3f88:	8f a7       	std	Y+47, r24	; 0x2f
    3f8a:	3f c0       	rjmp	.+126    	; 0x400a <LCD_sendCommand+0x588>
	else if (__tmp > 65535)
    3f8c:	69 a9       	ldd	r22, Y+49	; 0x31
    3f8e:	7a a9       	ldd	r23, Y+50	; 0x32
    3f90:	8b a9       	ldd	r24, Y+51	; 0x33
    3f92:	9c a9       	ldd	r25, Y+52	; 0x34
    3f94:	20 e0       	ldi	r18, 0x00	; 0
    3f96:	3f ef       	ldi	r19, 0xFF	; 255
    3f98:	4f e7       	ldi	r20, 0x7F	; 127
    3f9a:	57 e4       	ldi	r21, 0x47	; 71
    3f9c:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    3fa0:	18 16       	cp	r1, r24
    3fa2:	4c f5       	brge	.+82     	; 0x3ff6 <LCD_sendCommand+0x574>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fa4:	6d a9       	ldd	r22, Y+53	; 0x35
    3fa6:	7e a9       	ldd	r23, Y+54	; 0x36
    3fa8:	8f a9       	ldd	r24, Y+55	; 0x37
    3faa:	98 ad       	ldd	r25, Y+56	; 0x38
    3fac:	20 e0       	ldi	r18, 0x00	; 0
    3fae:	30 e0       	ldi	r19, 0x00	; 0
    3fb0:	40 e2       	ldi	r20, 0x20	; 32
    3fb2:	51 e4       	ldi	r21, 0x41	; 65
    3fb4:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    3fb8:	dc 01       	movw	r26, r24
    3fba:	cb 01       	movw	r24, r22
    3fbc:	bc 01       	movw	r22, r24
    3fbe:	cd 01       	movw	r24, r26
    3fc0:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    3fc4:	dc 01       	movw	r26, r24
    3fc6:	cb 01       	movw	r24, r22
    3fc8:	98 ab       	std	Y+48, r25	; 0x30
    3fca:	8f a7       	std	Y+47, r24	; 0x2f
    3fcc:	0f c0       	rjmp	.+30     	; 0x3fec <LCD_sendCommand+0x56a>
    3fce:	80 e9       	ldi	r24, 0x90	; 144
    3fd0:	91 e0       	ldi	r25, 0x01	; 1
    3fd2:	9e a7       	std	Y+46, r25	; 0x2e
    3fd4:	8d a7       	std	Y+45, r24	; 0x2d
    3fd6:	8d a5       	ldd	r24, Y+45	; 0x2d
    3fd8:	9e a5       	ldd	r25, Y+46	; 0x2e
    3fda:	01 97       	sbiw	r24, 0x01	; 1
    3fdc:	f1 f7       	brne	.-4      	; 0x3fda <LCD_sendCommand+0x558>
    3fde:	9e a7       	std	Y+46, r25	; 0x2e
    3fe0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fe2:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fe4:	98 a9       	ldd	r25, Y+48	; 0x30
    3fe6:	01 97       	sbiw	r24, 0x01	; 1
    3fe8:	98 ab       	std	Y+48, r25	; 0x30
    3fea:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fec:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fee:	98 a9       	ldd	r25, Y+48	; 0x30
    3ff0:	00 97       	sbiw	r24, 0x00	; 0
    3ff2:	69 f7       	brne	.-38     	; 0x3fce <LCD_sendCommand+0x54c>
    3ff4:	14 c0       	rjmp	.+40     	; 0x401e <LCD_sendCommand+0x59c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ff6:	69 a9       	ldd	r22, Y+49	; 0x31
    3ff8:	7a a9       	ldd	r23, Y+50	; 0x32
    3ffa:	8b a9       	ldd	r24, Y+51	; 0x33
    3ffc:	9c a9       	ldd	r25, Y+52	; 0x34
    3ffe:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4002:	dc 01       	movw	r26, r24
    4004:	cb 01       	movw	r24, r22
    4006:	98 ab       	std	Y+48, r25	; 0x30
    4008:	8f a7       	std	Y+47, r24	; 0x2f
    400a:	8f a5       	ldd	r24, Y+47	; 0x2f
    400c:	98 a9       	ldd	r25, Y+48	; 0x30
    400e:	9c a7       	std	Y+44, r25	; 0x2c
    4010:	8b a7       	std	Y+43, r24	; 0x2b
    4012:	8b a5       	ldd	r24, Y+43	; 0x2b
    4014:	9c a5       	ldd	r25, Y+44	; 0x2c
    4016:	01 97       	sbiw	r24, 0x01	; 1
    4018:	f1 f7       	brne	.-4      	; 0x4016 <LCD_sendCommand+0x594>
    401a:	9c a7       	std	Y+44, r25	; 0x2c
    401c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_HIGH); /* Enable LCD E=1 */
    401e:	80 e0       	ldi	r24, 0x00	; 0
    4020:	62 e0       	ldi	r22, 0x02	; 2
    4022:	41 e0       	ldi	r20, 0x01	; 1
    4024:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    4028:	80 e0       	ldi	r24, 0x00	; 0
    402a:	90 e0       	ldi	r25, 0x00	; 0
    402c:	a0 e8       	ldi	r26, 0x80	; 128
    402e:	bf e3       	ldi	r27, 0x3F	; 63
    4030:	8f a3       	std	Y+39, r24	; 0x27
    4032:	98 a7       	std	Y+40, r25	; 0x28
    4034:	a9 a7       	std	Y+41, r26	; 0x29
    4036:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4038:	6f a1       	ldd	r22, Y+39	; 0x27
    403a:	78 a5       	ldd	r23, Y+40	; 0x28
    403c:	89 a5       	ldd	r24, Y+41	; 0x29
    403e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4040:	20 e0       	ldi	r18, 0x00	; 0
    4042:	30 e0       	ldi	r19, 0x00	; 0
    4044:	4a e7       	ldi	r20, 0x7A	; 122
    4046:	55 e4       	ldi	r21, 0x45	; 69
    4048:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    404c:	dc 01       	movw	r26, r24
    404e:	cb 01       	movw	r24, r22
    4050:	8b a3       	std	Y+35, r24	; 0x23
    4052:	9c a3       	std	Y+36, r25	; 0x24
    4054:	ad a3       	std	Y+37, r26	; 0x25
    4056:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4058:	6b a1       	ldd	r22, Y+35	; 0x23
    405a:	7c a1       	ldd	r23, Y+36	; 0x24
    405c:	8d a1       	ldd	r24, Y+37	; 0x25
    405e:	9e a1       	ldd	r25, Y+38	; 0x26
    4060:	20 e0       	ldi	r18, 0x00	; 0
    4062:	30 e0       	ldi	r19, 0x00	; 0
    4064:	40 e8       	ldi	r20, 0x80	; 128
    4066:	5f e3       	ldi	r21, 0x3F	; 63
    4068:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    406c:	88 23       	and	r24, r24
    406e:	2c f4       	brge	.+10     	; 0x407a <LCD_sendCommand+0x5f8>
		__ticks = 1;
    4070:	81 e0       	ldi	r24, 0x01	; 1
    4072:	90 e0       	ldi	r25, 0x00	; 0
    4074:	9a a3       	std	Y+34, r25	; 0x22
    4076:	89 a3       	std	Y+33, r24	; 0x21
    4078:	3f c0       	rjmp	.+126    	; 0x40f8 <LCD_sendCommand+0x676>
	else if (__tmp > 65535)
    407a:	6b a1       	ldd	r22, Y+35	; 0x23
    407c:	7c a1       	ldd	r23, Y+36	; 0x24
    407e:	8d a1       	ldd	r24, Y+37	; 0x25
    4080:	9e a1       	ldd	r25, Y+38	; 0x26
    4082:	20 e0       	ldi	r18, 0x00	; 0
    4084:	3f ef       	ldi	r19, 0xFF	; 255
    4086:	4f e7       	ldi	r20, 0x7F	; 127
    4088:	57 e4       	ldi	r21, 0x47	; 71
    408a:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    408e:	18 16       	cp	r1, r24
    4090:	4c f5       	brge	.+82     	; 0x40e4 <LCD_sendCommand+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4092:	6f a1       	ldd	r22, Y+39	; 0x27
    4094:	78 a5       	ldd	r23, Y+40	; 0x28
    4096:	89 a5       	ldd	r24, Y+41	; 0x29
    4098:	9a a5       	ldd	r25, Y+42	; 0x2a
    409a:	20 e0       	ldi	r18, 0x00	; 0
    409c:	30 e0       	ldi	r19, 0x00	; 0
    409e:	40 e2       	ldi	r20, 0x20	; 32
    40a0:	51 e4       	ldi	r21, 0x41	; 65
    40a2:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    40a6:	dc 01       	movw	r26, r24
    40a8:	cb 01       	movw	r24, r22
    40aa:	bc 01       	movw	r22, r24
    40ac:	cd 01       	movw	r24, r26
    40ae:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    40b2:	dc 01       	movw	r26, r24
    40b4:	cb 01       	movw	r24, r22
    40b6:	9a a3       	std	Y+34, r25	; 0x22
    40b8:	89 a3       	std	Y+33, r24	; 0x21
    40ba:	0f c0       	rjmp	.+30     	; 0x40da <LCD_sendCommand+0x658>
    40bc:	80 e9       	ldi	r24, 0x90	; 144
    40be:	91 e0       	ldi	r25, 0x01	; 1
    40c0:	98 a3       	std	Y+32, r25	; 0x20
    40c2:	8f 8f       	std	Y+31, r24	; 0x1f
    40c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    40c6:	98 a1       	ldd	r25, Y+32	; 0x20
    40c8:	01 97       	sbiw	r24, 0x01	; 1
    40ca:	f1 f7       	brne	.-4      	; 0x40c8 <LCD_sendCommand+0x646>
    40cc:	98 a3       	std	Y+32, r25	; 0x20
    40ce:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40d0:	89 a1       	ldd	r24, Y+33	; 0x21
    40d2:	9a a1       	ldd	r25, Y+34	; 0x22
    40d4:	01 97       	sbiw	r24, 0x01	; 1
    40d6:	9a a3       	std	Y+34, r25	; 0x22
    40d8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40da:	89 a1       	ldd	r24, Y+33	; 0x21
    40dc:	9a a1       	ldd	r25, Y+34	; 0x22
    40de:	00 97       	sbiw	r24, 0x00	; 0
    40e0:	69 f7       	brne	.-38     	; 0x40bc <LCD_sendCommand+0x63a>
    40e2:	14 c0       	rjmp	.+40     	; 0x410c <LCD_sendCommand+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40e4:	6b a1       	ldd	r22, Y+35	; 0x23
    40e6:	7c a1       	ldd	r23, Y+36	; 0x24
    40e8:	8d a1       	ldd	r24, Y+37	; 0x25
    40ea:	9e a1       	ldd	r25, Y+38	; 0x26
    40ec:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    40f0:	dc 01       	movw	r26, r24
    40f2:	cb 01       	movw	r24, r22
    40f4:	9a a3       	std	Y+34, r25	; 0x22
    40f6:	89 a3       	std	Y+33, r24	; 0x21
    40f8:	89 a1       	ldd	r24, Y+33	; 0x21
    40fa:	9a a1       	ldd	r25, Y+34	; 0x22
    40fc:	9e 8f       	std	Y+30, r25	; 0x1e
    40fe:	8d 8f       	std	Y+29, r24	; 0x1d
    4100:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4102:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4104:	01 97       	sbiw	r24, 0x01	; 1
    4106:	f1 f7       	brne	.-4      	; 0x4104 <LCD_sendCommand+0x682>
    4108:	9e 8f       	std	Y+30, r25	; 0x1e
    410a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB4_PIN_ID, GET_BIT(command, 0));
    410c:	fe 01       	movw	r30, r28
    410e:	ed 59       	subi	r30, 0x9D	; 157
    4110:	ff 4f       	sbci	r31, 0xFF	; 255
    4112:	80 81       	ld	r24, Z
    4114:	98 2f       	mov	r25, r24
    4116:	91 70       	andi	r25, 0x01	; 1
    4118:	80 e0       	ldi	r24, 0x00	; 0
    411a:	63 e0       	ldi	r22, 0x03	; 3
    411c:	49 2f       	mov	r20, r25
    411e:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB5_PIN_ID, GET_BIT(command, 1));
    4122:	fe 01       	movw	r30, r28
    4124:	ed 59       	subi	r30, 0x9D	; 157
    4126:	ff 4f       	sbci	r31, 0xFF	; 255
    4128:	80 81       	ld	r24, Z
    412a:	88 2f       	mov	r24, r24
    412c:	90 e0       	ldi	r25, 0x00	; 0
    412e:	82 70       	andi	r24, 0x02	; 2
    4130:	90 70       	andi	r25, 0x00	; 0
    4132:	95 95       	asr	r25
    4134:	87 95       	ror	r24
    4136:	98 2f       	mov	r25, r24
    4138:	80 e0       	ldi	r24, 0x00	; 0
    413a:	64 e0       	ldi	r22, 0x04	; 4
    413c:	49 2f       	mov	r20, r25
    413e:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB6_PIN_ID, GET_BIT(command, 2));
    4142:	fe 01       	movw	r30, r28
    4144:	ed 59       	subi	r30, 0x9D	; 157
    4146:	ff 4f       	sbci	r31, 0xFF	; 255
    4148:	80 81       	ld	r24, Z
    414a:	88 2f       	mov	r24, r24
    414c:	90 e0       	ldi	r25, 0x00	; 0
    414e:	84 70       	andi	r24, 0x04	; 4
    4150:	90 70       	andi	r25, 0x00	; 0
    4152:	95 95       	asr	r25
    4154:	87 95       	ror	r24
    4156:	95 95       	asr	r25
    4158:	87 95       	ror	r24
    415a:	98 2f       	mov	r25, r24
    415c:	80 e0       	ldi	r24, 0x00	; 0
    415e:	65 e0       	ldi	r22, 0x05	; 5
    4160:	49 2f       	mov	r20, r25
    4162:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB7_PIN_ID, GET_BIT(command, 3));
    4166:	fe 01       	movw	r30, r28
    4168:	ed 59       	subi	r30, 0x9D	; 157
    416a:	ff 4f       	sbci	r31, 0xFF	; 255
    416c:	80 81       	ld	r24, Z
    416e:	88 2f       	mov	r24, r24
    4170:	90 e0       	ldi	r25, 0x00	; 0
    4172:	88 70       	andi	r24, 0x08	; 8
    4174:	90 70       	andi	r25, 0x00	; 0
    4176:	95 95       	asr	r25
    4178:	87 95       	ror	r24
    417a:	95 95       	asr	r25
    417c:	87 95       	ror	r24
    417e:	95 95       	asr	r25
    4180:	87 95       	ror	r24
    4182:	98 2f       	mov	r25, r24
    4184:	80 e0       	ldi	r24, 0x00	; 0
    4186:	66 e0       	ldi	r22, 0x06	; 6
    4188:	49 2f       	mov	r20, r25
    418a:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    418e:	80 e0       	ldi	r24, 0x00	; 0
    4190:	90 e0       	ldi	r25, 0x00	; 0
    4192:	a0 e8       	ldi	r26, 0x80	; 128
    4194:	bf e3       	ldi	r27, 0x3F	; 63
    4196:	89 8f       	std	Y+25, r24	; 0x19
    4198:	9a 8f       	std	Y+26, r25	; 0x1a
    419a:	ab 8f       	std	Y+27, r26	; 0x1b
    419c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    419e:	69 8d       	ldd	r22, Y+25	; 0x19
    41a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    41a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    41a6:	20 e0       	ldi	r18, 0x00	; 0
    41a8:	30 e0       	ldi	r19, 0x00	; 0
    41aa:	4a e7       	ldi	r20, 0x7A	; 122
    41ac:	55 e4       	ldi	r21, 0x45	; 69
    41ae:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    41b2:	dc 01       	movw	r26, r24
    41b4:	cb 01       	movw	r24, r22
    41b6:	8d 8b       	std	Y+21, r24	; 0x15
    41b8:	9e 8b       	std	Y+22, r25	; 0x16
    41ba:	af 8b       	std	Y+23, r26	; 0x17
    41bc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    41be:	6d 89       	ldd	r22, Y+21	; 0x15
    41c0:	7e 89       	ldd	r23, Y+22	; 0x16
    41c2:	8f 89       	ldd	r24, Y+23	; 0x17
    41c4:	98 8d       	ldd	r25, Y+24	; 0x18
    41c6:	20 e0       	ldi	r18, 0x00	; 0
    41c8:	30 e0       	ldi	r19, 0x00	; 0
    41ca:	40 e8       	ldi	r20, 0x80	; 128
    41cc:	5f e3       	ldi	r21, 0x3F	; 63
    41ce:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    41d2:	88 23       	and	r24, r24
    41d4:	2c f4       	brge	.+10     	; 0x41e0 <LCD_sendCommand+0x75e>
		__ticks = 1;
    41d6:	81 e0       	ldi	r24, 0x01	; 1
    41d8:	90 e0       	ldi	r25, 0x00	; 0
    41da:	9c 8b       	std	Y+20, r25	; 0x14
    41dc:	8b 8b       	std	Y+19, r24	; 0x13
    41de:	3f c0       	rjmp	.+126    	; 0x425e <LCD_sendCommand+0x7dc>
	else if (__tmp > 65535)
    41e0:	6d 89       	ldd	r22, Y+21	; 0x15
    41e2:	7e 89       	ldd	r23, Y+22	; 0x16
    41e4:	8f 89       	ldd	r24, Y+23	; 0x17
    41e6:	98 8d       	ldd	r25, Y+24	; 0x18
    41e8:	20 e0       	ldi	r18, 0x00	; 0
    41ea:	3f ef       	ldi	r19, 0xFF	; 255
    41ec:	4f e7       	ldi	r20, 0x7F	; 127
    41ee:	57 e4       	ldi	r21, 0x47	; 71
    41f0:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    41f4:	18 16       	cp	r1, r24
    41f6:	4c f5       	brge	.+82     	; 0x424a <LCD_sendCommand+0x7c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41f8:	69 8d       	ldd	r22, Y+25	; 0x19
    41fa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    41fc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41fe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4200:	20 e0       	ldi	r18, 0x00	; 0
    4202:	30 e0       	ldi	r19, 0x00	; 0
    4204:	40 e2       	ldi	r20, 0x20	; 32
    4206:	51 e4       	ldi	r21, 0x41	; 65
    4208:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    420c:	dc 01       	movw	r26, r24
    420e:	cb 01       	movw	r24, r22
    4210:	bc 01       	movw	r22, r24
    4212:	cd 01       	movw	r24, r26
    4214:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4218:	dc 01       	movw	r26, r24
    421a:	cb 01       	movw	r24, r22
    421c:	9c 8b       	std	Y+20, r25	; 0x14
    421e:	8b 8b       	std	Y+19, r24	; 0x13
    4220:	0f c0       	rjmp	.+30     	; 0x4240 <LCD_sendCommand+0x7be>
    4222:	80 e9       	ldi	r24, 0x90	; 144
    4224:	91 e0       	ldi	r25, 0x01	; 1
    4226:	9a 8b       	std	Y+18, r25	; 0x12
    4228:	89 8b       	std	Y+17, r24	; 0x11
    422a:	89 89       	ldd	r24, Y+17	; 0x11
    422c:	9a 89       	ldd	r25, Y+18	; 0x12
    422e:	01 97       	sbiw	r24, 0x01	; 1
    4230:	f1 f7       	brne	.-4      	; 0x422e <LCD_sendCommand+0x7ac>
    4232:	9a 8b       	std	Y+18, r25	; 0x12
    4234:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4236:	8b 89       	ldd	r24, Y+19	; 0x13
    4238:	9c 89       	ldd	r25, Y+20	; 0x14
    423a:	01 97       	sbiw	r24, 0x01	; 1
    423c:	9c 8b       	std	Y+20, r25	; 0x14
    423e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4240:	8b 89       	ldd	r24, Y+19	; 0x13
    4242:	9c 89       	ldd	r25, Y+20	; 0x14
    4244:	00 97       	sbiw	r24, 0x00	; 0
    4246:	69 f7       	brne	.-38     	; 0x4222 <LCD_sendCommand+0x7a0>
    4248:	14 c0       	rjmp	.+40     	; 0x4272 <LCD_sendCommand+0x7f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    424a:	6d 89       	ldd	r22, Y+21	; 0x15
    424c:	7e 89       	ldd	r23, Y+22	; 0x16
    424e:	8f 89       	ldd	r24, Y+23	; 0x17
    4250:	98 8d       	ldd	r25, Y+24	; 0x18
    4252:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4256:	dc 01       	movw	r26, r24
    4258:	cb 01       	movw	r24, r22
    425a:	9c 8b       	std	Y+20, r25	; 0x14
    425c:	8b 8b       	std	Y+19, r24	; 0x13
    425e:	8b 89       	ldd	r24, Y+19	; 0x13
    4260:	9c 89       	ldd	r25, Y+20	; 0x14
    4262:	98 8b       	std	Y+16, r25	; 0x10
    4264:	8f 87       	std	Y+15, r24	; 0x0f
    4266:	8f 85       	ldd	r24, Y+15	; 0x0f
    4268:	98 89       	ldd	r25, Y+16	; 0x10
    426a:	01 97       	sbiw	r24, 0x01	; 1
    426c:	f1 f7       	brne	.-4      	; 0x426a <LCD_sendCommand+0x7e8>
    426e:	98 8b       	std	Y+16, r25	; 0x10
    4270:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_LOW); /* Disable LCD E=0 */
    4272:	80 e0       	ldi	r24, 0x00	; 0
    4274:	62 e0       	ldi	r22, 0x02	; 2
    4276:	40 e0       	ldi	r20, 0x00	; 0
    4278:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    427c:	80 e0       	ldi	r24, 0x00	; 0
    427e:	90 e0       	ldi	r25, 0x00	; 0
    4280:	a0 e8       	ldi	r26, 0x80	; 128
    4282:	bf e3       	ldi	r27, 0x3F	; 63
    4284:	8b 87       	std	Y+11, r24	; 0x0b
    4286:	9c 87       	std	Y+12, r25	; 0x0c
    4288:	ad 87       	std	Y+13, r26	; 0x0d
    428a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    428c:	6b 85       	ldd	r22, Y+11	; 0x0b
    428e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4290:	8d 85       	ldd	r24, Y+13	; 0x0d
    4292:	9e 85       	ldd	r25, Y+14	; 0x0e
    4294:	20 e0       	ldi	r18, 0x00	; 0
    4296:	30 e0       	ldi	r19, 0x00	; 0
    4298:	4a e7       	ldi	r20, 0x7A	; 122
    429a:	55 e4       	ldi	r21, 0x45	; 69
    429c:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    42a0:	dc 01       	movw	r26, r24
    42a2:	cb 01       	movw	r24, r22
    42a4:	8f 83       	std	Y+7, r24	; 0x07
    42a6:	98 87       	std	Y+8, r25	; 0x08
    42a8:	a9 87       	std	Y+9, r26	; 0x09
    42aa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    42ac:	6f 81       	ldd	r22, Y+7	; 0x07
    42ae:	78 85       	ldd	r23, Y+8	; 0x08
    42b0:	89 85       	ldd	r24, Y+9	; 0x09
    42b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    42b4:	20 e0       	ldi	r18, 0x00	; 0
    42b6:	30 e0       	ldi	r19, 0x00	; 0
    42b8:	40 e8       	ldi	r20, 0x80	; 128
    42ba:	5f e3       	ldi	r21, 0x3F	; 63
    42bc:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    42c0:	88 23       	and	r24, r24
    42c2:	2c f4       	brge	.+10     	; 0x42ce <LCD_sendCommand+0x84c>
		__ticks = 1;
    42c4:	81 e0       	ldi	r24, 0x01	; 1
    42c6:	90 e0       	ldi	r25, 0x00	; 0
    42c8:	9e 83       	std	Y+6, r25	; 0x06
    42ca:	8d 83       	std	Y+5, r24	; 0x05
    42cc:	3f c0       	rjmp	.+126    	; 0x434c <LCD_sendCommand+0x8ca>
	else if (__tmp > 65535)
    42ce:	6f 81       	ldd	r22, Y+7	; 0x07
    42d0:	78 85       	ldd	r23, Y+8	; 0x08
    42d2:	89 85       	ldd	r24, Y+9	; 0x09
    42d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    42d6:	20 e0       	ldi	r18, 0x00	; 0
    42d8:	3f ef       	ldi	r19, 0xFF	; 255
    42da:	4f e7       	ldi	r20, 0x7F	; 127
    42dc:	57 e4       	ldi	r21, 0x47	; 71
    42de:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    42e2:	18 16       	cp	r1, r24
    42e4:	4c f5       	brge	.+82     	; 0x4338 <LCD_sendCommand+0x8b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    42e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    42ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    42ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    42ee:	20 e0       	ldi	r18, 0x00	; 0
    42f0:	30 e0       	ldi	r19, 0x00	; 0
    42f2:	40 e2       	ldi	r20, 0x20	; 32
    42f4:	51 e4       	ldi	r21, 0x41	; 65
    42f6:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    42fa:	dc 01       	movw	r26, r24
    42fc:	cb 01       	movw	r24, r22
    42fe:	bc 01       	movw	r22, r24
    4300:	cd 01       	movw	r24, r26
    4302:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4306:	dc 01       	movw	r26, r24
    4308:	cb 01       	movw	r24, r22
    430a:	9e 83       	std	Y+6, r25	; 0x06
    430c:	8d 83       	std	Y+5, r24	; 0x05
    430e:	0f c0       	rjmp	.+30     	; 0x432e <LCD_sendCommand+0x8ac>
    4310:	80 e9       	ldi	r24, 0x90	; 144
    4312:	91 e0       	ldi	r25, 0x01	; 1
    4314:	9c 83       	std	Y+4, r25	; 0x04
    4316:	8b 83       	std	Y+3, r24	; 0x03
    4318:	8b 81       	ldd	r24, Y+3	; 0x03
    431a:	9c 81       	ldd	r25, Y+4	; 0x04
    431c:	01 97       	sbiw	r24, 0x01	; 1
    431e:	f1 f7       	brne	.-4      	; 0x431c <LCD_sendCommand+0x89a>
    4320:	9c 83       	std	Y+4, r25	; 0x04
    4322:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4324:	8d 81       	ldd	r24, Y+5	; 0x05
    4326:	9e 81       	ldd	r25, Y+6	; 0x06
    4328:	01 97       	sbiw	r24, 0x01	; 1
    432a:	9e 83       	std	Y+6, r25	; 0x06
    432c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    432e:	8d 81       	ldd	r24, Y+5	; 0x05
    4330:	9e 81       	ldd	r25, Y+6	; 0x06
    4332:	00 97       	sbiw	r24, 0x00	; 0
    4334:	69 f7       	brne	.-38     	; 0x4310 <LCD_sendCommand+0x88e>
    4336:	14 c0       	rjmp	.+40     	; 0x4360 <LCD_sendCommand+0x8de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4338:	6f 81       	ldd	r22, Y+7	; 0x07
    433a:	78 85       	ldd	r23, Y+8	; 0x08
    433c:	89 85       	ldd	r24, Y+9	; 0x09
    433e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4340:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4344:	dc 01       	movw	r26, r24
    4346:	cb 01       	movw	r24, r22
    4348:	9e 83       	std	Y+6, r25	; 0x06
    434a:	8d 83       	std	Y+5, r24	; 0x05
    434c:	8d 81       	ldd	r24, Y+5	; 0x05
    434e:	9e 81       	ldd	r25, Y+6	; 0x06
    4350:	9a 83       	std	Y+2, r25	; 0x02
    4352:	89 83       	std	Y+1, r24	; 0x01
    4354:	89 81       	ldd	r24, Y+1	; 0x01
    4356:	9a 81       	ldd	r25, Y+2	; 0x02
    4358:	01 97       	sbiw	r24, 0x01	; 1
    435a:	f1 f7       	brne	.-4      	; 0x4358 <LCD_sendCommand+0x8d6>
    435c:	9a 83       	std	Y+2, r25	; 0x02
    435e:	89 83       	std	Y+1, r24	; 0x01
	GPIO_writePort(LCD_DATA_PORT_ID,command); /* out the required command to the data bus D0 --> D7 */
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
	_delay_ms(1); /* delay for processing Th = 13ns */
#endif
}
    4360:	cd 59       	subi	r28, 0x9D	; 157
    4362:	df 4f       	sbci	r29, 0xFF	; 255
    4364:	0f b6       	in	r0, 0x3f	; 63
    4366:	f8 94       	cli
    4368:	de bf       	out	0x3e, r29	; 62
    436a:	0f be       	out	0x3f, r0	; 63
    436c:	cd bf       	out	0x3d, r28	; 61
    436e:	cf 91       	pop	r28
    4370:	df 91       	pop	r29
    4372:	1f 91       	pop	r17
    4374:	0f 91       	pop	r16
    4376:	08 95       	ret

00004378 <LCD_displayCharacter>:

/*
 * Description :
 * Display the required character on the screen
 */
void LCD_displayCharacter(uint8 data) {
    4378:	0f 93       	push	r16
    437a:	1f 93       	push	r17
    437c:	df 93       	push	r29
    437e:	cf 93       	push	r28
    4380:	cd b7       	in	r28, 0x3d	; 61
    4382:	de b7       	in	r29, 0x3e	; 62
    4384:	c3 56       	subi	r28, 0x63	; 99
    4386:	d0 40       	sbci	r29, 0x00	; 0
    4388:	0f b6       	in	r0, 0x3f	; 63
    438a:	f8 94       	cli
    438c:	de bf       	out	0x3e, r29	; 62
    438e:	0f be       	out	0x3f, r0	; 63
    4390:	cd bf       	out	0x3d, r28	; 61
    4392:	fe 01       	movw	r30, r28
    4394:	ed 59       	subi	r30, 0x9D	; 157
    4396:	ff 4f       	sbci	r31, 0xFF	; 255
    4398:	80 83       	st	Z, r24
	GPIO_writePin(LCD_RS_PORT_ID, LCD_RS_PIN_ID, LOGIC_HIGH); /* Data Mode RS=1 */
    439a:	80 e0       	ldi	r24, 0x00	; 0
    439c:	61 e0       	ldi	r22, 0x01	; 1
    439e:	41 e0       	ldi	r20, 0x01	; 1
    43a0:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    43a4:	fe 01       	movw	r30, r28
    43a6:	e1 5a       	subi	r30, 0xA1	; 161
    43a8:	ff 4f       	sbci	r31, 0xFF	; 255
    43aa:	80 e0       	ldi	r24, 0x00	; 0
    43ac:	90 e0       	ldi	r25, 0x00	; 0
    43ae:	a0 e8       	ldi	r26, 0x80	; 128
    43b0:	bf e3       	ldi	r27, 0x3F	; 63
    43b2:	80 83       	st	Z, r24
    43b4:	91 83       	std	Z+1, r25	; 0x01
    43b6:	a2 83       	std	Z+2, r26	; 0x02
    43b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43ba:	8e 01       	movw	r16, r28
    43bc:	05 5a       	subi	r16, 0xA5	; 165
    43be:	1f 4f       	sbci	r17, 0xFF	; 255
    43c0:	fe 01       	movw	r30, r28
    43c2:	e1 5a       	subi	r30, 0xA1	; 161
    43c4:	ff 4f       	sbci	r31, 0xFF	; 255
    43c6:	60 81       	ld	r22, Z
    43c8:	71 81       	ldd	r23, Z+1	; 0x01
    43ca:	82 81       	ldd	r24, Z+2	; 0x02
    43cc:	93 81       	ldd	r25, Z+3	; 0x03
    43ce:	20 e0       	ldi	r18, 0x00	; 0
    43d0:	30 e0       	ldi	r19, 0x00	; 0
    43d2:	4a e7       	ldi	r20, 0x7A	; 122
    43d4:	55 e4       	ldi	r21, 0x45	; 69
    43d6:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    43da:	dc 01       	movw	r26, r24
    43dc:	cb 01       	movw	r24, r22
    43de:	f8 01       	movw	r30, r16
    43e0:	80 83       	st	Z, r24
    43e2:	91 83       	std	Z+1, r25	; 0x01
    43e4:	a2 83       	std	Z+2, r26	; 0x02
    43e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43e8:	fe 01       	movw	r30, r28
    43ea:	e5 5a       	subi	r30, 0xA5	; 165
    43ec:	ff 4f       	sbci	r31, 0xFF	; 255
    43ee:	60 81       	ld	r22, Z
    43f0:	71 81       	ldd	r23, Z+1	; 0x01
    43f2:	82 81       	ldd	r24, Z+2	; 0x02
    43f4:	93 81       	ldd	r25, Z+3	; 0x03
    43f6:	20 e0       	ldi	r18, 0x00	; 0
    43f8:	30 e0       	ldi	r19, 0x00	; 0
    43fa:	40 e8       	ldi	r20, 0x80	; 128
    43fc:	5f e3       	ldi	r21, 0x3F	; 63
    43fe:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    4402:	88 23       	and	r24, r24
    4404:	44 f4       	brge	.+16     	; 0x4416 <LCD_displayCharacter+0x9e>
		__ticks = 1;
    4406:	fe 01       	movw	r30, r28
    4408:	e7 5a       	subi	r30, 0xA7	; 167
    440a:	ff 4f       	sbci	r31, 0xFF	; 255
    440c:	81 e0       	ldi	r24, 0x01	; 1
    440e:	90 e0       	ldi	r25, 0x00	; 0
    4410:	91 83       	std	Z+1, r25	; 0x01
    4412:	80 83       	st	Z, r24
    4414:	64 c0       	rjmp	.+200    	; 0x44de <LCD_displayCharacter+0x166>
	else if (__tmp > 65535)
    4416:	fe 01       	movw	r30, r28
    4418:	e5 5a       	subi	r30, 0xA5	; 165
    441a:	ff 4f       	sbci	r31, 0xFF	; 255
    441c:	60 81       	ld	r22, Z
    441e:	71 81       	ldd	r23, Z+1	; 0x01
    4420:	82 81       	ldd	r24, Z+2	; 0x02
    4422:	93 81       	ldd	r25, Z+3	; 0x03
    4424:	20 e0       	ldi	r18, 0x00	; 0
    4426:	3f ef       	ldi	r19, 0xFF	; 255
    4428:	4f e7       	ldi	r20, 0x7F	; 127
    442a:	57 e4       	ldi	r21, 0x47	; 71
    442c:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    4430:	18 16       	cp	r1, r24
    4432:	0c f0       	brlt	.+2      	; 0x4436 <LCD_displayCharacter+0xbe>
    4434:	43 c0       	rjmp	.+134    	; 0x44bc <LCD_displayCharacter+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4436:	fe 01       	movw	r30, r28
    4438:	e1 5a       	subi	r30, 0xA1	; 161
    443a:	ff 4f       	sbci	r31, 0xFF	; 255
    443c:	60 81       	ld	r22, Z
    443e:	71 81       	ldd	r23, Z+1	; 0x01
    4440:	82 81       	ldd	r24, Z+2	; 0x02
    4442:	93 81       	ldd	r25, Z+3	; 0x03
    4444:	20 e0       	ldi	r18, 0x00	; 0
    4446:	30 e0       	ldi	r19, 0x00	; 0
    4448:	40 e2       	ldi	r20, 0x20	; 32
    444a:	51 e4       	ldi	r21, 0x41	; 65
    444c:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4450:	dc 01       	movw	r26, r24
    4452:	cb 01       	movw	r24, r22
    4454:	8e 01       	movw	r16, r28
    4456:	07 5a       	subi	r16, 0xA7	; 167
    4458:	1f 4f       	sbci	r17, 0xFF	; 255
    445a:	bc 01       	movw	r22, r24
    445c:	cd 01       	movw	r24, r26
    445e:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4462:	dc 01       	movw	r26, r24
    4464:	cb 01       	movw	r24, r22
    4466:	f8 01       	movw	r30, r16
    4468:	91 83       	std	Z+1, r25	; 0x01
    446a:	80 83       	st	Z, r24
    446c:	1f c0       	rjmp	.+62     	; 0x44ac <LCD_displayCharacter+0x134>
    446e:	fe 01       	movw	r30, r28
    4470:	e9 5a       	subi	r30, 0xA9	; 169
    4472:	ff 4f       	sbci	r31, 0xFF	; 255
    4474:	80 e9       	ldi	r24, 0x90	; 144
    4476:	91 e0       	ldi	r25, 0x01	; 1
    4478:	91 83       	std	Z+1, r25	; 0x01
    447a:	80 83       	st	Z, r24
    447c:	fe 01       	movw	r30, r28
    447e:	e9 5a       	subi	r30, 0xA9	; 169
    4480:	ff 4f       	sbci	r31, 0xFF	; 255
    4482:	80 81       	ld	r24, Z
    4484:	91 81       	ldd	r25, Z+1	; 0x01
    4486:	01 97       	sbiw	r24, 0x01	; 1
    4488:	f1 f7       	brne	.-4      	; 0x4486 <LCD_displayCharacter+0x10e>
    448a:	fe 01       	movw	r30, r28
    448c:	e9 5a       	subi	r30, 0xA9	; 169
    448e:	ff 4f       	sbci	r31, 0xFF	; 255
    4490:	91 83       	std	Z+1, r25	; 0x01
    4492:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4494:	de 01       	movw	r26, r28
    4496:	a7 5a       	subi	r26, 0xA7	; 167
    4498:	bf 4f       	sbci	r27, 0xFF	; 255
    449a:	fe 01       	movw	r30, r28
    449c:	e7 5a       	subi	r30, 0xA7	; 167
    449e:	ff 4f       	sbci	r31, 0xFF	; 255
    44a0:	80 81       	ld	r24, Z
    44a2:	91 81       	ldd	r25, Z+1	; 0x01
    44a4:	01 97       	sbiw	r24, 0x01	; 1
    44a6:	11 96       	adiw	r26, 0x01	; 1
    44a8:	9c 93       	st	X, r25
    44aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44ac:	fe 01       	movw	r30, r28
    44ae:	e7 5a       	subi	r30, 0xA7	; 167
    44b0:	ff 4f       	sbci	r31, 0xFF	; 255
    44b2:	80 81       	ld	r24, Z
    44b4:	91 81       	ldd	r25, Z+1	; 0x01
    44b6:	00 97       	sbiw	r24, 0x00	; 0
    44b8:	d1 f6       	brne	.-76     	; 0x446e <LCD_displayCharacter+0xf6>
    44ba:	27 c0       	rjmp	.+78     	; 0x450a <LCD_displayCharacter+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44bc:	8e 01       	movw	r16, r28
    44be:	07 5a       	subi	r16, 0xA7	; 167
    44c0:	1f 4f       	sbci	r17, 0xFF	; 255
    44c2:	fe 01       	movw	r30, r28
    44c4:	e5 5a       	subi	r30, 0xA5	; 165
    44c6:	ff 4f       	sbci	r31, 0xFF	; 255
    44c8:	60 81       	ld	r22, Z
    44ca:	71 81       	ldd	r23, Z+1	; 0x01
    44cc:	82 81       	ldd	r24, Z+2	; 0x02
    44ce:	93 81       	ldd	r25, Z+3	; 0x03
    44d0:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    44d4:	dc 01       	movw	r26, r24
    44d6:	cb 01       	movw	r24, r22
    44d8:	f8 01       	movw	r30, r16
    44da:	91 83       	std	Z+1, r25	; 0x01
    44dc:	80 83       	st	Z, r24
    44de:	de 01       	movw	r26, r28
    44e0:	ab 5a       	subi	r26, 0xAB	; 171
    44e2:	bf 4f       	sbci	r27, 0xFF	; 255
    44e4:	fe 01       	movw	r30, r28
    44e6:	e7 5a       	subi	r30, 0xA7	; 167
    44e8:	ff 4f       	sbci	r31, 0xFF	; 255
    44ea:	80 81       	ld	r24, Z
    44ec:	91 81       	ldd	r25, Z+1	; 0x01
    44ee:	8d 93       	st	X+, r24
    44f0:	9c 93       	st	X, r25
    44f2:	fe 01       	movw	r30, r28
    44f4:	eb 5a       	subi	r30, 0xAB	; 171
    44f6:	ff 4f       	sbci	r31, 0xFF	; 255
    44f8:	80 81       	ld	r24, Z
    44fa:	91 81       	ldd	r25, Z+1	; 0x01
    44fc:	01 97       	sbiw	r24, 0x01	; 1
    44fe:	f1 f7       	brne	.-4      	; 0x44fc <LCD_displayCharacter+0x184>
    4500:	fe 01       	movw	r30, r28
    4502:	eb 5a       	subi	r30, 0xAB	; 171
    4504:	ff 4f       	sbci	r31, 0xFF	; 255
    4506:	91 83       	std	Z+1, r25	; 0x01
    4508:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_HIGH); /* Enable LCD E=1 */
    450a:	80 e0       	ldi	r24, 0x00	; 0
    450c:	62 e0       	ldi	r22, 0x02	; 2
    450e:	41 e0       	ldi	r20, 0x01	; 1
    4510:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    4514:	fe 01       	movw	r30, r28
    4516:	ef 5a       	subi	r30, 0xAF	; 175
    4518:	ff 4f       	sbci	r31, 0xFF	; 255
    451a:	80 e0       	ldi	r24, 0x00	; 0
    451c:	90 e0       	ldi	r25, 0x00	; 0
    451e:	a0 e8       	ldi	r26, 0x80	; 128
    4520:	bf e3       	ldi	r27, 0x3F	; 63
    4522:	80 83       	st	Z, r24
    4524:	91 83       	std	Z+1, r25	; 0x01
    4526:	a2 83       	std	Z+2, r26	; 0x02
    4528:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    452a:	8e 01       	movw	r16, r28
    452c:	03 5b       	subi	r16, 0xB3	; 179
    452e:	1f 4f       	sbci	r17, 0xFF	; 255
    4530:	fe 01       	movw	r30, r28
    4532:	ef 5a       	subi	r30, 0xAF	; 175
    4534:	ff 4f       	sbci	r31, 0xFF	; 255
    4536:	60 81       	ld	r22, Z
    4538:	71 81       	ldd	r23, Z+1	; 0x01
    453a:	82 81       	ldd	r24, Z+2	; 0x02
    453c:	93 81       	ldd	r25, Z+3	; 0x03
    453e:	20 e0       	ldi	r18, 0x00	; 0
    4540:	30 e0       	ldi	r19, 0x00	; 0
    4542:	4a e7       	ldi	r20, 0x7A	; 122
    4544:	55 e4       	ldi	r21, 0x45	; 69
    4546:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    454a:	dc 01       	movw	r26, r24
    454c:	cb 01       	movw	r24, r22
    454e:	f8 01       	movw	r30, r16
    4550:	80 83       	st	Z, r24
    4552:	91 83       	std	Z+1, r25	; 0x01
    4554:	a2 83       	std	Z+2, r26	; 0x02
    4556:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4558:	fe 01       	movw	r30, r28
    455a:	e3 5b       	subi	r30, 0xB3	; 179
    455c:	ff 4f       	sbci	r31, 0xFF	; 255
    455e:	60 81       	ld	r22, Z
    4560:	71 81       	ldd	r23, Z+1	; 0x01
    4562:	82 81       	ldd	r24, Z+2	; 0x02
    4564:	93 81       	ldd	r25, Z+3	; 0x03
    4566:	20 e0       	ldi	r18, 0x00	; 0
    4568:	30 e0       	ldi	r19, 0x00	; 0
    456a:	40 e8       	ldi	r20, 0x80	; 128
    456c:	5f e3       	ldi	r21, 0x3F	; 63
    456e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    4572:	88 23       	and	r24, r24
    4574:	44 f4       	brge	.+16     	; 0x4586 <LCD_displayCharacter+0x20e>
		__ticks = 1;
    4576:	fe 01       	movw	r30, r28
    4578:	e5 5b       	subi	r30, 0xB5	; 181
    457a:	ff 4f       	sbci	r31, 0xFF	; 255
    457c:	81 e0       	ldi	r24, 0x01	; 1
    457e:	90 e0       	ldi	r25, 0x00	; 0
    4580:	91 83       	std	Z+1, r25	; 0x01
    4582:	80 83       	st	Z, r24
    4584:	64 c0       	rjmp	.+200    	; 0x464e <LCD_displayCharacter+0x2d6>
	else if (__tmp > 65535)
    4586:	fe 01       	movw	r30, r28
    4588:	e3 5b       	subi	r30, 0xB3	; 179
    458a:	ff 4f       	sbci	r31, 0xFF	; 255
    458c:	60 81       	ld	r22, Z
    458e:	71 81       	ldd	r23, Z+1	; 0x01
    4590:	82 81       	ldd	r24, Z+2	; 0x02
    4592:	93 81       	ldd	r25, Z+3	; 0x03
    4594:	20 e0       	ldi	r18, 0x00	; 0
    4596:	3f ef       	ldi	r19, 0xFF	; 255
    4598:	4f e7       	ldi	r20, 0x7F	; 127
    459a:	57 e4       	ldi	r21, 0x47	; 71
    459c:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    45a0:	18 16       	cp	r1, r24
    45a2:	0c f0       	brlt	.+2      	; 0x45a6 <LCD_displayCharacter+0x22e>
    45a4:	43 c0       	rjmp	.+134    	; 0x462c <LCD_displayCharacter+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45a6:	fe 01       	movw	r30, r28
    45a8:	ef 5a       	subi	r30, 0xAF	; 175
    45aa:	ff 4f       	sbci	r31, 0xFF	; 255
    45ac:	60 81       	ld	r22, Z
    45ae:	71 81       	ldd	r23, Z+1	; 0x01
    45b0:	82 81       	ldd	r24, Z+2	; 0x02
    45b2:	93 81       	ldd	r25, Z+3	; 0x03
    45b4:	20 e0       	ldi	r18, 0x00	; 0
    45b6:	30 e0       	ldi	r19, 0x00	; 0
    45b8:	40 e2       	ldi	r20, 0x20	; 32
    45ba:	51 e4       	ldi	r21, 0x41	; 65
    45bc:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    45c0:	dc 01       	movw	r26, r24
    45c2:	cb 01       	movw	r24, r22
    45c4:	8e 01       	movw	r16, r28
    45c6:	05 5b       	subi	r16, 0xB5	; 181
    45c8:	1f 4f       	sbci	r17, 0xFF	; 255
    45ca:	bc 01       	movw	r22, r24
    45cc:	cd 01       	movw	r24, r26
    45ce:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    45d2:	dc 01       	movw	r26, r24
    45d4:	cb 01       	movw	r24, r22
    45d6:	f8 01       	movw	r30, r16
    45d8:	91 83       	std	Z+1, r25	; 0x01
    45da:	80 83       	st	Z, r24
    45dc:	1f c0       	rjmp	.+62     	; 0x461c <LCD_displayCharacter+0x2a4>
    45de:	fe 01       	movw	r30, r28
    45e0:	e7 5b       	subi	r30, 0xB7	; 183
    45e2:	ff 4f       	sbci	r31, 0xFF	; 255
    45e4:	80 e9       	ldi	r24, 0x90	; 144
    45e6:	91 e0       	ldi	r25, 0x01	; 1
    45e8:	91 83       	std	Z+1, r25	; 0x01
    45ea:	80 83       	st	Z, r24
    45ec:	fe 01       	movw	r30, r28
    45ee:	e7 5b       	subi	r30, 0xB7	; 183
    45f0:	ff 4f       	sbci	r31, 0xFF	; 255
    45f2:	80 81       	ld	r24, Z
    45f4:	91 81       	ldd	r25, Z+1	; 0x01
    45f6:	01 97       	sbiw	r24, 0x01	; 1
    45f8:	f1 f7       	brne	.-4      	; 0x45f6 <LCD_displayCharacter+0x27e>
    45fa:	fe 01       	movw	r30, r28
    45fc:	e7 5b       	subi	r30, 0xB7	; 183
    45fe:	ff 4f       	sbci	r31, 0xFF	; 255
    4600:	91 83       	std	Z+1, r25	; 0x01
    4602:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4604:	de 01       	movw	r26, r28
    4606:	a5 5b       	subi	r26, 0xB5	; 181
    4608:	bf 4f       	sbci	r27, 0xFF	; 255
    460a:	fe 01       	movw	r30, r28
    460c:	e5 5b       	subi	r30, 0xB5	; 181
    460e:	ff 4f       	sbci	r31, 0xFF	; 255
    4610:	80 81       	ld	r24, Z
    4612:	91 81       	ldd	r25, Z+1	; 0x01
    4614:	01 97       	sbiw	r24, 0x01	; 1
    4616:	11 96       	adiw	r26, 0x01	; 1
    4618:	9c 93       	st	X, r25
    461a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    461c:	fe 01       	movw	r30, r28
    461e:	e5 5b       	subi	r30, 0xB5	; 181
    4620:	ff 4f       	sbci	r31, 0xFF	; 255
    4622:	80 81       	ld	r24, Z
    4624:	91 81       	ldd	r25, Z+1	; 0x01
    4626:	00 97       	sbiw	r24, 0x00	; 0
    4628:	d1 f6       	brne	.-76     	; 0x45de <LCD_displayCharacter+0x266>
    462a:	27 c0       	rjmp	.+78     	; 0x467a <LCD_displayCharacter+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    462c:	8e 01       	movw	r16, r28
    462e:	05 5b       	subi	r16, 0xB5	; 181
    4630:	1f 4f       	sbci	r17, 0xFF	; 255
    4632:	fe 01       	movw	r30, r28
    4634:	e3 5b       	subi	r30, 0xB3	; 179
    4636:	ff 4f       	sbci	r31, 0xFF	; 255
    4638:	60 81       	ld	r22, Z
    463a:	71 81       	ldd	r23, Z+1	; 0x01
    463c:	82 81       	ldd	r24, Z+2	; 0x02
    463e:	93 81       	ldd	r25, Z+3	; 0x03
    4640:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4644:	dc 01       	movw	r26, r24
    4646:	cb 01       	movw	r24, r22
    4648:	f8 01       	movw	r30, r16
    464a:	91 83       	std	Z+1, r25	; 0x01
    464c:	80 83       	st	Z, r24
    464e:	de 01       	movw	r26, r28
    4650:	a9 5b       	subi	r26, 0xB9	; 185
    4652:	bf 4f       	sbci	r27, 0xFF	; 255
    4654:	fe 01       	movw	r30, r28
    4656:	e5 5b       	subi	r30, 0xB5	; 181
    4658:	ff 4f       	sbci	r31, 0xFF	; 255
    465a:	80 81       	ld	r24, Z
    465c:	91 81       	ldd	r25, Z+1	; 0x01
    465e:	8d 93       	st	X+, r24
    4660:	9c 93       	st	X, r25
    4662:	fe 01       	movw	r30, r28
    4664:	e9 5b       	subi	r30, 0xB9	; 185
    4666:	ff 4f       	sbci	r31, 0xFF	; 255
    4668:	80 81       	ld	r24, Z
    466a:	91 81       	ldd	r25, Z+1	; 0x01
    466c:	01 97       	sbiw	r24, 0x01	; 1
    466e:	f1 f7       	brne	.-4      	; 0x466c <LCD_displayCharacter+0x2f4>
    4670:	fe 01       	movw	r30, r28
    4672:	e9 5b       	subi	r30, 0xB9	; 185
    4674:	ff 4f       	sbci	r31, 0xFF	; 255
    4676:	91 83       	std	Z+1, r25	; 0x01
    4678:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

#if(LCD_DATA_BITS_MODE == 4)
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB4_PIN_ID, GET_BIT(data, 4));
    467a:	fe 01       	movw	r30, r28
    467c:	ed 59       	subi	r30, 0x9D	; 157
    467e:	ff 4f       	sbci	r31, 0xFF	; 255
    4680:	80 81       	ld	r24, Z
    4682:	88 2f       	mov	r24, r24
    4684:	90 e0       	ldi	r25, 0x00	; 0
    4686:	80 71       	andi	r24, 0x10	; 16
    4688:	90 70       	andi	r25, 0x00	; 0
    468a:	95 95       	asr	r25
    468c:	87 95       	ror	r24
    468e:	95 95       	asr	r25
    4690:	87 95       	ror	r24
    4692:	95 95       	asr	r25
    4694:	87 95       	ror	r24
    4696:	95 95       	asr	r25
    4698:	87 95       	ror	r24
    469a:	98 2f       	mov	r25, r24
    469c:	80 e0       	ldi	r24, 0x00	; 0
    469e:	63 e0       	ldi	r22, 0x03	; 3
    46a0:	49 2f       	mov	r20, r25
    46a2:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB5_PIN_ID, GET_BIT(data, 5));
    46a6:	fe 01       	movw	r30, r28
    46a8:	ed 59       	subi	r30, 0x9D	; 157
    46aa:	ff 4f       	sbci	r31, 0xFF	; 255
    46ac:	80 81       	ld	r24, Z
    46ae:	88 2f       	mov	r24, r24
    46b0:	90 e0       	ldi	r25, 0x00	; 0
    46b2:	80 72       	andi	r24, 0x20	; 32
    46b4:	90 70       	andi	r25, 0x00	; 0
    46b6:	95 95       	asr	r25
    46b8:	87 95       	ror	r24
    46ba:	95 95       	asr	r25
    46bc:	87 95       	ror	r24
    46be:	95 95       	asr	r25
    46c0:	87 95       	ror	r24
    46c2:	95 95       	asr	r25
    46c4:	87 95       	ror	r24
    46c6:	95 95       	asr	r25
    46c8:	87 95       	ror	r24
    46ca:	98 2f       	mov	r25, r24
    46cc:	80 e0       	ldi	r24, 0x00	; 0
    46ce:	64 e0       	ldi	r22, 0x04	; 4
    46d0:	49 2f       	mov	r20, r25
    46d2:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB6_PIN_ID, GET_BIT(data, 6));
    46d6:	fe 01       	movw	r30, r28
    46d8:	ed 59       	subi	r30, 0x9D	; 157
    46da:	ff 4f       	sbci	r31, 0xFF	; 255
    46dc:	80 81       	ld	r24, Z
    46de:	88 2f       	mov	r24, r24
    46e0:	90 e0       	ldi	r25, 0x00	; 0
    46e2:	80 74       	andi	r24, 0x40	; 64
    46e4:	90 70       	andi	r25, 0x00	; 0
    46e6:	08 2e       	mov	r0, r24
    46e8:	89 2f       	mov	r24, r25
    46ea:	00 0c       	add	r0, r0
    46ec:	88 1f       	adc	r24, r24
    46ee:	99 0b       	sbc	r25, r25
    46f0:	00 0c       	add	r0, r0
    46f2:	88 1f       	adc	r24, r24
    46f4:	99 1f       	adc	r25, r25
    46f6:	98 2f       	mov	r25, r24
    46f8:	80 e0       	ldi	r24, 0x00	; 0
    46fa:	65 e0       	ldi	r22, 0x05	; 5
    46fc:	49 2f       	mov	r20, r25
    46fe:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB7_PIN_ID, GET_BIT(data, 7));
    4702:	fe 01       	movw	r30, r28
    4704:	ed 59       	subi	r30, 0x9D	; 157
    4706:	ff 4f       	sbci	r31, 0xFF	; 255
    4708:	80 81       	ld	r24, Z
    470a:	98 2f       	mov	r25, r24
    470c:	99 1f       	adc	r25, r25
    470e:	99 27       	eor	r25, r25
    4710:	99 1f       	adc	r25, r25
    4712:	80 e0       	ldi	r24, 0x00	; 0
    4714:	66 e0       	ldi	r22, 0x06	; 6
    4716:	49 2f       	mov	r20, r25
    4718:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    471c:	fe 01       	movw	r30, r28
    471e:	ed 5b       	subi	r30, 0xBD	; 189
    4720:	ff 4f       	sbci	r31, 0xFF	; 255
    4722:	80 e0       	ldi	r24, 0x00	; 0
    4724:	90 e0       	ldi	r25, 0x00	; 0
    4726:	a0 e8       	ldi	r26, 0x80	; 128
    4728:	bf e3       	ldi	r27, 0x3F	; 63
    472a:	80 83       	st	Z, r24
    472c:	91 83       	std	Z+1, r25	; 0x01
    472e:	a2 83       	std	Z+2, r26	; 0x02
    4730:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4732:	8e 01       	movw	r16, r28
    4734:	01 5c       	subi	r16, 0xC1	; 193
    4736:	1f 4f       	sbci	r17, 0xFF	; 255
    4738:	fe 01       	movw	r30, r28
    473a:	ed 5b       	subi	r30, 0xBD	; 189
    473c:	ff 4f       	sbci	r31, 0xFF	; 255
    473e:	60 81       	ld	r22, Z
    4740:	71 81       	ldd	r23, Z+1	; 0x01
    4742:	82 81       	ldd	r24, Z+2	; 0x02
    4744:	93 81       	ldd	r25, Z+3	; 0x03
    4746:	20 e0       	ldi	r18, 0x00	; 0
    4748:	30 e0       	ldi	r19, 0x00	; 0
    474a:	4a e7       	ldi	r20, 0x7A	; 122
    474c:	55 e4       	ldi	r21, 0x45	; 69
    474e:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4752:	dc 01       	movw	r26, r24
    4754:	cb 01       	movw	r24, r22
    4756:	f8 01       	movw	r30, r16
    4758:	80 83       	st	Z, r24
    475a:	91 83       	std	Z+1, r25	; 0x01
    475c:	a2 83       	std	Z+2, r26	; 0x02
    475e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4760:	fe 01       	movw	r30, r28
    4762:	ff 96       	adiw	r30, 0x3f	; 63
    4764:	60 81       	ld	r22, Z
    4766:	71 81       	ldd	r23, Z+1	; 0x01
    4768:	82 81       	ldd	r24, Z+2	; 0x02
    476a:	93 81       	ldd	r25, Z+3	; 0x03
    476c:	20 e0       	ldi	r18, 0x00	; 0
    476e:	30 e0       	ldi	r19, 0x00	; 0
    4770:	40 e8       	ldi	r20, 0x80	; 128
    4772:	5f e3       	ldi	r21, 0x3F	; 63
    4774:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    4778:	88 23       	and	r24, r24
    477a:	2c f4       	brge	.+10     	; 0x4786 <LCD_displayCharacter+0x40e>
		__ticks = 1;
    477c:	81 e0       	ldi	r24, 0x01	; 1
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	9e af       	std	Y+62, r25	; 0x3e
    4782:	8d af       	std	Y+61, r24	; 0x3d
    4784:	46 c0       	rjmp	.+140    	; 0x4812 <LCD_displayCharacter+0x49a>
	else if (__tmp > 65535)
    4786:	fe 01       	movw	r30, r28
    4788:	ff 96       	adiw	r30, 0x3f	; 63
    478a:	60 81       	ld	r22, Z
    478c:	71 81       	ldd	r23, Z+1	; 0x01
    478e:	82 81       	ldd	r24, Z+2	; 0x02
    4790:	93 81       	ldd	r25, Z+3	; 0x03
    4792:	20 e0       	ldi	r18, 0x00	; 0
    4794:	3f ef       	ldi	r19, 0xFF	; 255
    4796:	4f e7       	ldi	r20, 0x7F	; 127
    4798:	57 e4       	ldi	r21, 0x47	; 71
    479a:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    479e:	18 16       	cp	r1, r24
    47a0:	64 f5       	brge	.+88     	; 0x47fa <LCD_displayCharacter+0x482>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47a2:	fe 01       	movw	r30, r28
    47a4:	ed 5b       	subi	r30, 0xBD	; 189
    47a6:	ff 4f       	sbci	r31, 0xFF	; 255
    47a8:	60 81       	ld	r22, Z
    47aa:	71 81       	ldd	r23, Z+1	; 0x01
    47ac:	82 81       	ldd	r24, Z+2	; 0x02
    47ae:	93 81       	ldd	r25, Z+3	; 0x03
    47b0:	20 e0       	ldi	r18, 0x00	; 0
    47b2:	30 e0       	ldi	r19, 0x00	; 0
    47b4:	40 e2       	ldi	r20, 0x20	; 32
    47b6:	51 e4       	ldi	r21, 0x41	; 65
    47b8:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    47bc:	dc 01       	movw	r26, r24
    47be:	cb 01       	movw	r24, r22
    47c0:	bc 01       	movw	r22, r24
    47c2:	cd 01       	movw	r24, r26
    47c4:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    47c8:	dc 01       	movw	r26, r24
    47ca:	cb 01       	movw	r24, r22
    47cc:	9e af       	std	Y+62, r25	; 0x3e
    47ce:	8d af       	std	Y+61, r24	; 0x3d
    47d0:	0f c0       	rjmp	.+30     	; 0x47f0 <LCD_displayCharacter+0x478>
    47d2:	80 e9       	ldi	r24, 0x90	; 144
    47d4:	91 e0       	ldi	r25, 0x01	; 1
    47d6:	9c af       	std	Y+60, r25	; 0x3c
    47d8:	8b af       	std	Y+59, r24	; 0x3b
    47da:	8b ad       	ldd	r24, Y+59	; 0x3b
    47dc:	9c ad       	ldd	r25, Y+60	; 0x3c
    47de:	01 97       	sbiw	r24, 0x01	; 1
    47e0:	f1 f7       	brne	.-4      	; 0x47de <LCD_displayCharacter+0x466>
    47e2:	9c af       	std	Y+60, r25	; 0x3c
    47e4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47e6:	8d ad       	ldd	r24, Y+61	; 0x3d
    47e8:	9e ad       	ldd	r25, Y+62	; 0x3e
    47ea:	01 97       	sbiw	r24, 0x01	; 1
    47ec:	9e af       	std	Y+62, r25	; 0x3e
    47ee:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47f0:	8d ad       	ldd	r24, Y+61	; 0x3d
    47f2:	9e ad       	ldd	r25, Y+62	; 0x3e
    47f4:	00 97       	sbiw	r24, 0x00	; 0
    47f6:	69 f7       	brne	.-38     	; 0x47d2 <LCD_displayCharacter+0x45a>
    47f8:	16 c0       	rjmp	.+44     	; 0x4826 <LCD_displayCharacter+0x4ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47fa:	fe 01       	movw	r30, r28
    47fc:	ff 96       	adiw	r30, 0x3f	; 63
    47fe:	60 81       	ld	r22, Z
    4800:	71 81       	ldd	r23, Z+1	; 0x01
    4802:	82 81       	ldd	r24, Z+2	; 0x02
    4804:	93 81       	ldd	r25, Z+3	; 0x03
    4806:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    480a:	dc 01       	movw	r26, r24
    480c:	cb 01       	movw	r24, r22
    480e:	9e af       	std	Y+62, r25	; 0x3e
    4810:	8d af       	std	Y+61, r24	; 0x3d
    4812:	8d ad       	ldd	r24, Y+61	; 0x3d
    4814:	9e ad       	ldd	r25, Y+62	; 0x3e
    4816:	9a af       	std	Y+58, r25	; 0x3a
    4818:	89 af       	std	Y+57, r24	; 0x39
    481a:	89 ad       	ldd	r24, Y+57	; 0x39
    481c:	9a ad       	ldd	r25, Y+58	; 0x3a
    481e:	01 97       	sbiw	r24, 0x01	; 1
    4820:	f1 f7       	brne	.-4      	; 0x481e <LCD_displayCharacter+0x4a6>
    4822:	9a af       	std	Y+58, r25	; 0x3a
    4824:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_LOW); /* Disable LCD E=0 */
    4826:	80 e0       	ldi	r24, 0x00	; 0
    4828:	62 e0       	ldi	r22, 0x02	; 2
    482a:	40 e0       	ldi	r20, 0x00	; 0
    482c:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    4830:	80 e0       	ldi	r24, 0x00	; 0
    4832:	90 e0       	ldi	r25, 0x00	; 0
    4834:	a0 e8       	ldi	r26, 0x80	; 128
    4836:	bf e3       	ldi	r27, 0x3F	; 63
    4838:	8d ab       	std	Y+53, r24	; 0x35
    483a:	9e ab       	std	Y+54, r25	; 0x36
    483c:	af ab       	std	Y+55, r26	; 0x37
    483e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4840:	6d a9       	ldd	r22, Y+53	; 0x35
    4842:	7e a9       	ldd	r23, Y+54	; 0x36
    4844:	8f a9       	ldd	r24, Y+55	; 0x37
    4846:	98 ad       	ldd	r25, Y+56	; 0x38
    4848:	20 e0       	ldi	r18, 0x00	; 0
    484a:	30 e0       	ldi	r19, 0x00	; 0
    484c:	4a e7       	ldi	r20, 0x7A	; 122
    484e:	55 e4       	ldi	r21, 0x45	; 69
    4850:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4854:	dc 01       	movw	r26, r24
    4856:	cb 01       	movw	r24, r22
    4858:	89 ab       	std	Y+49, r24	; 0x31
    485a:	9a ab       	std	Y+50, r25	; 0x32
    485c:	ab ab       	std	Y+51, r26	; 0x33
    485e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4860:	69 a9       	ldd	r22, Y+49	; 0x31
    4862:	7a a9       	ldd	r23, Y+50	; 0x32
    4864:	8b a9       	ldd	r24, Y+51	; 0x33
    4866:	9c a9       	ldd	r25, Y+52	; 0x34
    4868:	20 e0       	ldi	r18, 0x00	; 0
    486a:	30 e0       	ldi	r19, 0x00	; 0
    486c:	40 e8       	ldi	r20, 0x80	; 128
    486e:	5f e3       	ldi	r21, 0x3F	; 63
    4870:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    4874:	88 23       	and	r24, r24
    4876:	2c f4       	brge	.+10     	; 0x4882 <LCD_displayCharacter+0x50a>
		__ticks = 1;
    4878:	81 e0       	ldi	r24, 0x01	; 1
    487a:	90 e0       	ldi	r25, 0x00	; 0
    487c:	98 ab       	std	Y+48, r25	; 0x30
    487e:	8f a7       	std	Y+47, r24	; 0x2f
    4880:	3f c0       	rjmp	.+126    	; 0x4900 <LCD_displayCharacter+0x588>
	else if (__tmp > 65535)
    4882:	69 a9       	ldd	r22, Y+49	; 0x31
    4884:	7a a9       	ldd	r23, Y+50	; 0x32
    4886:	8b a9       	ldd	r24, Y+51	; 0x33
    4888:	9c a9       	ldd	r25, Y+52	; 0x34
    488a:	20 e0       	ldi	r18, 0x00	; 0
    488c:	3f ef       	ldi	r19, 0xFF	; 255
    488e:	4f e7       	ldi	r20, 0x7F	; 127
    4890:	57 e4       	ldi	r21, 0x47	; 71
    4892:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    4896:	18 16       	cp	r1, r24
    4898:	4c f5       	brge	.+82     	; 0x48ec <LCD_displayCharacter+0x574>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    489a:	6d a9       	ldd	r22, Y+53	; 0x35
    489c:	7e a9       	ldd	r23, Y+54	; 0x36
    489e:	8f a9       	ldd	r24, Y+55	; 0x37
    48a0:	98 ad       	ldd	r25, Y+56	; 0x38
    48a2:	20 e0       	ldi	r18, 0x00	; 0
    48a4:	30 e0       	ldi	r19, 0x00	; 0
    48a6:	40 e2       	ldi	r20, 0x20	; 32
    48a8:	51 e4       	ldi	r21, 0x41	; 65
    48aa:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    48ae:	dc 01       	movw	r26, r24
    48b0:	cb 01       	movw	r24, r22
    48b2:	bc 01       	movw	r22, r24
    48b4:	cd 01       	movw	r24, r26
    48b6:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    48ba:	dc 01       	movw	r26, r24
    48bc:	cb 01       	movw	r24, r22
    48be:	98 ab       	std	Y+48, r25	; 0x30
    48c0:	8f a7       	std	Y+47, r24	; 0x2f
    48c2:	0f c0       	rjmp	.+30     	; 0x48e2 <LCD_displayCharacter+0x56a>
    48c4:	80 e9       	ldi	r24, 0x90	; 144
    48c6:	91 e0       	ldi	r25, 0x01	; 1
    48c8:	9e a7       	std	Y+46, r25	; 0x2e
    48ca:	8d a7       	std	Y+45, r24	; 0x2d
    48cc:	8d a5       	ldd	r24, Y+45	; 0x2d
    48ce:	9e a5       	ldd	r25, Y+46	; 0x2e
    48d0:	01 97       	sbiw	r24, 0x01	; 1
    48d2:	f1 f7       	brne	.-4      	; 0x48d0 <LCD_displayCharacter+0x558>
    48d4:	9e a7       	std	Y+46, r25	; 0x2e
    48d6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48d8:	8f a5       	ldd	r24, Y+47	; 0x2f
    48da:	98 a9       	ldd	r25, Y+48	; 0x30
    48dc:	01 97       	sbiw	r24, 0x01	; 1
    48de:	98 ab       	std	Y+48, r25	; 0x30
    48e0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48e2:	8f a5       	ldd	r24, Y+47	; 0x2f
    48e4:	98 a9       	ldd	r25, Y+48	; 0x30
    48e6:	00 97       	sbiw	r24, 0x00	; 0
    48e8:	69 f7       	brne	.-38     	; 0x48c4 <LCD_displayCharacter+0x54c>
    48ea:	14 c0       	rjmp	.+40     	; 0x4914 <LCD_displayCharacter+0x59c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48ec:	69 a9       	ldd	r22, Y+49	; 0x31
    48ee:	7a a9       	ldd	r23, Y+50	; 0x32
    48f0:	8b a9       	ldd	r24, Y+51	; 0x33
    48f2:	9c a9       	ldd	r25, Y+52	; 0x34
    48f4:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    48f8:	dc 01       	movw	r26, r24
    48fa:	cb 01       	movw	r24, r22
    48fc:	98 ab       	std	Y+48, r25	; 0x30
    48fe:	8f a7       	std	Y+47, r24	; 0x2f
    4900:	8f a5       	ldd	r24, Y+47	; 0x2f
    4902:	98 a9       	ldd	r25, Y+48	; 0x30
    4904:	9c a7       	std	Y+44, r25	; 0x2c
    4906:	8b a7       	std	Y+43, r24	; 0x2b
    4908:	8b a5       	ldd	r24, Y+43	; 0x2b
    490a:	9c a5       	ldd	r25, Y+44	; 0x2c
    490c:	01 97       	sbiw	r24, 0x01	; 1
    490e:	f1 f7       	brne	.-4      	; 0x490c <LCD_displayCharacter+0x594>
    4910:	9c a7       	std	Y+44, r25	; 0x2c
    4912:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_HIGH); /* Enable LCD E=1 */
    4914:	80 e0       	ldi	r24, 0x00	; 0
    4916:	62 e0       	ldi	r22, 0x02	; 2
    4918:	41 e0       	ldi	r20, 0x01	; 1
    491a:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    491e:	80 e0       	ldi	r24, 0x00	; 0
    4920:	90 e0       	ldi	r25, 0x00	; 0
    4922:	a0 e8       	ldi	r26, 0x80	; 128
    4924:	bf e3       	ldi	r27, 0x3F	; 63
    4926:	8f a3       	std	Y+39, r24	; 0x27
    4928:	98 a7       	std	Y+40, r25	; 0x28
    492a:	a9 a7       	std	Y+41, r26	; 0x29
    492c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    492e:	6f a1       	ldd	r22, Y+39	; 0x27
    4930:	78 a5       	ldd	r23, Y+40	; 0x28
    4932:	89 a5       	ldd	r24, Y+41	; 0x29
    4934:	9a a5       	ldd	r25, Y+42	; 0x2a
    4936:	20 e0       	ldi	r18, 0x00	; 0
    4938:	30 e0       	ldi	r19, 0x00	; 0
    493a:	4a e7       	ldi	r20, 0x7A	; 122
    493c:	55 e4       	ldi	r21, 0x45	; 69
    493e:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4942:	dc 01       	movw	r26, r24
    4944:	cb 01       	movw	r24, r22
    4946:	8b a3       	std	Y+35, r24	; 0x23
    4948:	9c a3       	std	Y+36, r25	; 0x24
    494a:	ad a3       	std	Y+37, r26	; 0x25
    494c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    494e:	6b a1       	ldd	r22, Y+35	; 0x23
    4950:	7c a1       	ldd	r23, Y+36	; 0x24
    4952:	8d a1       	ldd	r24, Y+37	; 0x25
    4954:	9e a1       	ldd	r25, Y+38	; 0x26
    4956:	20 e0       	ldi	r18, 0x00	; 0
    4958:	30 e0       	ldi	r19, 0x00	; 0
    495a:	40 e8       	ldi	r20, 0x80	; 128
    495c:	5f e3       	ldi	r21, 0x3F	; 63
    495e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    4962:	88 23       	and	r24, r24
    4964:	2c f4       	brge	.+10     	; 0x4970 <LCD_displayCharacter+0x5f8>
		__ticks = 1;
    4966:	81 e0       	ldi	r24, 0x01	; 1
    4968:	90 e0       	ldi	r25, 0x00	; 0
    496a:	9a a3       	std	Y+34, r25	; 0x22
    496c:	89 a3       	std	Y+33, r24	; 0x21
    496e:	3f c0       	rjmp	.+126    	; 0x49ee <LCD_displayCharacter+0x676>
	else if (__tmp > 65535)
    4970:	6b a1       	ldd	r22, Y+35	; 0x23
    4972:	7c a1       	ldd	r23, Y+36	; 0x24
    4974:	8d a1       	ldd	r24, Y+37	; 0x25
    4976:	9e a1       	ldd	r25, Y+38	; 0x26
    4978:	20 e0       	ldi	r18, 0x00	; 0
    497a:	3f ef       	ldi	r19, 0xFF	; 255
    497c:	4f e7       	ldi	r20, 0x7F	; 127
    497e:	57 e4       	ldi	r21, 0x47	; 71
    4980:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    4984:	18 16       	cp	r1, r24
    4986:	4c f5       	brge	.+82     	; 0x49da <LCD_displayCharacter+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4988:	6f a1       	ldd	r22, Y+39	; 0x27
    498a:	78 a5       	ldd	r23, Y+40	; 0x28
    498c:	89 a5       	ldd	r24, Y+41	; 0x29
    498e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4990:	20 e0       	ldi	r18, 0x00	; 0
    4992:	30 e0       	ldi	r19, 0x00	; 0
    4994:	40 e2       	ldi	r20, 0x20	; 32
    4996:	51 e4       	ldi	r21, 0x41	; 65
    4998:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    499c:	dc 01       	movw	r26, r24
    499e:	cb 01       	movw	r24, r22
    49a0:	bc 01       	movw	r22, r24
    49a2:	cd 01       	movw	r24, r26
    49a4:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    49a8:	dc 01       	movw	r26, r24
    49aa:	cb 01       	movw	r24, r22
    49ac:	9a a3       	std	Y+34, r25	; 0x22
    49ae:	89 a3       	std	Y+33, r24	; 0x21
    49b0:	0f c0       	rjmp	.+30     	; 0x49d0 <LCD_displayCharacter+0x658>
    49b2:	80 e9       	ldi	r24, 0x90	; 144
    49b4:	91 e0       	ldi	r25, 0x01	; 1
    49b6:	98 a3       	std	Y+32, r25	; 0x20
    49b8:	8f 8f       	std	Y+31, r24	; 0x1f
    49ba:	8f 8d       	ldd	r24, Y+31	; 0x1f
    49bc:	98 a1       	ldd	r25, Y+32	; 0x20
    49be:	01 97       	sbiw	r24, 0x01	; 1
    49c0:	f1 f7       	brne	.-4      	; 0x49be <LCD_displayCharacter+0x646>
    49c2:	98 a3       	std	Y+32, r25	; 0x20
    49c4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49c6:	89 a1       	ldd	r24, Y+33	; 0x21
    49c8:	9a a1       	ldd	r25, Y+34	; 0x22
    49ca:	01 97       	sbiw	r24, 0x01	; 1
    49cc:	9a a3       	std	Y+34, r25	; 0x22
    49ce:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49d0:	89 a1       	ldd	r24, Y+33	; 0x21
    49d2:	9a a1       	ldd	r25, Y+34	; 0x22
    49d4:	00 97       	sbiw	r24, 0x00	; 0
    49d6:	69 f7       	brne	.-38     	; 0x49b2 <LCD_displayCharacter+0x63a>
    49d8:	14 c0       	rjmp	.+40     	; 0x4a02 <LCD_displayCharacter+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49da:	6b a1       	ldd	r22, Y+35	; 0x23
    49dc:	7c a1       	ldd	r23, Y+36	; 0x24
    49de:	8d a1       	ldd	r24, Y+37	; 0x25
    49e0:	9e a1       	ldd	r25, Y+38	; 0x26
    49e2:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    49e6:	dc 01       	movw	r26, r24
    49e8:	cb 01       	movw	r24, r22
    49ea:	9a a3       	std	Y+34, r25	; 0x22
    49ec:	89 a3       	std	Y+33, r24	; 0x21
    49ee:	89 a1       	ldd	r24, Y+33	; 0x21
    49f0:	9a a1       	ldd	r25, Y+34	; 0x22
    49f2:	9e 8f       	std	Y+30, r25	; 0x1e
    49f4:	8d 8f       	std	Y+29, r24	; 0x1d
    49f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    49f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    49fa:	01 97       	sbiw	r24, 0x01	; 1
    49fc:	f1 f7       	brne	.-4      	; 0x49fa <LCD_displayCharacter+0x682>
    49fe:	9e 8f       	std	Y+30, r25	; 0x1e
    4a00:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB4_PIN_ID, GET_BIT(data, 0));
    4a02:	fe 01       	movw	r30, r28
    4a04:	ed 59       	subi	r30, 0x9D	; 157
    4a06:	ff 4f       	sbci	r31, 0xFF	; 255
    4a08:	80 81       	ld	r24, Z
    4a0a:	98 2f       	mov	r25, r24
    4a0c:	91 70       	andi	r25, 0x01	; 1
    4a0e:	80 e0       	ldi	r24, 0x00	; 0
    4a10:	63 e0       	ldi	r22, 0x03	; 3
    4a12:	49 2f       	mov	r20, r25
    4a14:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB5_PIN_ID, GET_BIT(data, 1));
    4a18:	fe 01       	movw	r30, r28
    4a1a:	ed 59       	subi	r30, 0x9D	; 157
    4a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a1e:	80 81       	ld	r24, Z
    4a20:	88 2f       	mov	r24, r24
    4a22:	90 e0       	ldi	r25, 0x00	; 0
    4a24:	82 70       	andi	r24, 0x02	; 2
    4a26:	90 70       	andi	r25, 0x00	; 0
    4a28:	95 95       	asr	r25
    4a2a:	87 95       	ror	r24
    4a2c:	98 2f       	mov	r25, r24
    4a2e:	80 e0       	ldi	r24, 0x00	; 0
    4a30:	64 e0       	ldi	r22, 0x04	; 4
    4a32:	49 2f       	mov	r20, r25
    4a34:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB6_PIN_ID, GET_BIT(data, 2));
    4a38:	fe 01       	movw	r30, r28
    4a3a:	ed 59       	subi	r30, 0x9D	; 157
    4a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a3e:	80 81       	ld	r24, Z
    4a40:	88 2f       	mov	r24, r24
    4a42:	90 e0       	ldi	r25, 0x00	; 0
    4a44:	84 70       	andi	r24, 0x04	; 4
    4a46:	90 70       	andi	r25, 0x00	; 0
    4a48:	95 95       	asr	r25
    4a4a:	87 95       	ror	r24
    4a4c:	95 95       	asr	r25
    4a4e:	87 95       	ror	r24
    4a50:	98 2f       	mov	r25, r24
    4a52:	80 e0       	ldi	r24, 0x00	; 0
    4a54:	65 e0       	ldi	r22, 0x05	; 5
    4a56:	49 2f       	mov	r20, r25
    4a58:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID, LCD_DB7_PIN_ID, GET_BIT(data, 3));
    4a5c:	fe 01       	movw	r30, r28
    4a5e:	ed 59       	subi	r30, 0x9D	; 157
    4a60:	ff 4f       	sbci	r31, 0xFF	; 255
    4a62:	80 81       	ld	r24, Z
    4a64:	88 2f       	mov	r24, r24
    4a66:	90 e0       	ldi	r25, 0x00	; 0
    4a68:	88 70       	andi	r24, 0x08	; 8
    4a6a:	90 70       	andi	r25, 0x00	; 0
    4a6c:	95 95       	asr	r25
    4a6e:	87 95       	ror	r24
    4a70:	95 95       	asr	r25
    4a72:	87 95       	ror	r24
    4a74:	95 95       	asr	r25
    4a76:	87 95       	ror	r24
    4a78:	98 2f       	mov	r25, r24
    4a7a:	80 e0       	ldi	r24, 0x00	; 0
    4a7c:	66 e0       	ldi	r22, 0x06	; 6
    4a7e:	49 2f       	mov	r20, r25
    4a80:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    4a84:	80 e0       	ldi	r24, 0x00	; 0
    4a86:	90 e0       	ldi	r25, 0x00	; 0
    4a88:	a0 e8       	ldi	r26, 0x80	; 128
    4a8a:	bf e3       	ldi	r27, 0x3F	; 63
    4a8c:	89 8f       	std	Y+25, r24	; 0x19
    4a8e:	9a 8f       	std	Y+26, r25	; 0x1a
    4a90:	ab 8f       	std	Y+27, r26	; 0x1b
    4a92:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a94:	69 8d       	ldd	r22, Y+25	; 0x19
    4a96:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4a98:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a9a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a9c:	20 e0       	ldi	r18, 0x00	; 0
    4a9e:	30 e0       	ldi	r19, 0x00	; 0
    4aa0:	4a e7       	ldi	r20, 0x7A	; 122
    4aa2:	55 e4       	ldi	r21, 0x45	; 69
    4aa4:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4aa8:	dc 01       	movw	r26, r24
    4aaa:	cb 01       	movw	r24, r22
    4aac:	8d 8b       	std	Y+21, r24	; 0x15
    4aae:	9e 8b       	std	Y+22, r25	; 0x16
    4ab0:	af 8b       	std	Y+23, r26	; 0x17
    4ab2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4ab4:	6d 89       	ldd	r22, Y+21	; 0x15
    4ab6:	7e 89       	ldd	r23, Y+22	; 0x16
    4ab8:	8f 89       	ldd	r24, Y+23	; 0x17
    4aba:	98 8d       	ldd	r25, Y+24	; 0x18
    4abc:	20 e0       	ldi	r18, 0x00	; 0
    4abe:	30 e0       	ldi	r19, 0x00	; 0
    4ac0:	40 e8       	ldi	r20, 0x80	; 128
    4ac2:	5f e3       	ldi	r21, 0x3F	; 63
    4ac4:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    4ac8:	88 23       	and	r24, r24
    4aca:	2c f4       	brge	.+10     	; 0x4ad6 <LCD_displayCharacter+0x75e>
		__ticks = 1;
    4acc:	81 e0       	ldi	r24, 0x01	; 1
    4ace:	90 e0       	ldi	r25, 0x00	; 0
    4ad0:	9c 8b       	std	Y+20, r25	; 0x14
    4ad2:	8b 8b       	std	Y+19, r24	; 0x13
    4ad4:	3f c0       	rjmp	.+126    	; 0x4b54 <LCD_displayCharacter+0x7dc>
	else if (__tmp > 65535)
    4ad6:	6d 89       	ldd	r22, Y+21	; 0x15
    4ad8:	7e 89       	ldd	r23, Y+22	; 0x16
    4ada:	8f 89       	ldd	r24, Y+23	; 0x17
    4adc:	98 8d       	ldd	r25, Y+24	; 0x18
    4ade:	20 e0       	ldi	r18, 0x00	; 0
    4ae0:	3f ef       	ldi	r19, 0xFF	; 255
    4ae2:	4f e7       	ldi	r20, 0x7F	; 127
    4ae4:	57 e4       	ldi	r21, 0x47	; 71
    4ae6:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    4aea:	18 16       	cp	r1, r24
    4aec:	4c f5       	brge	.+82     	; 0x4b40 <LCD_displayCharacter+0x7c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4aee:	69 8d       	ldd	r22, Y+25	; 0x19
    4af0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4af2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4af4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4af6:	20 e0       	ldi	r18, 0x00	; 0
    4af8:	30 e0       	ldi	r19, 0x00	; 0
    4afa:	40 e2       	ldi	r20, 0x20	; 32
    4afc:	51 e4       	ldi	r21, 0x41	; 65
    4afe:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4b02:	dc 01       	movw	r26, r24
    4b04:	cb 01       	movw	r24, r22
    4b06:	bc 01       	movw	r22, r24
    4b08:	cd 01       	movw	r24, r26
    4b0a:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4b0e:	dc 01       	movw	r26, r24
    4b10:	cb 01       	movw	r24, r22
    4b12:	9c 8b       	std	Y+20, r25	; 0x14
    4b14:	8b 8b       	std	Y+19, r24	; 0x13
    4b16:	0f c0       	rjmp	.+30     	; 0x4b36 <LCD_displayCharacter+0x7be>
    4b18:	80 e9       	ldi	r24, 0x90	; 144
    4b1a:	91 e0       	ldi	r25, 0x01	; 1
    4b1c:	9a 8b       	std	Y+18, r25	; 0x12
    4b1e:	89 8b       	std	Y+17, r24	; 0x11
    4b20:	89 89       	ldd	r24, Y+17	; 0x11
    4b22:	9a 89       	ldd	r25, Y+18	; 0x12
    4b24:	01 97       	sbiw	r24, 0x01	; 1
    4b26:	f1 f7       	brne	.-4      	; 0x4b24 <LCD_displayCharacter+0x7ac>
    4b28:	9a 8b       	std	Y+18, r25	; 0x12
    4b2a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b2c:	8b 89       	ldd	r24, Y+19	; 0x13
    4b2e:	9c 89       	ldd	r25, Y+20	; 0x14
    4b30:	01 97       	sbiw	r24, 0x01	; 1
    4b32:	9c 8b       	std	Y+20, r25	; 0x14
    4b34:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b36:	8b 89       	ldd	r24, Y+19	; 0x13
    4b38:	9c 89       	ldd	r25, Y+20	; 0x14
    4b3a:	00 97       	sbiw	r24, 0x00	; 0
    4b3c:	69 f7       	brne	.-38     	; 0x4b18 <LCD_displayCharacter+0x7a0>
    4b3e:	14 c0       	rjmp	.+40     	; 0x4b68 <LCD_displayCharacter+0x7f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b40:	6d 89       	ldd	r22, Y+21	; 0x15
    4b42:	7e 89       	ldd	r23, Y+22	; 0x16
    4b44:	8f 89       	ldd	r24, Y+23	; 0x17
    4b46:	98 8d       	ldd	r25, Y+24	; 0x18
    4b48:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4b4c:	dc 01       	movw	r26, r24
    4b4e:	cb 01       	movw	r24, r22
    4b50:	9c 8b       	std	Y+20, r25	; 0x14
    4b52:	8b 8b       	std	Y+19, r24	; 0x13
    4b54:	8b 89       	ldd	r24, Y+19	; 0x13
    4b56:	9c 89       	ldd	r25, Y+20	; 0x14
    4b58:	98 8b       	std	Y+16, r25	; 0x10
    4b5a:	8f 87       	std	Y+15, r24	; 0x0f
    4b5c:	8f 85       	ldd	r24, Y+15	; 0x0f
    4b5e:	98 89       	ldd	r25, Y+16	; 0x10
    4b60:	01 97       	sbiw	r24, 0x01	; 1
    4b62:	f1 f7       	brne	.-4      	; 0x4b60 <LCD_displayCharacter+0x7e8>
    4b64:	98 8b       	std	Y+16, r25	; 0x10
    4b66:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID, LCD_E_PIN_ID, LOGIC_LOW); /* Disable LCD E=0 */
    4b68:	80 e0       	ldi	r24, 0x00	; 0
    4b6a:	62 e0       	ldi	r22, 0x02	; 2
    4b6c:	40 e0       	ldi	r20, 0x00	; 0
    4b6e:	0e 94 a8 18 	call	0x3150	; 0x3150 <GPIO_writePin>
    4b72:	80 e0       	ldi	r24, 0x00	; 0
    4b74:	90 e0       	ldi	r25, 0x00	; 0
    4b76:	a0 e8       	ldi	r26, 0x80	; 128
    4b78:	bf e3       	ldi	r27, 0x3F	; 63
    4b7a:	8b 87       	std	Y+11, r24	; 0x0b
    4b7c:	9c 87       	std	Y+12, r25	; 0x0c
    4b7e:	ad 87       	std	Y+13, r26	; 0x0d
    4b80:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b82:	6b 85       	ldd	r22, Y+11	; 0x0b
    4b84:	7c 85       	ldd	r23, Y+12	; 0x0c
    4b86:	8d 85       	ldd	r24, Y+13	; 0x0d
    4b88:	9e 85       	ldd	r25, Y+14	; 0x0e
    4b8a:	20 e0       	ldi	r18, 0x00	; 0
    4b8c:	30 e0       	ldi	r19, 0x00	; 0
    4b8e:	4a e7       	ldi	r20, 0x7A	; 122
    4b90:	55 e4       	ldi	r21, 0x45	; 69
    4b92:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4b96:	dc 01       	movw	r26, r24
    4b98:	cb 01       	movw	r24, r22
    4b9a:	8f 83       	std	Y+7, r24	; 0x07
    4b9c:	98 87       	std	Y+8, r25	; 0x08
    4b9e:	a9 87       	std	Y+9, r26	; 0x09
    4ba0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4ba2:	6f 81       	ldd	r22, Y+7	; 0x07
    4ba4:	78 85       	ldd	r23, Y+8	; 0x08
    4ba6:	89 85       	ldd	r24, Y+9	; 0x09
    4ba8:	9a 85       	ldd	r25, Y+10	; 0x0a
    4baa:	20 e0       	ldi	r18, 0x00	; 0
    4bac:	30 e0       	ldi	r19, 0x00	; 0
    4bae:	40 e8       	ldi	r20, 0x80	; 128
    4bb0:	5f e3       	ldi	r21, 0x3F	; 63
    4bb2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__ltsf2>
    4bb6:	88 23       	and	r24, r24
    4bb8:	2c f4       	brge	.+10     	; 0x4bc4 <LCD_displayCharacter+0x84c>
		__ticks = 1;
    4bba:	81 e0       	ldi	r24, 0x01	; 1
    4bbc:	90 e0       	ldi	r25, 0x00	; 0
    4bbe:	9e 83       	std	Y+6, r25	; 0x06
    4bc0:	8d 83       	std	Y+5, r24	; 0x05
    4bc2:	3f c0       	rjmp	.+126    	; 0x4c42 <LCD_displayCharacter+0x8ca>
	else if (__tmp > 65535)
    4bc4:	6f 81       	ldd	r22, Y+7	; 0x07
    4bc6:	78 85       	ldd	r23, Y+8	; 0x08
    4bc8:	89 85       	ldd	r24, Y+9	; 0x09
    4bca:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bcc:	20 e0       	ldi	r18, 0x00	; 0
    4bce:	3f ef       	ldi	r19, 0xFF	; 255
    4bd0:	4f e7       	ldi	r20, 0x7F	; 127
    4bd2:	57 e4       	ldi	r21, 0x47	; 71
    4bd4:	0e 94 af 06 	call	0xd5e	; 0xd5e <__gtsf2>
    4bd8:	18 16       	cp	r1, r24
    4bda:	4c f5       	brge	.+82     	; 0x4c2e <LCD_displayCharacter+0x8b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bdc:	6b 85       	ldd	r22, Y+11	; 0x0b
    4bde:	7c 85       	ldd	r23, Y+12	; 0x0c
    4be0:	8d 85       	ldd	r24, Y+13	; 0x0d
    4be2:	9e 85       	ldd	r25, Y+14	; 0x0e
    4be4:	20 e0       	ldi	r18, 0x00	; 0
    4be6:	30 e0       	ldi	r19, 0x00	; 0
    4be8:	40 e2       	ldi	r20, 0x20	; 32
    4bea:	51 e4       	ldi	r21, 0x41	; 65
    4bec:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
    4bf0:	dc 01       	movw	r26, r24
    4bf2:	cb 01       	movw	r24, r22
    4bf4:	bc 01       	movw	r22, r24
    4bf6:	cd 01       	movw	r24, r26
    4bf8:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4bfc:	dc 01       	movw	r26, r24
    4bfe:	cb 01       	movw	r24, r22
    4c00:	9e 83       	std	Y+6, r25	; 0x06
    4c02:	8d 83       	std	Y+5, r24	; 0x05
    4c04:	0f c0       	rjmp	.+30     	; 0x4c24 <LCD_displayCharacter+0x8ac>
    4c06:	80 e9       	ldi	r24, 0x90	; 144
    4c08:	91 e0       	ldi	r25, 0x01	; 1
    4c0a:	9c 83       	std	Y+4, r25	; 0x04
    4c0c:	8b 83       	std	Y+3, r24	; 0x03
    4c0e:	8b 81       	ldd	r24, Y+3	; 0x03
    4c10:	9c 81       	ldd	r25, Y+4	; 0x04
    4c12:	01 97       	sbiw	r24, 0x01	; 1
    4c14:	f1 f7       	brne	.-4      	; 0x4c12 <LCD_displayCharacter+0x89a>
    4c16:	9c 83       	std	Y+4, r25	; 0x04
    4c18:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c1a:	8d 81       	ldd	r24, Y+5	; 0x05
    4c1c:	9e 81       	ldd	r25, Y+6	; 0x06
    4c1e:	01 97       	sbiw	r24, 0x01	; 1
    4c20:	9e 83       	std	Y+6, r25	; 0x06
    4c22:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c24:	8d 81       	ldd	r24, Y+5	; 0x05
    4c26:	9e 81       	ldd	r25, Y+6	; 0x06
    4c28:	00 97       	sbiw	r24, 0x00	; 0
    4c2a:	69 f7       	brne	.-38     	; 0x4c06 <LCD_displayCharacter+0x88e>
    4c2c:	14 c0       	rjmp	.+40     	; 0x4c56 <LCD_displayCharacter+0x8de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c2e:	6f 81       	ldd	r22, Y+7	; 0x07
    4c30:	78 85       	ldd	r23, Y+8	; 0x08
    4c32:	89 85       	ldd	r24, Y+9	; 0x09
    4c34:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c36:	0e 94 38 02 	call	0x470	; 0x470 <__fixunssfsi>
    4c3a:	dc 01       	movw	r26, r24
    4c3c:	cb 01       	movw	r24, r22
    4c3e:	9e 83       	std	Y+6, r25	; 0x06
    4c40:	8d 83       	std	Y+5, r24	; 0x05
    4c42:	8d 81       	ldd	r24, Y+5	; 0x05
    4c44:	9e 81       	ldd	r25, Y+6	; 0x06
    4c46:	9a 83       	std	Y+2, r25	; 0x02
    4c48:	89 83       	std	Y+1, r24	; 0x01
    4c4a:	89 81       	ldd	r24, Y+1	; 0x01
    4c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    4c4e:	01 97       	sbiw	r24, 0x01	; 1
    4c50:	f1 f7       	brne	.-4      	; 0x4c4e <LCD_displayCharacter+0x8d6>
    4c52:	9a 83       	std	Y+2, r25	; 0x02
    4c54:	89 83       	std	Y+1, r24	; 0x01
	GPIO_writePort(LCD_DATA_PORT_ID,data); /* out the required command to the data bus D0 --> D7 */
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
	_delay_ms(1); /* delay for processing Th = 13ns */
#endif
}
    4c56:	cd 59       	subi	r28, 0x9D	; 157
    4c58:	df 4f       	sbci	r29, 0xFF	; 255
    4c5a:	0f b6       	in	r0, 0x3f	; 63
    4c5c:	f8 94       	cli
    4c5e:	de bf       	out	0x3e, r29	; 62
    4c60:	0f be       	out	0x3f, r0	; 63
    4c62:	cd bf       	out	0x3d, r28	; 61
    4c64:	cf 91       	pop	r28
    4c66:	df 91       	pop	r29
    4c68:	1f 91       	pop	r17
    4c6a:	0f 91       	pop	r16
    4c6c:	08 95       	ret

00004c6e <LCD_displayString>:

/*
 * Description :
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str) {
    4c6e:	df 93       	push	r29
    4c70:	cf 93       	push	r28
    4c72:	00 d0       	rcall	.+0      	; 0x4c74 <LCD_displayString+0x6>
    4c74:	0f 92       	push	r0
    4c76:	cd b7       	in	r28, 0x3d	; 61
    4c78:	de b7       	in	r29, 0x3e	; 62
    4c7a:	9b 83       	std	Y+3, r25	; 0x03
    4c7c:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i = 0;
    4c7e:	19 82       	std	Y+1, r1	; 0x01
    4c80:	0e c0       	rjmp	.+28     	; 0x4c9e <LCD_displayString+0x30>
	while (Str[i] != '\0') {
		LCD_displayCharacter(Str[i]);
    4c82:	89 81       	ldd	r24, Y+1	; 0x01
    4c84:	28 2f       	mov	r18, r24
    4c86:	30 e0       	ldi	r19, 0x00	; 0
    4c88:	8a 81       	ldd	r24, Y+2	; 0x02
    4c8a:	9b 81       	ldd	r25, Y+3	; 0x03
    4c8c:	fc 01       	movw	r30, r24
    4c8e:	e2 0f       	add	r30, r18
    4c90:	f3 1f       	adc	r31, r19
    4c92:	80 81       	ld	r24, Z
    4c94:	0e 94 bc 21 	call	0x4378	; 0x4378 <LCD_displayCharacter>
		i++;
    4c98:	89 81       	ldd	r24, Y+1	; 0x01
    4c9a:	8f 5f       	subi	r24, 0xFF	; 255
    4c9c:	89 83       	std	Y+1, r24	; 0x01
 * Description :
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str) {
	uint8 i = 0;
	while (Str[i] != '\0') {
    4c9e:	89 81       	ldd	r24, Y+1	; 0x01
    4ca0:	28 2f       	mov	r18, r24
    4ca2:	30 e0       	ldi	r19, 0x00	; 0
    4ca4:	8a 81       	ldd	r24, Y+2	; 0x02
    4ca6:	9b 81       	ldd	r25, Y+3	; 0x03
    4ca8:	fc 01       	movw	r30, r24
    4caa:	e2 0f       	add	r30, r18
    4cac:	f3 1f       	adc	r31, r19
    4cae:	80 81       	ld	r24, Z
    4cb0:	88 23       	and	r24, r24
    4cb2:	39 f7       	brne	.-50     	; 0x4c82 <LCD_displayString+0x14>
	 {
	 LCD_displayCharacter(*Str);
	 Str++;
	 }
	 *********************************************************/
}
    4cb4:	0f 90       	pop	r0
    4cb6:	0f 90       	pop	r0
    4cb8:	0f 90       	pop	r0
    4cba:	cf 91       	pop	r28
    4cbc:	df 91       	pop	r29
    4cbe:	08 95       	ret

00004cc0 <LCD_moveCursor>:

/*
 * Description :
 * Move the cursor to a specified row and column index on the screen
 */
void LCD_moveCursor(uint8 row, uint8 col) {
    4cc0:	df 93       	push	r29
    4cc2:	cf 93       	push	r28
    4cc4:	00 d0       	rcall	.+0      	; 0x4cc6 <LCD_moveCursor+0x6>
    4cc6:	00 d0       	rcall	.+0      	; 0x4cc8 <LCD_moveCursor+0x8>
    4cc8:	0f 92       	push	r0
    4cca:	cd b7       	in	r28, 0x3d	; 61
    4ccc:	de b7       	in	r29, 0x3e	; 62
    4cce:	8a 83       	std	Y+2, r24	; 0x02
    4cd0:	6b 83       	std	Y+3, r22	; 0x03
	uint8 lcd_memory_address;

	/* Calculate the required address in the LCD DDRAM */
	switch (row) {
    4cd2:	8a 81       	ldd	r24, Y+2	; 0x02
    4cd4:	28 2f       	mov	r18, r24
    4cd6:	30 e0       	ldi	r19, 0x00	; 0
    4cd8:	3d 83       	std	Y+5, r19	; 0x05
    4cda:	2c 83       	std	Y+4, r18	; 0x04
    4cdc:	8c 81       	ldd	r24, Y+4	; 0x04
    4cde:	9d 81       	ldd	r25, Y+5	; 0x05
    4ce0:	81 30       	cpi	r24, 0x01	; 1
    4ce2:	91 05       	cpc	r25, r1
    4ce4:	c1 f0       	breq	.+48     	; 0x4d16 <LCD_moveCursor+0x56>
    4ce6:	2c 81       	ldd	r18, Y+4	; 0x04
    4ce8:	3d 81       	ldd	r19, Y+5	; 0x05
    4cea:	22 30       	cpi	r18, 0x02	; 2
    4cec:	31 05       	cpc	r19, r1
    4cee:	2c f4       	brge	.+10     	; 0x4cfa <LCD_moveCursor+0x3a>
    4cf0:	8c 81       	ldd	r24, Y+4	; 0x04
    4cf2:	9d 81       	ldd	r25, Y+5	; 0x05
    4cf4:	00 97       	sbiw	r24, 0x00	; 0
    4cf6:	61 f0       	breq	.+24     	; 0x4d10 <LCD_moveCursor+0x50>
    4cf8:	19 c0       	rjmp	.+50     	; 0x4d2c <LCD_moveCursor+0x6c>
    4cfa:	2c 81       	ldd	r18, Y+4	; 0x04
    4cfc:	3d 81       	ldd	r19, Y+5	; 0x05
    4cfe:	22 30       	cpi	r18, 0x02	; 2
    4d00:	31 05       	cpc	r19, r1
    4d02:	69 f0       	breq	.+26     	; 0x4d1e <LCD_moveCursor+0x5e>
    4d04:	8c 81       	ldd	r24, Y+4	; 0x04
    4d06:	9d 81       	ldd	r25, Y+5	; 0x05
    4d08:	83 30       	cpi	r24, 0x03	; 3
    4d0a:	91 05       	cpc	r25, r1
    4d0c:	61 f0       	breq	.+24     	; 0x4d26 <LCD_moveCursor+0x66>
    4d0e:	0e c0       	rjmp	.+28     	; 0x4d2c <LCD_moveCursor+0x6c>
	case 0:
		lcd_memory_address = col;
    4d10:	8b 81       	ldd	r24, Y+3	; 0x03
    4d12:	89 83       	std	Y+1, r24	; 0x01
    4d14:	0b c0       	rjmp	.+22     	; 0x4d2c <LCD_moveCursor+0x6c>
		break;
	case 1:
		lcd_memory_address = col + 0x40;
    4d16:	8b 81       	ldd	r24, Y+3	; 0x03
    4d18:	80 5c       	subi	r24, 0xC0	; 192
    4d1a:	89 83       	std	Y+1, r24	; 0x01
    4d1c:	07 c0       	rjmp	.+14     	; 0x4d2c <LCD_moveCursor+0x6c>
		break;
	case 2:
		lcd_memory_address = col + 0x10;
    4d1e:	8b 81       	ldd	r24, Y+3	; 0x03
    4d20:	80 5f       	subi	r24, 0xF0	; 240
    4d22:	89 83       	std	Y+1, r24	; 0x01
    4d24:	03 c0       	rjmp	.+6      	; 0x4d2c <LCD_moveCursor+0x6c>
		break;
	case 3:
		lcd_memory_address = col + 0x50;
    4d26:	8b 81       	ldd	r24, Y+3	; 0x03
    4d28:	80 5b       	subi	r24, 0xB0	; 176
    4d2a:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	/* Move the LCD cursor to this specific address */
	LCD_sendCommand(lcd_memory_address | LCD_SET_CURSOR_LOCATION);
    4d2c:	89 81       	ldd	r24, Y+1	; 0x01
    4d2e:	80 68       	ori	r24, 0x80	; 128
    4d30:	0e 94 41 1d 	call	0x3a82	; 0x3a82 <LCD_sendCommand>
}
    4d34:	0f 90       	pop	r0
    4d36:	0f 90       	pop	r0
    4d38:	0f 90       	pop	r0
    4d3a:	0f 90       	pop	r0
    4d3c:	0f 90       	pop	r0
    4d3e:	cf 91       	pop	r28
    4d40:	df 91       	pop	r29
    4d42:	08 95       	ret

00004d44 <LCD_displayStringRowColumn>:

/*
 * Description :
 * Display the required string in a specified row and column index on the screen
 */
void LCD_displayStringRowColumn(uint8 row, uint8 col, const char *Str) {
    4d44:	df 93       	push	r29
    4d46:	cf 93       	push	r28
    4d48:	00 d0       	rcall	.+0      	; 0x4d4a <LCD_displayStringRowColumn+0x6>
    4d4a:	00 d0       	rcall	.+0      	; 0x4d4c <LCD_displayStringRowColumn+0x8>
    4d4c:	cd b7       	in	r28, 0x3d	; 61
    4d4e:	de b7       	in	r29, 0x3e	; 62
    4d50:	89 83       	std	Y+1, r24	; 0x01
    4d52:	6a 83       	std	Y+2, r22	; 0x02
    4d54:	5c 83       	std	Y+4, r21	; 0x04
    4d56:	4b 83       	std	Y+3, r20	; 0x03
	LCD_moveCursor(row, col); /* go to to the required LCD position */
    4d58:	89 81       	ldd	r24, Y+1	; 0x01
    4d5a:	6a 81       	ldd	r22, Y+2	; 0x02
    4d5c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <LCD_moveCursor>
	LCD_displayString(Str); /* display the string */
    4d60:	8b 81       	ldd	r24, Y+3	; 0x03
    4d62:	9c 81       	ldd	r25, Y+4	; 0x04
    4d64:	0e 94 37 26 	call	0x4c6e	; 0x4c6e <LCD_displayString>
}
    4d68:	0f 90       	pop	r0
    4d6a:	0f 90       	pop	r0
    4d6c:	0f 90       	pop	r0
    4d6e:	0f 90       	pop	r0
    4d70:	cf 91       	pop	r28
    4d72:	df 91       	pop	r29
    4d74:	08 95       	ret

00004d76 <LCD_intgerToString>:

/*
 * Description :
 * Display the required decimal value on the screen
 */
void LCD_intgerToString(int data) {
    4d76:	df 93       	push	r29
    4d78:	cf 93       	push	r28
    4d7a:	cd b7       	in	r28, 0x3d	; 61
    4d7c:	de b7       	in	r29, 0x3e	; 62
    4d7e:	62 97       	sbiw	r28, 0x12	; 18
    4d80:	0f b6       	in	r0, 0x3f	; 63
    4d82:	f8 94       	cli
    4d84:	de bf       	out	0x3e, r29	; 62
    4d86:	0f be       	out	0x3f, r0	; 63
    4d88:	cd bf       	out	0x3d, r28	; 61
    4d8a:	9a 8b       	std	Y+18, r25	; 0x12
    4d8c:	89 8b       	std	Y+17, r24	; 0x11
	char buff[16]; /* String to hold the ascii result */
	itoa(data, buff, 10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
    4d8e:	89 89       	ldd	r24, Y+17	; 0x11
    4d90:	9a 89       	ldd	r25, Y+18	; 0x12
    4d92:	9e 01       	movw	r18, r28
    4d94:	2f 5f       	subi	r18, 0xFF	; 255
    4d96:	3f 4f       	sbci	r19, 0xFF	; 255
    4d98:	b9 01       	movw	r22, r18
    4d9a:	4a e0       	ldi	r20, 0x0A	; 10
    4d9c:	50 e0       	ldi	r21, 0x00	; 0
    4d9e:	0e 94 8d 27 	call	0x4f1a	; 0x4f1a <itoa>
	LCD_displayString(buff); /* Display the string */
    4da2:	ce 01       	movw	r24, r28
    4da4:	01 96       	adiw	r24, 0x01	; 1
    4da6:	0e 94 37 26 	call	0x4c6e	; 0x4c6e <LCD_displayString>

}
    4daa:	62 96       	adiw	r28, 0x12	; 18
    4dac:	0f b6       	in	r0, 0x3f	; 63
    4dae:	f8 94       	cli
    4db0:	de bf       	out	0x3e, r29	; 62
    4db2:	0f be       	out	0x3f, r0	; 63
    4db4:	cd bf       	out	0x3d, r28	; 61
    4db6:	cf 91       	pop	r28
    4db8:	df 91       	pop	r29
    4dba:	08 95       	ret

00004dbc <LCD_floatToString>:

/*
 * Description :
 * Display the required Float decimal value on the screen
 */
void LCD_floatToString(float32 data) {
    4dbc:	0f 93       	push	r16
    4dbe:	1f 93       	push	r17
    4dc0:	df 93       	push	r29
    4dc2:	cf 93       	push	r28
    4dc4:	cd b7       	in	r28, 0x3d	; 61
    4dc6:	de b7       	in	r29, 0x3e	; 62
    4dc8:	64 97       	sbiw	r28, 0x14	; 20
    4dca:	0f b6       	in	r0, 0x3f	; 63
    4dcc:	f8 94       	cli
    4dce:	de bf       	out	0x3e, r29	; 62
    4dd0:	0f be       	out	0x3f, r0	; 63
    4dd2:	cd bf       	out	0x3d, r28	; 61
    4dd4:	69 8b       	std	Y+17, r22	; 0x11
    4dd6:	7a 8b       	std	Y+18, r23	; 0x12
    4dd8:	8b 8b       	std	Y+19, r24	; 0x13
    4dda:	9c 8b       	std	Y+20, r25	; 0x14
	char buff[16]; /* String to hold the ascii result */
	dtostrf(data, 6, 3, buff); /* Use dtostrf C function to convert the data to its corresponding ASCII value, 10 for float decimal */
    4ddc:	89 89       	ldd	r24, Y+17	; 0x11
    4dde:	9a 89       	ldd	r25, Y+18	; 0x12
    4de0:	ab 89       	ldd	r26, Y+19	; 0x13
    4de2:	bc 89       	ldd	r27, Y+20	; 0x14
    4de4:	bc 01       	movw	r22, r24
    4de6:	cd 01       	movw	r24, r26
    4de8:	46 e0       	ldi	r20, 0x06	; 6
    4dea:	50 e0       	ldi	r21, 0x00	; 0
    4dec:	23 e0       	ldi	r18, 0x03	; 3
    4dee:	30 e0       	ldi	r19, 0x00	; 0
    4df0:	fe 01       	movw	r30, r28
    4df2:	31 96       	adiw	r30, 0x01	; 1
    4df4:	8f 01       	movw	r16, r30
    4df6:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <dtostrf>
	LCD_displayString(buff); /* Display the string */
    4dfa:	ce 01       	movw	r24, r28
    4dfc:	01 96       	adiw	r24, 0x01	; 1
    4dfe:	0e 94 37 26 	call	0x4c6e	; 0x4c6e <LCD_displayString>
}
    4e02:	64 96       	adiw	r28, 0x14	; 20
    4e04:	0f b6       	in	r0, 0x3f	; 63
    4e06:	f8 94       	cli
    4e08:	de bf       	out	0x3e, r29	; 62
    4e0a:	0f be       	out	0x3f, r0	; 63
    4e0c:	cd bf       	out	0x3d, r28	; 61
    4e0e:	cf 91       	pop	r28
    4e10:	df 91       	pop	r29
    4e12:	1f 91       	pop	r17
    4e14:	0f 91       	pop	r16
    4e16:	08 95       	ret

00004e18 <LCD_clearScreen>:

/*
 * Description :
 * Send the clear screen command
 */
void LCD_clearScreen(void) {
    4e18:	df 93       	push	r29
    4e1a:	cf 93       	push	r28
    4e1c:	cd b7       	in	r28, 0x3d	; 61
    4e1e:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* Send clear display command */
    4e20:	81 e0       	ldi	r24, 0x01	; 1
    4e22:	0e 94 41 1d 	call	0x3a82	; 0x3a82 <LCD_sendCommand>
}
    4e26:	cf 91       	pop	r28
    4e28:	df 91       	pop	r29
    4e2a:	08 95       	ret

00004e2c <__mulsi3>:
    4e2c:	62 9f       	mul	r22, r18
    4e2e:	d0 01       	movw	r26, r0
    4e30:	73 9f       	mul	r23, r19
    4e32:	f0 01       	movw	r30, r0
    4e34:	82 9f       	mul	r24, r18
    4e36:	e0 0d       	add	r30, r0
    4e38:	f1 1d       	adc	r31, r1
    4e3a:	64 9f       	mul	r22, r20
    4e3c:	e0 0d       	add	r30, r0
    4e3e:	f1 1d       	adc	r31, r1
    4e40:	92 9f       	mul	r25, r18
    4e42:	f0 0d       	add	r31, r0
    4e44:	83 9f       	mul	r24, r19
    4e46:	f0 0d       	add	r31, r0
    4e48:	74 9f       	mul	r23, r20
    4e4a:	f0 0d       	add	r31, r0
    4e4c:	65 9f       	mul	r22, r21
    4e4e:	f0 0d       	add	r31, r0
    4e50:	99 27       	eor	r25, r25
    4e52:	72 9f       	mul	r23, r18
    4e54:	b0 0d       	add	r27, r0
    4e56:	e1 1d       	adc	r30, r1
    4e58:	f9 1f       	adc	r31, r25
    4e5a:	63 9f       	mul	r22, r19
    4e5c:	b0 0d       	add	r27, r0
    4e5e:	e1 1d       	adc	r30, r1
    4e60:	f9 1f       	adc	r31, r25
    4e62:	bd 01       	movw	r22, r26
    4e64:	cf 01       	movw	r24, r30
    4e66:	11 24       	eor	r1, r1
    4e68:	08 95       	ret

00004e6a <__prologue_saves__>:
    4e6a:	2f 92       	push	r2
    4e6c:	3f 92       	push	r3
    4e6e:	4f 92       	push	r4
    4e70:	5f 92       	push	r5
    4e72:	6f 92       	push	r6
    4e74:	7f 92       	push	r7
    4e76:	8f 92       	push	r8
    4e78:	9f 92       	push	r9
    4e7a:	af 92       	push	r10
    4e7c:	bf 92       	push	r11
    4e7e:	cf 92       	push	r12
    4e80:	df 92       	push	r13
    4e82:	ef 92       	push	r14
    4e84:	ff 92       	push	r15
    4e86:	0f 93       	push	r16
    4e88:	1f 93       	push	r17
    4e8a:	cf 93       	push	r28
    4e8c:	df 93       	push	r29
    4e8e:	cd b7       	in	r28, 0x3d	; 61
    4e90:	de b7       	in	r29, 0x3e	; 62
    4e92:	ca 1b       	sub	r28, r26
    4e94:	db 0b       	sbc	r29, r27
    4e96:	0f b6       	in	r0, 0x3f	; 63
    4e98:	f8 94       	cli
    4e9a:	de bf       	out	0x3e, r29	; 62
    4e9c:	0f be       	out	0x3f, r0	; 63
    4e9e:	cd bf       	out	0x3d, r28	; 61
    4ea0:	09 94       	ijmp

00004ea2 <__epilogue_restores__>:
    4ea2:	2a 88       	ldd	r2, Y+18	; 0x12
    4ea4:	39 88       	ldd	r3, Y+17	; 0x11
    4ea6:	48 88       	ldd	r4, Y+16	; 0x10
    4ea8:	5f 84       	ldd	r5, Y+15	; 0x0f
    4eaa:	6e 84       	ldd	r6, Y+14	; 0x0e
    4eac:	7d 84       	ldd	r7, Y+13	; 0x0d
    4eae:	8c 84       	ldd	r8, Y+12	; 0x0c
    4eb0:	9b 84       	ldd	r9, Y+11	; 0x0b
    4eb2:	aa 84       	ldd	r10, Y+10	; 0x0a
    4eb4:	b9 84       	ldd	r11, Y+9	; 0x09
    4eb6:	c8 84       	ldd	r12, Y+8	; 0x08
    4eb8:	df 80       	ldd	r13, Y+7	; 0x07
    4eba:	ee 80       	ldd	r14, Y+6	; 0x06
    4ebc:	fd 80       	ldd	r15, Y+5	; 0x05
    4ebe:	0c 81       	ldd	r16, Y+4	; 0x04
    4ec0:	1b 81       	ldd	r17, Y+3	; 0x03
    4ec2:	aa 81       	ldd	r26, Y+2	; 0x02
    4ec4:	b9 81       	ldd	r27, Y+1	; 0x01
    4ec6:	ce 0f       	add	r28, r30
    4ec8:	d1 1d       	adc	r29, r1
    4eca:	0f b6       	in	r0, 0x3f	; 63
    4ecc:	f8 94       	cli
    4ece:	de bf       	out	0x3e, r29	; 62
    4ed0:	0f be       	out	0x3f, r0	; 63
    4ed2:	cd bf       	out	0x3d, r28	; 61
    4ed4:	ed 01       	movw	r28, r26
    4ed6:	08 95       	ret

00004ed8 <dtostrf>:
    4ed8:	ef 92       	push	r14
    4eda:	ff 92       	push	r15
    4edc:	0f 93       	push	r16
    4ede:	1f 93       	push	r17
    4ee0:	f2 2f       	mov	r31, r18
    4ee2:	f0 2e       	mov	r15, r16
    4ee4:	47 fd       	sbrc	r20, 7
    4ee6:	02 c0       	rjmp	.+4      	; 0x4eec <dtostrf+0x14>
    4ee8:	e4 e0       	ldi	r30, 0x04	; 4
    4eea:	01 c0       	rjmp	.+2      	; 0x4eee <dtostrf+0x16>
    4eec:	e4 e1       	ldi	r30, 0x14	; 20
    4eee:	24 2f       	mov	r18, r20
    4ef0:	33 27       	eor	r19, r19
    4ef2:	27 fd       	sbrc	r18, 7
    4ef4:	30 95       	com	r19
    4ef6:	37 ff       	sbrs	r19, 7
    4ef8:	03 c0       	rjmp	.+6      	; 0x4f00 <dtostrf+0x28>
    4efa:	30 95       	com	r19
    4efc:	21 95       	neg	r18
    4efe:	3f 4f       	sbci	r19, 0xFF	; 255
    4f00:	4f 2d       	mov	r20, r15
    4f02:	51 2f       	mov	r21, r17
    4f04:	0f 2f       	mov	r16, r31
    4f06:	ee 2e       	mov	r14, r30
    4f08:	0e 94 ae 27 	call	0x4f5c	; 0x4f5c <dtoa_prf>
    4f0c:	8f 2d       	mov	r24, r15
    4f0e:	91 2f       	mov	r25, r17
    4f10:	1f 91       	pop	r17
    4f12:	0f 91       	pop	r16
    4f14:	ff 90       	pop	r15
    4f16:	ef 90       	pop	r14
    4f18:	08 95       	ret

00004f1a <itoa>:
    4f1a:	fb 01       	movw	r30, r22
    4f1c:	9f 01       	movw	r18, r30
    4f1e:	e8 94       	clt
    4f20:	42 30       	cpi	r20, 0x02	; 2
    4f22:	c4 f0       	brlt	.+48     	; 0x4f54 <itoa+0x3a>
    4f24:	45 32       	cpi	r20, 0x25	; 37
    4f26:	b4 f4       	brge	.+44     	; 0x4f54 <itoa+0x3a>
    4f28:	4a 30       	cpi	r20, 0x0A	; 10
    4f2a:	29 f4       	brne	.+10     	; 0x4f36 <itoa+0x1c>
    4f2c:	97 fb       	bst	r25, 7
    4f2e:	1e f4       	brtc	.+6      	; 0x4f36 <itoa+0x1c>
    4f30:	90 95       	com	r25
    4f32:	81 95       	neg	r24
    4f34:	9f 4f       	sbci	r25, 0xFF	; 255
    4f36:	64 2f       	mov	r22, r20
    4f38:	77 27       	eor	r23, r23
    4f3a:	0e 94 f8 29 	call	0x53f0	; 0x53f0 <__udivmodhi4>
    4f3e:	80 5d       	subi	r24, 0xD0	; 208
    4f40:	8a 33       	cpi	r24, 0x3A	; 58
    4f42:	0c f0       	brlt	.+2      	; 0x4f46 <itoa+0x2c>
    4f44:	89 5d       	subi	r24, 0xD9	; 217
    4f46:	81 93       	st	Z+, r24
    4f48:	cb 01       	movw	r24, r22
    4f4a:	00 97       	sbiw	r24, 0x00	; 0
    4f4c:	a1 f7       	brne	.-24     	; 0x4f36 <itoa+0x1c>
    4f4e:	16 f4       	brtc	.+4      	; 0x4f54 <itoa+0x3a>
    4f50:	5d e2       	ldi	r21, 0x2D	; 45
    4f52:	51 93       	st	Z+, r21
    4f54:	10 82       	st	Z, r1
    4f56:	c9 01       	movw	r24, r18
    4f58:	0c 94 e8 29 	jmp	0x53d0	; 0x53d0 <strrev>

00004f5c <dtoa_prf>:
    4f5c:	a9 e0       	ldi	r26, 0x09	; 9
    4f5e:	b0 e0       	ldi	r27, 0x00	; 0
    4f60:	e4 eb       	ldi	r30, 0xB4	; 180
    4f62:	f7 e2       	ldi	r31, 0x27	; 39
    4f64:	0c 94 39 27 	jmp	0x4e72	; 0x4e72 <__prologue_saves__+0x8>
    4f68:	6a 01       	movw	r12, r20
    4f6a:	12 2f       	mov	r17, r18
    4f6c:	a0 2e       	mov	r10, r16
    4f6e:	be 2c       	mov	r11, r14
    4f70:	2b e3       	ldi	r18, 0x3B	; 59
    4f72:	20 17       	cp	r18, r16
    4f74:	18 f4       	brcc	.+6      	; 0x4f7c <dtoa_prf+0x20>
    4f76:	2c e3       	ldi	r18, 0x3C	; 60
    4f78:	92 2e       	mov	r9, r18
    4f7a:	02 c0       	rjmp	.+4      	; 0x4f80 <dtoa_prf+0x24>
    4f7c:	90 2e       	mov	r9, r16
    4f7e:	93 94       	inc	r9
    4f80:	ae 01       	movw	r20, r28
    4f82:	4f 5f       	subi	r20, 0xFF	; 255
    4f84:	5f 4f       	sbci	r21, 0xFF	; 255
    4f86:	27 e0       	ldi	r18, 0x07	; 7
    4f88:	09 2d       	mov	r16, r9
    4f8a:	0e 94 10 29 	call	0x5220	; 0x5220 <__ftoa_engine>
    4f8e:	bc 01       	movw	r22, r24
    4f90:	89 81       	ldd	r24, Y+1	; 0x01
    4f92:	e8 2e       	mov	r14, r24
    4f94:	ff 24       	eor	r15, r15
    4f96:	c7 01       	movw	r24, r14
    4f98:	89 70       	andi	r24, 0x09	; 9
    4f9a:	90 70       	andi	r25, 0x00	; 0
    4f9c:	01 97       	sbiw	r24, 0x01	; 1
    4f9e:	11 f4       	brne	.+4      	; 0x4fa4 <dtoa_prf+0x48>
    4fa0:	ad e2       	ldi	r26, 0x2D	; 45
    4fa2:	09 c0       	rjmp	.+18     	; 0x4fb6 <dtoa_prf+0x5a>
    4fa4:	b1 fe       	sbrs	r11, 1
    4fa6:	02 c0       	rjmp	.+4      	; 0x4fac <dtoa_prf+0x50>
    4fa8:	ab e2       	ldi	r26, 0x2B	; 43
    4faa:	05 c0       	rjmp	.+10     	; 0x4fb6 <dtoa_prf+0x5a>
    4fac:	b0 fc       	sbrc	r11, 0
    4fae:	02 c0       	rjmp	.+4      	; 0x4fb4 <dtoa_prf+0x58>
    4fb0:	a0 e0       	ldi	r26, 0x00	; 0
    4fb2:	01 c0       	rjmp	.+2      	; 0x4fb6 <dtoa_prf+0x5a>
    4fb4:	a0 e2       	ldi	r26, 0x20	; 32
    4fb6:	e3 fe       	sbrs	r14, 3
    4fb8:	3b c0       	rjmp	.+118    	; 0x5030 <dtoa_prf+0xd4>
    4fba:	aa 23       	and	r26, r26
    4fbc:	11 f4       	brne	.+4      	; 0x4fc2 <dtoa_prf+0x66>
    4fbe:	23 e0       	ldi	r18, 0x03	; 3
    4fc0:	01 c0       	rjmp	.+2      	; 0x4fc4 <dtoa_prf+0x68>
    4fc2:	24 e0       	ldi	r18, 0x04	; 4
    4fc4:	21 17       	cp	r18, r17
    4fc6:	10 f0       	brcs	.+4      	; 0x4fcc <dtoa_prf+0x70>
    4fc8:	20 e0       	ldi	r18, 0x00	; 0
    4fca:	02 c0       	rjmp	.+4      	; 0x4fd0 <dtoa_prf+0x74>
    4fcc:	12 1b       	sub	r17, r18
    4fce:	21 2f       	mov	r18, r17
    4fd0:	eb 2c       	mov	r14, r11
    4fd2:	b4 fe       	sbrs	r11, 4
    4fd4:	02 c0       	rjmp	.+4      	; 0x4fda <dtoa_prf+0x7e>
    4fd6:	32 2f       	mov	r19, r18
    4fd8:	0a c0       	rjmp	.+20     	; 0x4fee <dtoa_prf+0x92>
    4fda:	f6 01       	movw	r30, r12
    4fdc:	32 2f       	mov	r19, r18
    4fde:	80 e2       	ldi	r24, 0x20	; 32
    4fe0:	02 c0       	rjmp	.+4      	; 0x4fe6 <dtoa_prf+0x8a>
    4fe2:	81 93       	st	Z+, r24
    4fe4:	31 50       	subi	r19, 0x01	; 1
    4fe6:	33 23       	and	r19, r19
    4fe8:	e1 f7       	brne	.-8      	; 0x4fe2 <dtoa_prf+0x86>
    4fea:	c2 0e       	add	r12, r18
    4fec:	d1 1c       	adc	r13, r1
    4fee:	aa 23       	and	r26, r26
    4ff0:	19 f0       	breq	.+6      	; 0x4ff8 <dtoa_prf+0x9c>
    4ff2:	f6 01       	movw	r30, r12
    4ff4:	a1 93       	st	Z+, r26
    4ff6:	6f 01       	movw	r12, r30
    4ff8:	f6 01       	movw	r30, r12
    4ffa:	31 96       	adiw	r30, 0x01	; 1
    4ffc:	e2 fe       	sbrs	r14, 2
    4ffe:	05 c0       	rjmp	.+10     	; 0x500a <dtoa_prf+0xae>
    5000:	9e e4       	ldi	r25, 0x4E	; 78
    5002:	d6 01       	movw	r26, r12
    5004:	9c 93       	st	X, r25
    5006:	81 e4       	ldi	r24, 0x41	; 65
    5008:	04 c0       	rjmp	.+8      	; 0x5012 <dtoa_prf+0xb6>
    500a:	9e e6       	ldi	r25, 0x6E	; 110
    500c:	d6 01       	movw	r26, r12
    500e:	9c 93       	st	X, r25
    5010:	81 e6       	ldi	r24, 0x61	; 97
    5012:	11 96       	adiw	r26, 0x01	; 1
    5014:	8c 93       	st	X, r24
    5016:	91 83       	std	Z+1, r25	; 0x01
    5018:	32 96       	adiw	r30, 0x02	; 2
    501a:	df 01       	movw	r26, r30
    501c:	83 2f       	mov	r24, r19
    501e:	90 e2       	ldi	r25, 0x20	; 32
    5020:	02 c0       	rjmp	.+4      	; 0x5026 <dtoa_prf+0xca>
    5022:	9d 93       	st	X+, r25
    5024:	81 50       	subi	r24, 0x01	; 1
    5026:	88 23       	and	r24, r24
    5028:	e1 f7       	brne	.-8      	; 0x5022 <dtoa_prf+0xc6>
    502a:	e3 0f       	add	r30, r19
    502c:	f1 1d       	adc	r31, r1
    502e:	40 c0       	rjmp	.+128    	; 0x50b0 <dtoa_prf+0x154>
    5030:	e2 fe       	sbrs	r14, 2
    5032:	42 c0       	rjmp	.+132    	; 0x50b8 <dtoa_prf+0x15c>
    5034:	aa 23       	and	r26, r26
    5036:	11 f4       	brne	.+4      	; 0x503c <dtoa_prf+0xe0>
    5038:	23 e0       	ldi	r18, 0x03	; 3
    503a:	01 c0       	rjmp	.+2      	; 0x503e <dtoa_prf+0xe2>
    503c:	24 e0       	ldi	r18, 0x04	; 4
    503e:	21 17       	cp	r18, r17
    5040:	10 f0       	brcs	.+4      	; 0x5046 <dtoa_prf+0xea>
    5042:	20 e0       	ldi	r18, 0x00	; 0
    5044:	02 c0       	rjmp	.+4      	; 0x504a <dtoa_prf+0xee>
    5046:	12 1b       	sub	r17, r18
    5048:	21 2f       	mov	r18, r17
    504a:	eb 2c       	mov	r14, r11
    504c:	b4 fe       	sbrs	r11, 4
    504e:	02 c0       	rjmp	.+4      	; 0x5054 <dtoa_prf+0xf8>
    5050:	92 2f       	mov	r25, r18
    5052:	0a c0       	rjmp	.+20     	; 0x5068 <dtoa_prf+0x10c>
    5054:	f6 01       	movw	r30, r12
    5056:	92 2f       	mov	r25, r18
    5058:	80 e2       	ldi	r24, 0x20	; 32
    505a:	02 c0       	rjmp	.+4      	; 0x5060 <dtoa_prf+0x104>
    505c:	81 93       	st	Z+, r24
    505e:	91 50       	subi	r25, 0x01	; 1
    5060:	99 23       	and	r25, r25
    5062:	e1 f7       	brne	.-8      	; 0x505c <dtoa_prf+0x100>
    5064:	c2 0e       	add	r12, r18
    5066:	d1 1c       	adc	r13, r1
    5068:	aa 23       	and	r26, r26
    506a:	19 f0       	breq	.+6      	; 0x5072 <dtoa_prf+0x116>
    506c:	f6 01       	movw	r30, r12
    506e:	a1 93       	st	Z+, r26
    5070:	6f 01       	movw	r12, r30
    5072:	f6 01       	movw	r30, r12
    5074:	31 96       	adiw	r30, 0x01	; 1
    5076:	e2 fe       	sbrs	r14, 2
    5078:	08 c0       	rjmp	.+16     	; 0x508a <dtoa_prf+0x12e>
    507a:	89 e4       	ldi	r24, 0x49	; 73
    507c:	d6 01       	movw	r26, r12
    507e:	8c 93       	st	X, r24
    5080:	8e e4       	ldi	r24, 0x4E	; 78
    5082:	11 96       	adiw	r26, 0x01	; 1
    5084:	8c 93       	st	X, r24
    5086:	86 e4       	ldi	r24, 0x46	; 70
    5088:	07 c0       	rjmp	.+14     	; 0x5098 <dtoa_prf+0x13c>
    508a:	89 e6       	ldi	r24, 0x69	; 105
    508c:	d6 01       	movw	r26, r12
    508e:	8c 93       	st	X, r24
    5090:	8e e6       	ldi	r24, 0x6E	; 110
    5092:	11 96       	adiw	r26, 0x01	; 1
    5094:	8c 93       	st	X, r24
    5096:	86 e6       	ldi	r24, 0x66	; 102
    5098:	81 83       	std	Z+1, r24	; 0x01
    509a:	32 96       	adiw	r30, 0x02	; 2
    509c:	df 01       	movw	r26, r30
    509e:	89 2f       	mov	r24, r25
    50a0:	20 e2       	ldi	r18, 0x20	; 32
    50a2:	02 c0       	rjmp	.+4      	; 0x50a8 <dtoa_prf+0x14c>
    50a4:	2d 93       	st	X+, r18
    50a6:	81 50       	subi	r24, 0x01	; 1
    50a8:	88 23       	and	r24, r24
    50aa:	e1 f7       	brne	.-8      	; 0x50a4 <dtoa_prf+0x148>
    50ac:	e9 0f       	add	r30, r25
    50ae:	f1 1d       	adc	r31, r1
    50b0:	10 82       	st	Z, r1
    50b2:	2e ef       	ldi	r18, 0xFE	; 254
    50b4:	3f ef       	ldi	r19, 0xFF	; 255
    50b6:	af c0       	rjmp	.+350    	; 0x5216 <dtoa_prf+0x2ba>
    50b8:	16 16       	cp	r1, r22
    50ba:	17 06       	cpc	r1, r23
    50bc:	1c f0       	brlt	.+6      	; 0x50c4 <dtoa_prf+0x168>
    50be:	41 e0       	ldi	r20, 0x01	; 1
    50c0:	50 e0       	ldi	r21, 0x00	; 0
    50c2:	03 c0       	rjmp	.+6      	; 0x50ca <dtoa_prf+0x16e>
    50c4:	ab 01       	movw	r20, r22
    50c6:	4f 5f       	subi	r20, 0xFF	; 255
    50c8:	5f 4f       	sbci	r21, 0xFF	; 255
    50ca:	aa 20       	and	r10, r10
    50cc:	19 f4       	brne	.+6      	; 0x50d4 <dtoa_prf+0x178>
    50ce:	80 e0       	ldi	r24, 0x00	; 0
    50d0:	90 e0       	ldi	r25, 0x00	; 0
    50d2:	03 c0       	rjmp	.+6      	; 0x50da <dtoa_prf+0x17e>
    50d4:	8a 2d       	mov	r24, r10
    50d6:	90 e0       	ldi	r25, 0x00	; 0
    50d8:	01 96       	adiw	r24, 0x01	; 1
    50da:	20 e0       	ldi	r18, 0x00	; 0
    50dc:	30 e0       	ldi	r19, 0x00	; 0
    50de:	aa 23       	and	r26, r26
    50e0:	11 f0       	breq	.+4      	; 0x50e6 <dtoa_prf+0x18a>
    50e2:	21 e0       	ldi	r18, 0x01	; 1
    50e4:	30 e0       	ldi	r19, 0x00	; 0
    50e6:	24 0f       	add	r18, r20
    50e8:	35 1f       	adc	r19, r21
    50ea:	28 0f       	add	r18, r24
    50ec:	39 1f       	adc	r19, r25
    50ee:	81 2f       	mov	r24, r17
    50f0:	90 e0       	ldi	r25, 0x00	; 0
    50f2:	28 17       	cp	r18, r24
    50f4:	39 07       	cpc	r19, r25
    50f6:	14 f0       	brlt	.+4      	; 0x50fc <dtoa_prf+0x1a0>
    50f8:	20 e0       	ldi	r18, 0x00	; 0
    50fa:	02 c0       	rjmp	.+4      	; 0x5100 <dtoa_prf+0x1a4>
    50fc:	12 1b       	sub	r17, r18
    50fe:	21 2f       	mov	r18, r17
    5100:	4b 2d       	mov	r20, r11
    5102:	50 e0       	ldi	r21, 0x00	; 0
    5104:	ca 01       	movw	r24, r20
    5106:	80 71       	andi	r24, 0x10	; 16
    5108:	90 70       	andi	r25, 0x00	; 0
    510a:	b4 fc       	sbrc	r11, 4
    510c:	0d c0       	rjmp	.+26     	; 0x5128 <dtoa_prf+0x1cc>
    510e:	b3 fc       	sbrc	r11, 3
    5110:	0b c0       	rjmp	.+22     	; 0x5128 <dtoa_prf+0x1cc>
    5112:	f6 01       	movw	r30, r12
    5114:	32 2f       	mov	r19, r18
    5116:	40 e2       	ldi	r20, 0x20	; 32
    5118:	02 c0       	rjmp	.+4      	; 0x511e <dtoa_prf+0x1c2>
    511a:	41 93       	st	Z+, r20
    511c:	31 50       	subi	r19, 0x01	; 1
    511e:	33 23       	and	r19, r19
    5120:	e1 f7       	brne	.-8      	; 0x511a <dtoa_prf+0x1be>
    5122:	c2 0e       	add	r12, r18
    5124:	d1 1c       	adc	r13, r1
    5126:	01 c0       	rjmp	.+2      	; 0x512a <dtoa_prf+0x1ce>
    5128:	32 2f       	mov	r19, r18
    512a:	aa 23       	and	r26, r26
    512c:	19 f0       	breq	.+6      	; 0x5134 <dtoa_prf+0x1d8>
    512e:	f6 01       	movw	r30, r12
    5130:	a1 93       	st	Z+, r26
    5132:	6f 01       	movw	r12, r30
    5134:	89 2b       	or	r24, r25
    5136:	11 f0       	breq	.+4      	; 0x513c <dtoa_prf+0x1e0>
    5138:	13 2f       	mov	r17, r19
    513a:	0a c0       	rjmp	.+20     	; 0x5150 <dtoa_prf+0x1f4>
    513c:	f6 01       	movw	r30, r12
    513e:	13 2f       	mov	r17, r19
    5140:	80 e3       	ldi	r24, 0x30	; 48
    5142:	02 c0       	rjmp	.+4      	; 0x5148 <dtoa_prf+0x1ec>
    5144:	81 93       	st	Z+, r24
    5146:	11 50       	subi	r17, 0x01	; 1
    5148:	11 23       	and	r17, r17
    514a:	e1 f7       	brne	.-8      	; 0x5144 <dtoa_prf+0x1e8>
    514c:	c3 0e       	add	r12, r19
    514e:	d1 1c       	adc	r13, r1
    5150:	09 2d       	mov	r16, r9
    5152:	06 0f       	add	r16, r22
    5154:	ba 80       	ldd	r11, Y+2	; 0x02
    5156:	90 e1       	ldi	r25, 0x10	; 16
    5158:	89 2e       	mov	r8, r25
    515a:	91 2c       	mov	r9, r1
    515c:	8e 20       	and	r8, r14
    515e:	9f 20       	and	r9, r15
    5160:	e4 fe       	sbrs	r14, 4
    5162:	04 c0       	rjmp	.+8      	; 0x516c <dtoa_prf+0x210>
    5164:	f1 e3       	ldi	r31, 0x31	; 49
    5166:	bf 16       	cp	r11, r31
    5168:	09 f4       	brne	.+2      	; 0x516c <dtoa_prf+0x210>
    516a:	01 50       	subi	r16, 0x01	; 1
    516c:	10 16       	cp	r1, r16
    516e:	14 f0       	brlt	.+4      	; 0x5174 <dtoa_prf+0x218>
    5170:	01 e0       	ldi	r16, 0x01	; 1
    5172:	03 c0       	rjmp	.+6      	; 0x517a <dtoa_prf+0x21e>
    5174:	09 30       	cpi	r16, 0x09	; 9
    5176:	08 f0       	brcs	.+2      	; 0x517a <dtoa_prf+0x21e>
    5178:	08 e0       	ldi	r16, 0x08	; 8
    517a:	9b 01       	movw	r18, r22
    517c:	77 ff       	sbrs	r23, 7
    517e:	02 c0       	rjmp	.+4      	; 0x5184 <dtoa_prf+0x228>
    5180:	20 e0       	ldi	r18, 0x00	; 0
    5182:	30 e0       	ldi	r19, 0x00	; 0
    5184:	cb 01       	movw	r24, r22
    5186:	01 96       	adiw	r24, 0x01	; 1
    5188:	82 1b       	sub	r24, r18
    518a:	93 0b       	sbc	r25, r19
    518c:	fe 01       	movw	r30, r28
    518e:	31 96       	adiw	r30, 0x01	; 1
    5190:	e8 0f       	add	r30, r24
    5192:	f9 1f       	adc	r31, r25
    5194:	8e e2       	ldi	r24, 0x2E	; 46
    5196:	f8 2e       	mov	r15, r24
    5198:	3b 01       	movw	r6, r22
    519a:	60 1a       	sub	r6, r16
    519c:	71 08       	sbc	r7, r1
    519e:	8a 2d       	mov	r24, r10
    51a0:	90 e0       	ldi	r25, 0x00	; 0
    51a2:	44 27       	eor	r20, r20
    51a4:	55 27       	eor	r21, r21
    51a6:	48 1b       	sub	r20, r24
    51a8:	59 0b       	sbc	r21, r25
    51aa:	8f ef       	ldi	r24, 0xFF	; 255
    51ac:	2f 3f       	cpi	r18, 0xFF	; 255
    51ae:	38 07       	cpc	r19, r24
    51b0:	19 f4       	brne	.+6      	; 0x51b8 <dtoa_prf+0x25c>
    51b2:	d6 01       	movw	r26, r12
    51b4:	fd 92       	st	X+, r15
    51b6:	6d 01       	movw	r12, r26
    51b8:	62 17       	cp	r22, r18
    51ba:	73 07       	cpc	r23, r19
    51bc:	2c f0       	brlt	.+10     	; 0x51c8 <dtoa_prf+0x26c>
    51be:	62 16       	cp	r6, r18
    51c0:	73 06       	cpc	r7, r19
    51c2:	14 f4       	brge	.+4      	; 0x51c8 <dtoa_prf+0x26c>
    51c4:	80 81       	ld	r24, Z
    51c6:	01 c0       	rjmp	.+2      	; 0x51ca <dtoa_prf+0x26e>
    51c8:	80 e3       	ldi	r24, 0x30	; 48
    51ca:	21 50       	subi	r18, 0x01	; 1
    51cc:	30 40       	sbci	r19, 0x00	; 0
    51ce:	31 96       	adiw	r30, 0x01	; 1
    51d0:	24 17       	cp	r18, r20
    51d2:	35 07       	cpc	r19, r21
    51d4:	24 f0       	brlt	.+8      	; 0x51de <dtoa_prf+0x282>
    51d6:	d6 01       	movw	r26, r12
    51d8:	8d 93       	st	X+, r24
    51da:	6d 01       	movw	r12, r26
    51dc:	e6 cf       	rjmp	.-52     	; 0x51aa <dtoa_prf+0x24e>
    51de:	26 17       	cp	r18, r22
    51e0:	37 07       	cpc	r19, r23
    51e2:	49 f4       	brne	.+18     	; 0x51f6 <dtoa_prf+0x29a>
    51e4:	b5 e3       	ldi	r27, 0x35	; 53
    51e6:	bb 15       	cp	r27, r11
    51e8:	28 f0       	brcs	.+10     	; 0x51f4 <dtoa_prf+0x298>
    51ea:	bb 16       	cp	r11, r27
    51ec:	21 f4       	brne	.+8      	; 0x51f6 <dtoa_prf+0x29a>
    51ee:	81 14       	cp	r8, r1
    51f0:	91 04       	cpc	r9, r1
    51f2:	09 f4       	brne	.+2      	; 0x51f6 <dtoa_prf+0x29a>
    51f4:	81 e3       	ldi	r24, 0x31	; 49
    51f6:	f6 01       	movw	r30, r12
    51f8:	81 93       	st	Z+, r24
    51fa:	d6 01       	movw	r26, r12
    51fc:	81 2f       	mov	r24, r17
    51fe:	90 e2       	ldi	r25, 0x20	; 32
    5200:	02 c0       	rjmp	.+4      	; 0x5206 <dtoa_prf+0x2aa>
    5202:	9c 93       	st	X, r25
    5204:	81 50       	subi	r24, 0x01	; 1
    5206:	11 96       	adiw	r26, 0x01	; 1
    5208:	88 23       	and	r24, r24
    520a:	d9 f7       	brne	.-10     	; 0x5202 <dtoa_prf+0x2a6>
    520c:	e1 0f       	add	r30, r17
    520e:	f1 1d       	adc	r31, r1
    5210:	10 82       	st	Z, r1
    5212:	20 e0       	ldi	r18, 0x00	; 0
    5214:	30 e0       	ldi	r19, 0x00	; 0
    5216:	c9 01       	movw	r24, r18
    5218:	29 96       	adiw	r28, 0x09	; 9
    521a:	ee e0       	ldi	r30, 0x0E	; 14
    521c:	0c 94 55 27 	jmp	0x4eaa	; 0x4eaa <__epilogue_restores__+0x8>

00005220 <__ftoa_engine>:
    5220:	28 30       	cpi	r18, 0x08	; 8
    5222:	08 f0       	brcs	.+2      	; 0x5226 <__ftoa_engine+0x6>
    5224:	27 e0       	ldi	r18, 0x07	; 7
    5226:	33 27       	eor	r19, r19
    5228:	da 01       	movw	r26, r20
    522a:	99 0f       	add	r25, r25
    522c:	31 1d       	adc	r19, r1
    522e:	87 fd       	sbrc	r24, 7
    5230:	91 60       	ori	r25, 0x01	; 1
    5232:	00 96       	adiw	r24, 0x00	; 0
    5234:	61 05       	cpc	r22, r1
    5236:	71 05       	cpc	r23, r1
    5238:	39 f4       	brne	.+14     	; 0x5248 <__ftoa_engine+0x28>
    523a:	32 60       	ori	r19, 0x02	; 2
    523c:	2e 5f       	subi	r18, 0xFE	; 254
    523e:	3d 93       	st	X+, r19
    5240:	30 e3       	ldi	r19, 0x30	; 48
    5242:	2a 95       	dec	r18
    5244:	e1 f7       	brne	.-8      	; 0x523e <__ftoa_engine+0x1e>
    5246:	08 95       	ret
    5248:	9f 3f       	cpi	r25, 0xFF	; 255
    524a:	30 f0       	brcs	.+12     	; 0x5258 <__ftoa_engine+0x38>
    524c:	80 38       	cpi	r24, 0x80	; 128
    524e:	71 05       	cpc	r23, r1
    5250:	61 05       	cpc	r22, r1
    5252:	09 f0       	breq	.+2      	; 0x5256 <__ftoa_engine+0x36>
    5254:	3c 5f       	subi	r19, 0xFC	; 252
    5256:	3c 5f       	subi	r19, 0xFC	; 252
    5258:	3d 93       	st	X+, r19
    525a:	91 30       	cpi	r25, 0x01	; 1
    525c:	08 f0       	brcs	.+2      	; 0x5260 <__ftoa_engine+0x40>
    525e:	80 68       	ori	r24, 0x80	; 128
    5260:	91 1d       	adc	r25, r1
    5262:	df 93       	push	r29
    5264:	cf 93       	push	r28
    5266:	1f 93       	push	r17
    5268:	0f 93       	push	r16
    526a:	ff 92       	push	r15
    526c:	ef 92       	push	r14
    526e:	19 2f       	mov	r17, r25
    5270:	98 7f       	andi	r25, 0xF8	; 248
    5272:	96 95       	lsr	r25
    5274:	e9 2f       	mov	r30, r25
    5276:	96 95       	lsr	r25
    5278:	96 95       	lsr	r25
    527a:	e9 0f       	add	r30, r25
    527c:	ff 27       	eor	r31, r31
    527e:	e2 55       	subi	r30, 0x52	; 82
    5280:	ff 4f       	sbci	r31, 0xFF	; 255
    5282:	99 27       	eor	r25, r25
    5284:	33 27       	eor	r19, r19
    5286:	ee 24       	eor	r14, r14
    5288:	ff 24       	eor	r15, r15
    528a:	a7 01       	movw	r20, r14
    528c:	e7 01       	movw	r28, r14
    528e:	05 90       	lpm	r0, Z+
    5290:	08 94       	sec
    5292:	07 94       	ror	r0
    5294:	28 f4       	brcc	.+10     	; 0x52a0 <__ftoa_engine+0x80>
    5296:	36 0f       	add	r19, r22
    5298:	e7 1e       	adc	r14, r23
    529a:	f8 1e       	adc	r15, r24
    529c:	49 1f       	adc	r20, r25
    529e:	51 1d       	adc	r21, r1
    52a0:	66 0f       	add	r22, r22
    52a2:	77 1f       	adc	r23, r23
    52a4:	88 1f       	adc	r24, r24
    52a6:	99 1f       	adc	r25, r25
    52a8:	06 94       	lsr	r0
    52aa:	a1 f7       	brne	.-24     	; 0x5294 <__ftoa_engine+0x74>
    52ac:	05 90       	lpm	r0, Z+
    52ae:	07 94       	ror	r0
    52b0:	28 f4       	brcc	.+10     	; 0x52bc <__ftoa_engine+0x9c>
    52b2:	e7 0e       	add	r14, r23
    52b4:	f8 1e       	adc	r15, r24
    52b6:	49 1f       	adc	r20, r25
    52b8:	56 1f       	adc	r21, r22
    52ba:	c1 1d       	adc	r28, r1
    52bc:	77 0f       	add	r23, r23
    52be:	88 1f       	adc	r24, r24
    52c0:	99 1f       	adc	r25, r25
    52c2:	66 1f       	adc	r22, r22
    52c4:	06 94       	lsr	r0
    52c6:	a1 f7       	brne	.-24     	; 0x52b0 <__ftoa_engine+0x90>
    52c8:	05 90       	lpm	r0, Z+
    52ca:	07 94       	ror	r0
    52cc:	28 f4       	brcc	.+10     	; 0x52d8 <__ftoa_engine+0xb8>
    52ce:	f8 0e       	add	r15, r24
    52d0:	49 1f       	adc	r20, r25
    52d2:	56 1f       	adc	r21, r22
    52d4:	c7 1f       	adc	r28, r23
    52d6:	d1 1d       	adc	r29, r1
    52d8:	88 0f       	add	r24, r24
    52da:	99 1f       	adc	r25, r25
    52dc:	66 1f       	adc	r22, r22
    52de:	77 1f       	adc	r23, r23
    52e0:	06 94       	lsr	r0
    52e2:	a1 f7       	brne	.-24     	; 0x52cc <__ftoa_engine+0xac>
    52e4:	05 90       	lpm	r0, Z+
    52e6:	07 94       	ror	r0
    52e8:	20 f4       	brcc	.+8      	; 0x52f2 <__ftoa_engine+0xd2>
    52ea:	49 0f       	add	r20, r25
    52ec:	56 1f       	adc	r21, r22
    52ee:	c7 1f       	adc	r28, r23
    52f0:	d8 1f       	adc	r29, r24
    52f2:	99 0f       	add	r25, r25
    52f4:	66 1f       	adc	r22, r22
    52f6:	77 1f       	adc	r23, r23
    52f8:	88 1f       	adc	r24, r24
    52fa:	06 94       	lsr	r0
    52fc:	a9 f7       	brne	.-22     	; 0x52e8 <__ftoa_engine+0xc8>
    52fe:	84 91       	lpm	r24, Z+
    5300:	10 95       	com	r17
    5302:	17 70       	andi	r17, 0x07	; 7
    5304:	41 f0       	breq	.+16     	; 0x5316 <__ftoa_engine+0xf6>
    5306:	d6 95       	lsr	r29
    5308:	c7 95       	ror	r28
    530a:	57 95       	ror	r21
    530c:	47 95       	ror	r20
    530e:	f7 94       	ror	r15
    5310:	e7 94       	ror	r14
    5312:	1a 95       	dec	r17
    5314:	c1 f7       	brne	.-16     	; 0x5306 <__ftoa_engine+0xe6>
    5316:	e4 e5       	ldi	r30, 0x54	; 84
    5318:	f0 e0       	ldi	r31, 0x00	; 0
    531a:	68 94       	set
    531c:	15 90       	lpm	r1, Z+
    531e:	15 91       	lpm	r17, Z+
    5320:	35 91       	lpm	r19, Z+
    5322:	65 91       	lpm	r22, Z+
    5324:	95 91       	lpm	r25, Z+
    5326:	05 90       	lpm	r0, Z+
    5328:	7f e2       	ldi	r23, 0x2F	; 47
    532a:	73 95       	inc	r23
    532c:	e1 18       	sub	r14, r1
    532e:	f1 0a       	sbc	r15, r17
    5330:	43 0b       	sbc	r20, r19
    5332:	56 0b       	sbc	r21, r22
    5334:	c9 0b       	sbc	r28, r25
    5336:	d0 09       	sbc	r29, r0
    5338:	c0 f7       	brcc	.-16     	; 0x532a <__ftoa_engine+0x10a>
    533a:	e1 0c       	add	r14, r1
    533c:	f1 1e       	adc	r15, r17
    533e:	43 1f       	adc	r20, r19
    5340:	56 1f       	adc	r21, r22
    5342:	c9 1f       	adc	r28, r25
    5344:	d0 1d       	adc	r29, r0
    5346:	7e f4       	brtc	.+30     	; 0x5366 <__ftoa_engine+0x146>
    5348:	70 33       	cpi	r23, 0x30	; 48
    534a:	11 f4       	brne	.+4      	; 0x5350 <__ftoa_engine+0x130>
    534c:	8a 95       	dec	r24
    534e:	e6 cf       	rjmp	.-52     	; 0x531c <__ftoa_engine+0xfc>
    5350:	e8 94       	clt
    5352:	01 50       	subi	r16, 0x01	; 1
    5354:	30 f0       	brcs	.+12     	; 0x5362 <__ftoa_engine+0x142>
    5356:	08 0f       	add	r16, r24
    5358:	0a f4       	brpl	.+2      	; 0x535c <__ftoa_engine+0x13c>
    535a:	00 27       	eor	r16, r16
    535c:	02 17       	cp	r16, r18
    535e:	08 f4       	brcc	.+2      	; 0x5362 <__ftoa_engine+0x142>
    5360:	20 2f       	mov	r18, r16
    5362:	23 95       	inc	r18
    5364:	02 2f       	mov	r16, r18
    5366:	7a 33       	cpi	r23, 0x3A	; 58
    5368:	28 f0       	brcs	.+10     	; 0x5374 <__ftoa_engine+0x154>
    536a:	79 e3       	ldi	r23, 0x39	; 57
    536c:	7d 93       	st	X+, r23
    536e:	2a 95       	dec	r18
    5370:	e9 f7       	brne	.-6      	; 0x536c <__ftoa_engine+0x14c>
    5372:	10 c0       	rjmp	.+32     	; 0x5394 <__ftoa_engine+0x174>
    5374:	7d 93       	st	X+, r23
    5376:	2a 95       	dec	r18
    5378:	89 f6       	brne	.-94     	; 0x531c <__ftoa_engine+0xfc>
    537a:	06 94       	lsr	r0
    537c:	97 95       	ror	r25
    537e:	67 95       	ror	r22
    5380:	37 95       	ror	r19
    5382:	17 95       	ror	r17
    5384:	17 94       	ror	r1
    5386:	e1 18       	sub	r14, r1
    5388:	f1 0a       	sbc	r15, r17
    538a:	43 0b       	sbc	r20, r19
    538c:	56 0b       	sbc	r21, r22
    538e:	c9 0b       	sbc	r28, r25
    5390:	d0 09       	sbc	r29, r0
    5392:	98 f0       	brcs	.+38     	; 0x53ba <__ftoa_engine+0x19a>
    5394:	23 95       	inc	r18
    5396:	7e 91       	ld	r23, -X
    5398:	73 95       	inc	r23
    539a:	7a 33       	cpi	r23, 0x3A	; 58
    539c:	08 f0       	brcs	.+2      	; 0x53a0 <__ftoa_engine+0x180>
    539e:	70 e3       	ldi	r23, 0x30	; 48
    53a0:	7c 93       	st	X, r23
    53a2:	20 13       	cpse	r18, r16
    53a4:	b8 f7       	brcc	.-18     	; 0x5394 <__ftoa_engine+0x174>
    53a6:	7e 91       	ld	r23, -X
    53a8:	70 61       	ori	r23, 0x10	; 16
    53aa:	7d 93       	st	X+, r23
    53ac:	30 f0       	brcs	.+12     	; 0x53ba <__ftoa_engine+0x19a>
    53ae:	83 95       	inc	r24
    53b0:	71 e3       	ldi	r23, 0x31	; 49
    53b2:	7d 93       	st	X+, r23
    53b4:	70 e3       	ldi	r23, 0x30	; 48
    53b6:	2a 95       	dec	r18
    53b8:	e1 f7       	brne	.-8      	; 0x53b2 <__ftoa_engine+0x192>
    53ba:	11 24       	eor	r1, r1
    53bc:	ef 90       	pop	r14
    53be:	ff 90       	pop	r15
    53c0:	0f 91       	pop	r16
    53c2:	1f 91       	pop	r17
    53c4:	cf 91       	pop	r28
    53c6:	df 91       	pop	r29
    53c8:	99 27       	eor	r25, r25
    53ca:	87 fd       	sbrc	r24, 7
    53cc:	90 95       	com	r25
    53ce:	08 95       	ret

000053d0 <strrev>:
    53d0:	dc 01       	movw	r26, r24
    53d2:	fc 01       	movw	r30, r24
    53d4:	67 2f       	mov	r22, r23
    53d6:	71 91       	ld	r23, Z+
    53d8:	77 23       	and	r23, r23
    53da:	e1 f7       	brne	.-8      	; 0x53d4 <strrev+0x4>
    53dc:	32 97       	sbiw	r30, 0x02	; 2
    53de:	04 c0       	rjmp	.+8      	; 0x53e8 <strrev+0x18>
    53e0:	7c 91       	ld	r23, X
    53e2:	6d 93       	st	X+, r22
    53e4:	70 83       	st	Z, r23
    53e6:	62 91       	ld	r22, -Z
    53e8:	ae 17       	cp	r26, r30
    53ea:	bf 07       	cpc	r27, r31
    53ec:	c8 f3       	brcs	.-14     	; 0x53e0 <strrev+0x10>
    53ee:	08 95       	ret

000053f0 <__udivmodhi4>:
    53f0:	aa 1b       	sub	r26, r26
    53f2:	bb 1b       	sub	r27, r27
    53f4:	51 e1       	ldi	r21, 0x11	; 17
    53f6:	07 c0       	rjmp	.+14     	; 0x5406 <__udivmodhi4_ep>

000053f8 <__udivmodhi4_loop>:
    53f8:	aa 1f       	adc	r26, r26
    53fa:	bb 1f       	adc	r27, r27
    53fc:	a6 17       	cp	r26, r22
    53fe:	b7 07       	cpc	r27, r23
    5400:	10 f0       	brcs	.+4      	; 0x5406 <__udivmodhi4_ep>
    5402:	a6 1b       	sub	r26, r22
    5404:	b7 0b       	sbc	r27, r23

00005406 <__udivmodhi4_ep>:
    5406:	88 1f       	adc	r24, r24
    5408:	99 1f       	adc	r25, r25
    540a:	5a 95       	dec	r21
    540c:	a9 f7       	brne	.-22     	; 0x53f8 <__udivmodhi4_loop>
    540e:	80 95       	com	r24
    5410:	90 95       	com	r25
    5412:	bc 01       	movw	r22, r24
    5414:	cd 01       	movw	r24, r26
    5416:	08 95       	ret

00005418 <_exit>:
    5418:	f8 94       	cli

0000541a <__stop_program>:
    541a:	ff cf       	rjmp	.-2      	; 0x541a <__stop_program>
